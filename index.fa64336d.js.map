{"mappings":"yWAUAA,EACO,QADPA,EAEa,aAFbA,EAGa,aAHbA,EAIS,UAJTA,EAKa,aALbA,EAMmB,kBANnBA,EAOe,eAPfA,EAQqB,qBARrBA,EASQ,uQCyDRC,EA9DA,WAGK,SACHC,EAAYC,GAGPC,KACEC,mBAIFD,KACEE,iBAMFF,KACED,KAAOA,EAMTC,KACEG,OAAS,YAQhBL,EAAAM,UAAAC,eAAc,gBACPH,kBAAmB,GAO1BJ,EAAAM,UAAAE,gBAAe,gBACRL,oBAAqB,GAE9BH,EA9CA,GCPAS,EAMgB,+HCNb,IA4BHC,EA3BA,oBACEC,IAKKT,KACEU,UAAW,SAMlBD,EAAAL,UAAAO,QAAO,gBACKD,gBACHA,UAAW,OACXE,oBAQTH,EAAAL,UAAAQ,gBAAe,aACjBH,EAzBA,YCuCgBI,EAA0BC,EAAGC,UACpCD,EAAIC,EAAI,EAAID,EAAIC,GAAI,EAAK,WAoClBC,EAAkBC,EAAKd,EAAQe,OACvCC,EAAIF,EAAIG,UACVH,EAAI,IAAMd,EAAM,OACX,KACEA,GAAUc,EAAIE,EAAI,GAAC,OACrBA,EAAI,MAEPE,OAAC,KACDH,EAAY,GAAC,IACVG,EAAI,EAAGA,EAAIF,IAAKE,KACfJ,EAAII,GAAKlB,EAAM,OACVkB,EAAI,UAGNH,EAAY,GAAC,IACjBG,EAAI,EAAGA,EAAIF,IAAKE,KACfJ,EAAII,IAAMlB,EAAM,OACXkB,WAINA,EAAI,EAAGA,EAAIF,IAAKE,EAAC,IAChBJ,EAAII,IAAMlB,EAAM,OACXkB,KACEJ,EAAII,GAAKlB,QACE,mBAATe,EACLA,EAAUf,EAAQc,EAAII,EAAI,GAAIJ,EAAII,IAAM,EACnCA,EAAI,EAEJA,EAEAJ,EAAII,EAAI,GAAKlB,EAASA,EAASc,EAAII,GACrCA,EAAI,EAEJA,SAKRF,EAAI,WASCG,EAAgBL,EAAKM,EAAOC,QACnCD,EAAQC,GAAG,KACVC,EAAMR,EAAIM,GAChBN,EAAIM,GAASN,EAAIO,GACjBP,EAAIO,GAAOC,IACTF,IACAC,YASUE,EAAOT,EAAKU,WACpBC,EAAYC,MAAMC,QAAQH,GAAQA,EAAI,CAAIA,GAC1CP,EAASQ,EAAUR,OAChBC,EAAI,EAAGA,EAAID,EAAQC,IAC1BJ,EAAIA,EAAIG,QAAUQ,EAAUP,YA2ChBU,EAAOC,EAAMC,OACrBC,EAAOF,EAAKZ,UACdc,IAASD,EAAKb,OAAM,OACf,UAEAC,EAAI,EAAGA,EAAIa,EAAMb,OACpBW,EAAKX,KAAOY,EAAKZ,GAAC,OACb,SAGJ,WClMOc,WACP,WAOOC,WACP,WAQOC,SCdHC,EACS,mBAAbC,OAAOC,OACVD,OAAOC,OAAM,SACHrC,EAAQsC,MACZtC,MAAAA,EAAuC,MAAA,IAC/BuC,UAAS,sDAGfC,EAASJ,OAAOpC,GACbkB,EAAI,EAAGuB,EAAKC,UAAUzB,OAAQC,EAAIuB,IAAMvB,EAAC,KAC1CyB,EAASD,UAAUxB,MACrByB,MAAAA,UACSC,KAAOD,EACZA,EAAOE,eAAeD,KACxBJ,EAAOI,GAAOD,EAAOC,WAKtBJ,YAOCM,EAAMC,WACTC,KAAYD,SACdA,EAAOC,OAYLC,EACS,mBAAbb,OAAOc,OACVd,OAAOc,OAAM,SACHH,OACFG,EAAM,WACDF,KAAYD,EACrBG,EAAOC,KAAKJ,EAAOC,WAEdE,YAQCE,EAAQL,OAClBC,MACCA,KAAYD,EAAM,OACd,SAEDC,0cCgHVK,EA/JA,SAAAC,GAGK,SACHC,EAAYC,OAAZC,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKE,aAAeH,EAMpBC,EAAKG,iBAAmB,KAMxBH,EAAKI,aAAe,KAMpBJ,EAAKK,WAAa,cA7BDC,EAAAR,EAAAD,GAoCnBC,EAAAtD,UAAA+D,iBAAgB,SAACpE,EAAMqE,MAChBrE,GAASqE,OAGRC,EAASrE,KAAQiE,aAAUjE,KAAUiE,WAAU,IAC/CK,EAAmBD,EAAUtE,KAAUsE,EAAUtE,GAAI,KAChB,IAAvCuE,EAAiBC,QAAQH,IAC3BE,EAAiBhB,KAAKc,KAc1BV,EAAAtD,UAAAoE,cAAa,SAACC,GACqC,IAC3CC,EAAkB,iBAALD,EAAkB,IAAO5E,EAAM4E,GAASA,EACrD1E,EAAO2E,EAAI3E,KACZ2E,EAAIvE,SACPuE,EAAIvE,OAAMH,KAAQ8D,cAAY9D,UAG5B2E,EADEN,EAASrE,KAAQiE,YAAUjE,KAASiE,WAAWlE,MAEjDsE,EAAS,KACLO,EAAW5E,KAAQgE,eAAYhE,KAAUgE,aAAY,IACrDa,EAAe7E,KACd+D,mBAAgB/D,KAAU+D,iBAAgB,IAC3ChE,KAAQ6E,IACZA,EAAY7E,GAAQ,EACpB8E,EAAgB9E,GAAQ,KAExB6E,EAAY7E,WACLsB,EAAI,EAAGuB,EAAKyB,EAAUjD,OAAQC,EAAIuB,IAAMvB,MAU7B,KARhBsD,kBADmBN,EAAUhD,GAE3BgD,EAAUhD,GACVyD,YAAYJ,GAGZL,EAAUhD,GACVwC,KAAI7D,KAAO0E,KAEYA,EAAIzE,mBAAkB,CAC/C0E,GAAY,aAIdC,EAAY7E,GACY,IAAtB6E,EAAY7E,GAAW,KACrBgF,EAAKF,EAAgB9E,cAClB8E,EAAgB9E,GAChBgF,KAAE/E,KACFgF,oBAAoBjF,EAAMsC,UAE1BuC,EAAY7E,UAEd4E,IAOXjB,EAAAtD,UAAAQ,gBAAe,gBACRqD,YAAchB,EAAKjD,KAAMiE,aAUhCP,EAAAtD,UAAA6E,aAAY,SAAClF,eACEkE,YAAUjE,KAASiE,WAAWlE,SAAUmF,GAQvDxB,EAAAtD,UAAA+E,YAAW,SAACC,gBACAnB,aAGHmB,EACHA,KAAQpF,KAASiE,WACjB1B,OAAO8C,KAAIrF,KAAMiE,YAAY7C,OAAS,IAO5CsC,EAAAtD,UAAA4E,oBAAmB,SAACjF,EAAMqE,OAClBC,EAASrE,KAAQiE,YAAUjE,KAASiE,WAAWlE,MACjDsE,EAAS,KACLiB,EAAQjB,EAAUE,QAAQH,IAClB,IAAVkB,SACOvB,kBAAoBhE,KAAIC,KAAS+D,kBAExCM,EAAUiB,GAASjD,SACZ0B,iBAAiBhE,KAExBsE,EAAUkB,OAAOD,EAAO,GACC,IAArBjB,EAAUjD,eAAYpB,KACZiE,WAAWlE,OAMnC2D,EA7JA,CAAqBlD,GCnBrBgF,EAMQ,SANRA,EAaO,QAbPA,EAiBa,cAjBbA,EAkBO,QAlBPA,EAmBU,WAnBVA,EAwBS,UAxBTA,EAyBU,WAzBVA,EA0BM,OA1BNA,EA2BQ,SA3BRA,EA4BW,YA5BXA,EA6BO,iBCSSC,EAAOtF,EAAQJ,EAAMqE,EAAUsB,EAAUC,MACnDD,GAAYA,IAAavF,IAC3BiE,EAAWA,EAASwB,KAAKF,IAEvBC,EAAQ,KACJE,EAAmBzB,EACzBA,EAAQ,WACNjE,EAAO6E,oBAAoBjF,EAAMqE,GACjCyB,EAAiBC,MAAK9F,KAAO6C,gBAG3BkD,EAAS,CACb5F,OAAQA,EACRJ,KAAMA,EACNqE,SAAUA,UAEZjE,EAAOgE,iBAAiBpE,EAAMqE,GACvB2B,WAuBOC,EAAW7F,EAAQJ,EAAMqE,EAAUsB,UAC1CD,EAAOtF,EAAQJ,EAAMqE,EAAUsB,GAAU,YAYlCO,EAAclD,GACxBA,GAAOA,EAAI5C,SACb4C,EAAI5C,OAAO6E,oBAAoBjC,EAAIhD,KAAMgD,EAAIqB,UAC7CnB,EAAMF,ieC/DVmD,EAAA,SAAAzC,YACE0C,QAAAvC,EACEH,EAAAI,KAAA7D,OAAAA,YAKA4D,EAAKwC,GAAKxC,EAAKyC,WAKfzC,EAAK0C,KAAO1C,EAAK2C,aAKjB3C,EAAK4C,GAAK5C,EAAK6C,WAMf7C,EAAK8C,UAAY,WAvBIC,EAAAR,EAAA1C,GA8BvB0C,EAAA/F,UAAAwG,QAAO,kBACEF,eACFlC,cAAcgB,IASrBW,EAAA/F,UAAAyG,YAAW,uBACGH,WASdP,EAAA/F,UAAAiG,WAAU,SAACtG,EAAMqE,MACXvC,MAAMC,QAAQ/B,GAAI,SACd+G,EAAM/G,EAAKqB,OACXiE,EAAI,IAAOxD,MAAMiF,GACdzF,EAAI,EAAGA,EAAIyF,IAAOzF,EACzBgE,EAAKhE,GAAKoE,EAAMzF,KAAOD,EAAKsB,GAAI+C,UAE3BiB,SAEAI,EAAMzF,KAA8BD,EAAOqE,IAUtD+B,EAAA/F,UAAAmG,aAAY,SAACxG,EAAMqE,OACbrB,KACAlB,MAAMC,QAAQ/B,GAAI,KACd+G,EAAM/G,EAAKqB,OACjB2B,EAAG,IAAOlB,MAAMiF,WACPzF,EAAI,EAAGA,EAAIyF,IAAOzF,EACzB0B,EAAI1B,GAAK2E,EAAUhG,KAAOD,EAAKsB,GAAI+C,QAGrCrB,EAAMiD,EAAUhG,KAA8BD,EAAOqE,UAElC,EAAY2C,OAAShE,EACnCA,GASToD,EAAA/F,UAAAqG,WAAU,SAAC1G,EAAMqE,OACTrB,EAA6BqB,EAAU2C,UACzChE,EACFiE,EAAQjE,WACClB,MAAMC,QAAQ/B,GAAI,IAAA,IAClBsB,EAAI,EAAGuB,EAAK7C,EAAKqB,OAAQC,EAAIuB,IAAMvB,EAACrB,KACtCgF,oBAAoBjF,EAAKsB,GAAI+C,aAG/BY,oBAAoBjF,EAAMqE,IAGrC+B,EAvGA,CAAyBc,EAAAC,kBAgJTF,EAAQjE,MAClBlB,MAAMC,QAAQiB,GAAG,IAAA,IACV1B,EAAI,EAAGuB,EAAKG,EAAI3B,OAAQC,EAAIuB,IAAMvB,EACzC4E,EAAclD,EAAI1B,SAGpB4E,EAA8DlD,GAnClEmD,EAAW9F,UAAUgG,GAYrBF,EAAW9F,UAAUkG,KASrBJ,EAAW9F,UAAUoG,OAkBrBW,EAAejB,WC1LCkB,iCAGAC,MAAK,qCASlB,IACCC,GAAc,WAWFC,GAAOC,UACdA,EAAIC,SAAWD,EAAIC,OAASC,SAASJ,SAOjCK,GAAO,keC1BpBC,GAAA,SAAAnE,GAKK,SACHoE,EAAY9H,EAAMgD,EAAK+E,OAAvBlE,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKb,IAAMA,EAQXa,EAAKkE,SAAWA,WAtBaC,GAAAF,EAAApE,GAwBjCoE,EAxBA,CAAiChI,GAuPjCmI,GA3KA,SAAAvE,GAGK,SACHwE,EAAYC,OAAZtE,EACEH,EAAAI,KAAA7D,OAAAA,YAKA4D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAMLe,GAAO3D,GAMPA,EAAKuE,QAAU,UAEIjD,IAAfgD,GACFtE,EAAKwE,cAAcF,YAnCAH,GAAAE,EAAAxE,GA6CvBwE,EAAA7H,UAAAiI,IAAG,SAACtF,OACEuF,cACKH,SAAOnI,KAASmI,QAAQnF,eAAeD,KAC9CuF,EAAKtI,KAAQmI,QAAQpF,IAEhBuF,GAQTL,EAAA7H,UAAAmI,QAAO,uBACQJ,SAAW5F,OAAO8C,KAAIrF,KAAMmI,UAAO,IAQlDF,EAAA7H,UAAAoI,cAAa,uBACEL,SAAW7F,EAAM,QAAU6F,UAAO,IAMjDF,EAAA7H,UAAAqI,cAAa,wBACGN,SAOhBF,EAAA7H,UAAAsI,OAAM,SAAC3F,EAAK+E,OACNa,EACJA,EAAS,UAAa5F,OACjByB,cAAa,IAAKoD,GAAYe,EAAW5F,EAAK+E,IACnDa,EAAYpI,OACPiE,cAAa,IAAKoD,GAAYe,EAAW5F,EAAK+E,KAOrDG,EAAA7H,UAAAwI,kBAAiB,SAAC7F,EAAKqB,QAChBD,iBAAgB,UAAWpB,EAAOqB,IAOzC6D,EAAA7H,UAAAyI,qBAAoB,SAAC9F,EAAKqB,QACnBY,oBAAmB,UAAWjC,EAAOqB,IAU5C6D,EAAA7H,UAAA0I,IAAG,SAAC/F,EAAKuF,EAAOS,OACR1F,EAAMrD,KAAQmI,UAAOnI,KAAUmI,QAAO,OACxCY,EACF1F,EAAON,GAAOuF,WAERR,EAAWzE,EAAON,GACxBM,EAAON,GAAOuF,EACVR,IAAaQ,GAAKtI,KACf0I,OAAO3F,EAAK+E,KAYvBG,EAAA7H,UAAAgI,cAAa,SAAC/E,EAAQ0F,WACThG,KAAOM,EAAMrD,KACjB8I,IAAI/F,EAAKM,EAAON,GAAMgG,IAS/Bd,EAAA7H,UAAA4I,gBAAe,SAAClG,GACTA,EAAOqF,SAGZ7F,EAAMtC,KAAMmI,UAAOnI,KAAUmI,QAAO,IAAQrF,EAAOqF,UASrDF,EAAA7H,UAAA6I,MAAK,SAAClG,EAAKgG,WACAZ,SAAWpF,KAAG/C,KAASmI,QAAO,KAC/BL,EAAQ9H,KAAQmI,QAAQpF,eAClBoF,QAAQpF,GAChBQ,EAAOvD,KAAMmI,WAAOnI,KACjBmI,QAAU,MAEZY,GAAU/I,KACR0I,OAAO3F,EAAK+E,KAIzBG,EAzKA,CAAyBiB,EAAAhC,SChFnBiC,GAAK,CAKTC,QAAO,UAKPC,KAAI,KAKJC,OAAM,IAKNC,OAAM,SAKNC,YAAW,cAKXC,OAAM,SASKC,GAAe,GAE5BA,GAAgBP,GAAMC,SAAY,EAAIO,KAAKC,GAAK,QAAW,IAC3DF,GAAgBP,GAAME,MAAQ,MAC9BK,GAAgBP,GAAMG,QAAU,EAChCI,GAAgBP,GAAMM,QAAU,KAAO,SAEvCI,GAAeV,GCnDTW,GACY,oBAATC,gBAAuD,IAAnBA,UAAUC,UACjDD,UAAUC,UAAUC,cAAW,GAOxBC,IAAoC,IAA1BJ,GAAGvF,QAAO,WAYpB4F,KANkC,IAAzBL,GAAGvF,QAAO,WAAqBuF,GAAGvF,QAAO,UAMhB,IAAzBuF,GAAGvF,QAAO,YAA2C,GAAtBuF,GAAGvF,QAAO,SAMlD6F,IAAkC,IAA5BN,GAAGvF,QAAO,aAShB8F,GACY,oBAAhBC,iBAAmCA,iBAAmB,EAOlDC,GACa,oBAAjBC,mBACe,oBAAfC,iBACPC,gBAAgBF,kBAMLG,GACC,oBAALC,OAAyBA,MAAMxK,UAAUyK,OAKrCC,GAAuB,eAC9BC,GAAU,UAENC,EAAUzI,OAAO0I,eAAc,aAAc,CACjD5C,IAAG,WACD0C,GAAU,KAIdG,OAAO/G,iBAAgB,IAAM,KAAM6G,GACnCE,OAAOlG,oBAAmB,IAAM,KAAMgG,SAC/BG,WAGFJ,EAd2B,0gBClBpCK,GAnCA,SAAA3H,GAGK,SACH4H,EAAYC,OAAZ1H,EAAA5D,KAEQuL,EAAO,oDAD8B,IAAS5D,GAAQ6D,MAAK,KAAM,IAGjE,gBAEJF,EAAI,uBAGN1H,EAAAH,EAAAI,KAAA7D,KAAMuL,IAAOvL,MAURsL,KAAOA,EAKZ1H,EAAK6H,KAAI,iBAGT7H,EAAK2H,QAAUA,WA/BUG,GAAAL,EAAA5H,GAiC7B4H,EAjCA,CAA6BhE,gBCDbsE,GAAOC,EAAWC,OAC3BD,EAAS,MAAA,IACFE,GAAA5E,QAAe2E,GCiB1B,IAmPCE,GAlPM,IAAOlK,MAAM,YA6DPmK,GAAIC,EAAWnL,EAAGC,EAAGmL,EAAGC,EAAGC,EAAGC,UAC5CJ,EAAU,GAAKnL,EACfmL,EAAU,GAAKlL,EACfkL,EAAU,GAAKC,EACfD,EAAU,GAAKE,EACfF,EAAU,GAAKG,EACfH,EAAU,GAAKI,EACRJ,WA4BOK,GAAML,EAAWM,OACzBC,EAAID,EAAW,GACfE,EAAIF,EAAW,UACrBA,EAAW,GAAKN,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GAChEM,EAAW,GAAKN,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GACzDM,WA6DOG,GAAQT,EAAWU,EAAKC,EAAKC,EAAIC,EAAIC,EAAOC,EAAKC,OACzDC,EAAMvD,KAAKuD,IAAIH,GACfI,EAAMxD,KAAKwD,IAAIJ,UACrBd,EAAU,GAAKY,EAAKM,EACpBlB,EAAU,GAAKa,EAAKI,EACpBjB,EAAU,IAAMY,EAAKK,EACrBjB,EAAU,GAAKa,EAAKK,EACpBlB,EAAU,GAAKe,EAAMH,EAAKM,EAAMF,EAAMJ,EAAKK,EAAMP,EACjDV,EAAU,GAAKe,EAAMF,EAAKI,EAAMD,EAAMH,EAAKK,EAAMP,EAC1CX,WAqCOmB,GAAYjN,EAAQ2C,OA0BRuK,EAzBpBC,GAyBoBD,EAzBFvK,GA0Bb,GAAKuK,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAzBtC1B,GAAe,IAAR2B,EAAW,QAEZxM,EAAIgC,EAAO,GACX/B,EAAI+B,EAAO,GACXoJ,EAAIpJ,EAAO,GACXqJ,EAAIrJ,EAAO,GACXsJ,EAAItJ,EAAO,GACXuJ,EAAIvJ,EAAO,UAEjB3C,EAAO,GAAKgM,EAAImB,EAChBnN,EAAO,IAAMY,EAAIuM,EACjBnN,EAAO,IAAM+L,EAAIoB,EACjBnN,EAAO,GAAKW,EAAIwM,EAChBnN,EAAO,IAAM+L,EAAIG,EAAIF,EAAIC,GAAKkB,EAC9BnN,EAAO,KAAOW,EAAIuL,EAAItL,EAAIqL,GAAKkB,EAExBnN,WAwBOoN,GAASF,OACjBG,EAAe,UAAeH,EAAII,KAAI,MAAK,OAC7ClD,GAAuB,OAClBiD,MAEHE,EACJ3B,KAAuBA,GAAqB4B,SAASC,cAAa,eACpEF,EAAKG,MAAM5B,UAAYuB,EAChBE,EAAKG,MAAM5B,cCvRpB6B,GACa,cADbA,GAEc,eAFdA,GAGU,WAHVA,GAIW,YCJXC,GACW,EADXA,GAEgB,EAFhBA,GAGS,EAHTA,GAIS,EAJTA,GAKS,EALTA,GAMQ,YCMQC,GAAeC,WACvBC,EAASC,KACN9M,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAQC,EAAIuB,IAAMvB,EACjD+M,GAAiBF,EAAQD,EAAY5M,WAEhC6M,WA0BOG,GAAOH,EAAQ5F,EAAOgG,UAChCA,GACFA,EAAW,GAAKJ,EAAO,GAAK5F,EAC5BgG,EAAW,GAAKJ,EAAO,GAAK5F,EAC5BgG,EAAW,GAAKJ,EAAO,GAAK5F,EAC5BgG,EAAW,GAAKJ,EAAO,GAAK5F,EACrBgG,IAGLJ,EAAO,GAAK5F,EACZ4F,EAAO,GAAK5F,EACZ4F,EAAO,GAAK5F,EACZ4F,EAAO,GAAK5F,YAYFiG,GAAML,EAAQI,UACxBA,GACFA,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GAChBI,GAEAJ,EAAOM,iBAUFC,GAAyBP,EAAQ1B,EAAGC,OAC9CiC,EAAIC,SAEND,EADElC,EAAI0B,EAAO,GACRA,EAAO,GAAK1B,EACR0B,EAAO,GAAK1B,EAChBA,EAAI0B,EAAO,GAEX,GASKQ,GANVC,EADElC,EAAIyB,EAAO,GACRA,EAAO,GAAKzB,EACRyB,EAAO,GAAKzB,EAChBA,EAAIyB,EAAO,GAEX,GAEeS,WAWRC,GAAmBV,EAAQ3B,UAClCsC,GAAWX,EAAQ3B,EAAW,GAAIA,EAAW,aAetCuC,GAAeC,EAASC,UAEpCD,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,YAaVF,GAAWX,EAAQ1B,EAAGC,UAC7ByB,EAAO,IAAM1B,GAAKA,GAAK0B,EAAO,IAAMA,EAAO,IAAMzB,GAAKA,GAAKyB,EAAO,YAU3De,GAAuBf,EAAQ3B,OACvC2C,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACd1B,EAAID,EAAW,GACfE,EAAIF,EAAW,GACjB+C,EAAevB,UACfvB,EAAI0C,EACNI,GAA8BvB,GACrBvB,EAAI4C,IACbE,GAA8BvB,IAE5BtB,EAAI0C,EACNG,GAA8BvB,GACrBtB,EAAI4C,IACbC,GAA8BvB,IAE5BuB,IAAiBvB,KACnBuB,EAAevB,IAEVuB,WAQOnB,YACNoB,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,YAY1BC,GAAeN,EAAMC,EAAMC,EAAMC,EAAMf,UACjDA,GACFA,EAAW,GAAKY,EAChBZ,EAAW,GAAKa,EAChBb,EAAW,GAAKc,EAChBd,EAAW,GAAKe,EACTf,IAECY,EAAMC,EAAMC,EAAMC,YASdI,GAAoBnB,UAC3BkB,GAAeD,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,EAAUjB,YAgClDoB,GACdC,EACAC,EACApO,EACAqO,EACAvB,UAGOwB,GADQL,GAAoBnB,GACEqB,EAAiBC,EAAQpO,EAAKqO,YAoBrDE,GAAOhB,EAASC,UAE5BD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,YA+CVZ,GAAiBF,EAAQ3B,GACnCA,EAAW,GAAK2B,EAAO,KACzBA,EAAO,GAAK3B,EAAW,IAErBA,EAAW,GAAK2B,EAAO,KACzBA,EAAO,GAAK3B,EAAW,IAErBA,EAAW,GAAK2B,EAAO,KACzBA,EAAO,GAAK3B,EAAW,IAErBA,EAAW,GAAK2B,EAAO,KACzBA,EAAO,GAAK3B,EAAW,aAwBXuD,GACd5B,EACAyB,EACAC,EACApO,EACAqO,QAEOD,EAASpO,EAAKoO,GAAUC,EAC7BG,GAAS9B,EAAQyB,EAAgBC,GAASD,EAAgBC,EAAS,WAE9D1B,WAoBO8B,GAAS9B,EAAQ1B,EAAGC,GAClCyB,EAAO,GAAKvE,KAAKsG,IAAI/B,EAAO,GAAI1B,GAChC0B,EAAO,GAAKvE,KAAKsG,IAAI/B,EAAO,GAAIzB,GAChCyB,EAAO,GAAKvE,KAAKuG,IAAIhC,EAAO,GAAI1B,GAChC0B,EAAO,GAAKvE,KAAKuG,IAAIhC,EAAO,GAAIzB,YAYlB0D,GAAcjC,EAAQkC,OAChCC,SACJA,EAAMD,EAASE,GAAcpC,OAI7BmC,EAAMD,EAASG,GAAerC,OAI9BmC,EAAMD,EAASI,GAAYtC,KANlBmC,GAUTA,EAAMD,EAASK,GAAWvC,OAInB,WASOwC,GAAQxC,OAClByC,EAAO,SACNC,GAAQ1C,KACXyC,EAAOE,GAAS3C,GAAU4C,GAAU5C,IAE/ByC,WASOL,GAAcpC,UACpBA,EAAO,GAAIA,EAAO,aASZqC,GAAerC,UACrBA,EAAO,GAAIA,EAAO,aASZ6C,GAAU7C,WACfA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,YASjD8C,GAAU9C,EAAQ+C,OAC5B1E,SACA0E,IAAWnD,GACbvB,EAAa+D,GAAcpC,GAClB+C,IAAWnD,GACpBvB,EAAagE,GAAerC,GACnB+C,IAAWnD,GACpBvB,EAAakE,GAAWvC,GACf+C,IAAWnD,GACpBvB,EAAaiE,GAAYtC,GAEzBvC,IAAO,EAAO,IAETY,WAwBO2E,GACdC,EACAC,EACAC,EACAC,EACAhD,OAEMI,EAAM0C,EAAaE,EAAK,GAAM,EAC9B3C,EAAMyC,EAAaE,EAAK,GAAM,EAC9BC,EAAc5H,KAAKwD,IAAIkE,GACvBG,EAAc7H,KAAKuD,IAAImE,GACvBI,EAAO/C,EAAK6C,EACZG,EAAOhD,EAAK8C,EACZG,EAAOhD,EAAK4C,EACZK,EAAOjD,EAAK6C,EACZhF,EAAI2E,EAAO,GACX1E,EAAI0E,EAAO,GACXU,EAAKrF,EAAIiF,EAAOG,EAChBE,EAAKtF,EAAIiF,EAAOG,EAChBG,EAAKvF,EAAIiF,EAAOG,EAChBI,EAAKxF,EAAIiF,EAAOG,EAChBK,EAAKxF,EAAIiF,EAAOC,EAChBO,EAAKzF,EAAIiF,EAAOC,EAChBQ,EAAK1F,EAAIiF,EAAOC,EAChBS,EAAK3F,EAAIiF,EAAOC,SACfnC,GACL7F,KAAKsG,IAAI4B,EAAIC,EAAIC,EAAIC,GACrBrI,KAAKsG,IAAIgC,EAAIC,EAAIC,EAAIC,GACrBzI,KAAKuG,IAAI2B,EAAIC,EAAIC,EAAIC,GACrBrI,KAAKuG,IAAI+B,EAAIC,EAAIC,EAAIC,GACrB9D,YAUYwC,GAAU5C,UACjBA,EAAO,GAAKA,EAAO,YAqBZmE,GAAgBtD,EAASC,EAASV,OAC1CgE,EAAehE,IA1YbiB,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,UA2YjCgD,GAAWxD,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvBsD,EAAa,GAAKvD,EAAQ,GAE1BuD,EAAa,GAAKtD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBsD,EAAa,GAAKvD,EAAQ,GAE1BuD,EAAa,GAAKtD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBsD,EAAa,GAAKvD,EAAQ,GAE1BuD,EAAa,GAAKtD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBsD,EAAa,GAAKvD,EAAQ,GAE1BuD,EAAa,GAAKtD,EAAQ,IAG5BS,GAAoB6C,GAEfA,WA2BO7B,GAAWvC,UACjBA,EAAO,GAAIA,EAAO,aASZsC,GAAYtC,UAClBA,EAAO,GAAIA,EAAO,aASZ2C,GAAS3C,UAChBA,EAAO,GAAKA,EAAO,YAUZqE,GAAWxD,EAASC,UAEhCD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,YAUV4B,GAAQ1C,UACfA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,YA4GrCsE,GAAetE,EAAQuE,EAAanE,EAAYoE,OAC1DzE,EAAW,MACXyE,EAAY,UACRC,EAAQzE,EAAO,GAAKA,EAAO,GAC3B0E,EAAS1E,EAAO,GAAKA,EAAO,GACzB7M,EAAI,EAAGA,EAAIqR,IAAarR,EAC/B4M,EAAY3K,KACV4K,EAAO,GAAMyE,EAAQtR,EAAKqR,EAC1BxE,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM0E,EAASvR,EAAKqR,EAC3BxE,EAAO,GAAMyE,EAAQtR,EAAKqR,EAC1BxE,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM0E,EAASvR,EAAKqR,QAI/BzE,EAAW,CACTC,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXuE,EAAYxE,EAAaA,EAAa,WAChC4E,EAAE,GACFC,EAAE,GACQC,GAAP1R,EAAI,EAAO4M,EAAY7M,QAAQC,EAAI0R,EAAG1R,GAAK,EAClDwR,EAAGvP,KAAK2K,EAAY5M,IACpByR,EAAGxP,KAAK2K,EAAY5M,EAAI,WA5xBzB,SACyBwR,EAAIC,EAAIxE,UAK3BkB,GAJM7F,KAAKsG,IAAInK,MAAM,KAAM+M,GACrBlJ,KAAKsG,IAAInK,MAAM,KAAMgN,GACrBnJ,KAAKuG,IAAIpK,MAAM,KAAM+M,GACrBlJ,KAAKuG,IAAIpK,MAAM,KAAMgN,GACYxE,GAwxBvC0E,CAAmBH,EAAIC,EAAIxE,kIC9wBjC,IA4NH2E,GA3NA,WAGK,SACHC,EAAYlI,GAIPhL,KACEmT,MAAQnI,EAAQM,KAQlBtL,KACEoT,OAAsDpI,EAAQqI,MAQhErT,KACEsT,aAA6BpO,IAAnB8F,EAAQkD,OAAuBlD,EAAQkD,OAAS,KAQ5DlO,KACEuT,kBACqBrO,IAAxB8F,EAAQwI,YAA4BxI,EAAQwI,YAAc,KAKzDxT,KACEyT,sBACyBvO,IAA5B8F,EAAQ0I,gBAAgC1I,EAAQ0I,gBAAe,MAK9D1T,KACE2T,aAA6BzO,IAAnB8F,EAAQ4I,QAAuB5I,EAAQ4I,OAKnD5T,KACE6T,aAAS7T,KAAW2T,UAAO3T,KAASsT,SAKtCtT,KACE8T,wBAA0B9I,EAAQ+I,mBAKpC/T,KACEgU,iBAAmB,KAKrBhU,KACEiU,eAAiBjJ,EAAQkJ,qBAMhChB,EAAA9S,UAAA+T,SAAQ,uBACMN,WAQdX,EAAA9S,UAAAgU,QAAO,uBACOjB,OAQdD,EAAA9S,UAAAiU,UAAS,uBACKf,SAQdJ,EAAA9S,UAAAkU,SAAQ,uBACMlB,QAUdF,EAAA9S,UAAAmU,iBAAgB,uBACFN,gBAAkBvK,GAAe1J,KAAMoT,SAQrDF,EAAA9S,UAAAoU,eAAc,uBACAjB,cAcdL,EAAA9S,UAAAqU,mBAAkB,uBACJhB,kBAQdP,EAAA9S,UAAAsU,SAAQ,uBACMf,SAQdT,EAAA9S,UAAAuU,UAAS,SAACf,QACHD,QAAUC,OACVC,aAAeD,IAAM5T,KAASsT,UAMrCJ,EAAA9S,UAAAwU,mBAAkB,uBACJZ,kBAMdd,EAAA9S,UAAAyU,mBAAkB,SAACC,QACZd,iBAAmBc,GAQ1B5B,EAAA9S,UAAA2U,UAAS,SAAC7G,QACHoF,QAAUpF,OACV2F,aAAS7T,KAAW2T,UAAWzF,IAStCgF,EAAA9S,UAAA4U,eAAc,SAACxB,QACRD,aAAeC,GAStBN,EAAA9S,UAAA6U,sBAAqB,SAACC,QACfpB,wBAA0BoB,GAQjChC,EAAA9S,UAAA+U,uBAAsB,uBACRrB,yBAEhBZ,EAzNA,YCvCgBkC,GAAM9M,EAAO2H,EAAKC,UACzBvG,KAAKsG,IAAItG,KAAKuG,IAAI5H,EAAO2H,GAAMC,OAY3BmF,YAIG1L,KAELA,KAAK2L,KAGR,SAAa9I,OACTC,EAAyB9C,KAAM4L,IAAI/I,UACjCC,EAAI,EAAIA,GAAK,GAed+I,YAIG7L,KAELA,KAAK8L,KAGR,SAAajJ,UACR7C,KAAK+L,IAAIlJ,GAAK7C,KAAKgM,gBAiBhBC,GAAuBpJ,EAAGC,EAAGqF,EAAII,EAAIH,EAAII,OACjDzD,EAAKqD,EAAKD,EACVnD,EAAKwD,EAAKD,KACL,IAAPxD,GAAmB,IAAPC,EAAQ,KAChBkH,IAAMrJ,EAAIsF,GAAMpD,GAAMjC,EAAIyF,GAAMvD,IAAOD,EAAKA,EAAKC,EAAKA,GACxDkH,EAAI,GACN/D,EAAKC,EACLG,EAAKC,GACI0D,EAAI,IACb/D,GAAMpD,EAAKmH,EACX3D,GAAMvD,EAAKkH,UAGRC,GAAgBtJ,EAAGC,EAAGqF,EAAII,YAWnB4D,GAAgBhE,EAAII,EAAIH,EAAII,OACpCzD,EAAKqD,EAAKD,EACVnD,EAAKwD,EAAKD,SACTxD,EAAKA,EAAKC,EAAKA,WAgERoH,GAAUC,UACC,IAAjBA,EAAwBrM,KAAKC,YASvBqM,GAAUC,UAChBA,EAAiBvM,KAAKC,GAAM,aAUtBuM,GAAOrV,EAAGC,OAClBqV,EAAItV,EAAIC,SACPqV,EAAIrV,EAAI,EAAIqV,EAAIrV,EAAIqV,WAWbC,GAAKvV,EAAGC,EAAGyL,UAClB1L,EAAI0L,GAAKzL,EAAID,ieC/LTwV,GAAS,QAMTC,GAAY5M,KAAKC,GAAK0M,GAMtBE,GAAM,EAAKD,IAAYA,GAAWA,GAAWA,IAM7CE,GAAY,EAAI,KAAM,GAAK,IAAK,IAOhCC,GAAaJ,GAAS3M,KAAK+L,IAAI/L,KAAKgN,IAAIhN,KAAKC,GAAK,IAM/DgN,GAAA,SAAAnT,GAGK,SACHoT,EAAYvL,UACV7H,EAAAI,KAAA7D,KAAA,CACEsL,KAAMA,EACN+H,MAAOxJ,GAAMP,OACb4E,OAAQsI,GACR5C,QAAQ,EACRJ,YAAaiD,GACb1C,mBAAkB,SAAY3C,EAAY0F,UACjC1F,EAAaiE,GAAKyB,EAAM,GAAKR,oBAZXS,GAAAF,EAAApT,GAgBjCoT,EAhBA,CAAiC5D,IAwBpB+D,GAAW,KAClBJ,GAAkB,iBAClBA,GAAkB,mBAClBA,GAAkB,mBAClBA,GAAkB,mBAClBA,GAAkB,0DAWRK,GAAaC,EAAOC,EAAYC,OACxChW,EAAS8V,EAAM9V,OACfiW,EAAYD,EAAgB,EAAIA,EAAgB,EAClDzU,EAASwU,OACEjS,IAAXvC,IAGAA,EAFE0U,EAAY,EAELH,EAAM1I,QAET,IAAO3M,MAAMT,YAGdC,EAAI,EAAGA,EAAID,EAAQC,GAAKgW,EAAS,CACxC1U,EAAOtB,GAAMkV,GAAYW,EAAM7V,GAAM,QACjCoL,EAAI6J,GAAS3M,KAAK+L,IAAI/L,KAAKgN,IAAKhN,KAAKC,KAAOsN,EAAM7V,EAAI,GAAK,IAAO,MAClEoL,EAAIiK,GACNjK,EAAIiK,GACKjK,GAAKiK,KACdjK,GAAKiK,IAEP/T,EAAOtB,EAAI,GAAKoL,SAEX9J,WAWO2U,GAAWJ,EAAOC,EAAYC,OACtChW,EAAS8V,EAAM9V,OACfiW,EAAYD,EAAgB,EAAIA,EAAgB,EAClDzU,EAASwU,OACEjS,IAAXvC,IAGAA,EAFE0U,EAAY,EAELH,EAAM1I,QAET,IAAO3M,MAAMT,YAGdC,EAAI,EAAGA,EAAID,EAAQC,GAAKgW,EAC/B1U,EAAOtB,GAAM,IAAM6V,EAAM7V,GAAMkV,GAC/B5T,EAAOtB,EAAI,GACR,IAAMsI,KAAK4N,KAAK5N,KAAK4L,IAAI2B,EAAM7V,EAAI,GAAKiV,KAAY3M,KAAKC,GAAK,UAE5DjH,ihBClHI6U,GAAM,EAAI,KAAM,GAAK,IAAK,IAM1BC,GAdS,QAcU9N,KAAKC,GAAe,IAUpD8N,GAAA,SAAAjU,GAIK,SACHkU,EAAYrM,EAAMsM,UAChBnU,EAAAI,KAAA7D,KAAA,CACEsL,KAAMA,EACN+H,MAAOxJ,GAAMT,QACb8E,OAAQsJ,GACR9D,gBAAiBkE,EACjBhE,QAAQ,EACRM,cAAeuD,GACfjE,YAAagE,kBAbcK,GAAAF,EAAAlU,GAgBjCkU,EAhBA,CAAiC1E,IAwBpB6E,GAAW,KAClBJ,GAAkB,cAClBA,GAAkB,YAAY,WAC9BA,GAAkB,qCAClBA,GAAkB,gCAClBA,GAAkB,+CAA+C,QC1DnEK,GAAK,GCCN,IACCC,GAAU,YAiBEC,GAAInV,EAAQoV,EAAazF,OACjC0F,EAAarV,EAAOsR,UACpBgE,EAAkBF,EAAY9D,UAC9B+D,KAAcH,KAClBA,GAAWG,GAAU,IAEvBH,GAAWG,GAAYC,GAAmB3F,MCT/B4F,GAAiB,mBAWdC,GAAYC,EAAIC,EAAIC,OAC5BC,EAASD,GAAcJ,GACvBM,EAAO1C,GAAUsC,EAAG,IACpBK,EAAO3C,GAAUuC,EAAG,IACpBK,GAAeD,EAAOD,GAAQ,EAC9BG,EAAc7C,GAAUuC,EAAG,GAAKD,EAAG,IAAM,EACzCzX,EACJ6I,KAAKuD,IAAI2L,GAAelP,KAAKuD,IAAI2L,GACjClP,KAAKuD,IAAI4L,GACPnP,KAAKuD,IAAI4L,GACTnP,KAAKwD,IAAIwL,GACThP,KAAKwD,IAAIyL,UACN,EAAIF,EAAS/O,KAAKoP,MAAMpP,KAAKqP,KAAKlY,GAAI6I,KAAKqP,KAAK,EAAIlY,aAyM7CmY,GAAOV,EAAIW,EAAUC,EAASV,OACtCC,EAASD,GAAcJ,GACvBM,EAAO1C,GAAUsC,EAAG,IACpBa,EAAOnD,GAAUsC,EAAG,IACpBc,EAAOH,EAAWR,EAClBY,EAAM3P,KAAK4P,KACf5P,KAAKuD,IAAIyL,GAAQhP,KAAKwD,IAAIkM,GACxB1P,KAAKwD,IAAIwL,GAAQhP,KAAKuD,IAAImM,GAAQ1P,KAAKwD,IAAIgM,WAQvCpD,GALNqD,EACAzP,KAAKoP,MACHpP,KAAKuD,IAAIiM,GAAWxP,KAAKuD,IAAImM,GAAQ1P,KAAKwD,IAAIwL,GAC9ChP,KAAKwD,IAAIkM,GAAQ1P,KAAKuD,IAAIyL,GAAQhP,KAAKuD,IAAIoM,KAEvBvD,GAAUuD,aCrBpBE,GAAOC,EAAaC,WAC9BC,GAAS,EACJtY,EAAIoY,EAAYrY,OAAS,EAAGC,GAAK,IAAKA,EAAC,GAC1CoY,EAAYpY,IAAMqY,EAAYrY,GAAC,CACjCsY,GAAS,eAINA,WAqBOC,GAAOrN,EAAYQ,OAC3B8M,EAAWlQ,KAAKwD,IAAIJ,GACpB+M,EAAWnQ,KAAKuD,IAAIH,GACpBP,EAAID,EAAW,GAAKsN,EAAWtN,EAAW,GAAKuN,EAC/CrN,EAAIF,EAAW,GAAKsN,EAAWtN,EAAW,GAAKuN,SACrDvN,EAAW,GAAKC,EAChBD,EAAW,GAAKE,EACTF,WA+BOwN,GAAgBC,EAAQC,OAChCvL,EAAKsL,EAAO,GAAKC,EAAO,GACxBtL,EAAKqL,EAAO,GAAKC,EAAO,UACvBvL,EAAKA,EAAKC,EAAKA,WAoGRuL,GAAM3N,EAAY4N,MAC5BA,EAAWhG,WAAQ,KACfiG,EAAavJ,GAASsJ,EAAW9F,aACjCgG,EAAaC,GAAc/N,EAAY4N,EAAYC,GACrDC,IACF9N,EAAW,IAAM8N,EAAaD,UAG3B7N,WAQO+N,GAAc/N,EAAY4N,EAAYI,OAC9CC,EAAmBL,EAAW9F,YAChCgG,EAAa,KAEfF,EAAWhG,aACV5H,EAAW,GAAKiO,EAAiB,IAAMjO,EAAW,GAAKiO,EAAiB,IAAC,KAEpEC,EACJF,GAAyB1J,GAAS2J,GACpCH,EAAa1Q,KAAK+Q,OACfnO,EAAW,GAAKiO,EAAiB,IAAMC,UAGrCJ,WC9UOM,GAAezD,EAAOC,EAAYC,OAC5CzU,UACeuC,IAAfiS,EAAwB,SACjB9V,EAAI,EAAGuB,EAAKsU,EAAM9V,OAAQC,EAAIuB,IAAMvB,EAC3C8V,EAAW9V,GAAK6V,EAAM7V,GAExBsB,EAASwU,OAETxU,EAASuU,EAAM1I,eAEV7L,WASOiY,GAAkB1D,EAAOC,EAAYC,WAChClS,IAAfiS,GAA4BD,IAAUC,EAAU,SACzC9V,EAAI,EAAGuB,EAAKsU,EAAM9V,OAAQC,EAAIuB,IAAMvB,EAC3C8V,EAAW9V,GAAK6V,EAAM7V,GAExB6V,EAAQC,SAEHD,WAUO2D,GAAcV,aJ5GV7O,EAAM6O,GACxBpC,GAAMzM,GAAQ6O,EI4GdW,CAAQX,EAAW/F,UAAW+F,GAC9BlC,GAAiBkC,EAAYA,EAAYQ,aAmB3BI,GAAIC,SACU,iBAAdA,EJ7IZjD,GAFgBzM,EIgJiB0P,IJ7IjCjD,GAAMzM,EAAK2P,QAAO,yCAAA,aAClB,KI6I6BD,GAAmB,SJjJhC1P,WIwKJ4P,GAAmBf,EAAY/I,EAAY0F,EAAOqE,OAE5DC,EACEC,GAFNlB,EAAaY,GAAIZ,IAEShF,4BACtBkG,EAAM,IACRD,EAAkBC,EAAOjK,EAAY0F,GACjCqE,GAAaA,IAAchB,EAAW7F,YAClCJ,EAAgBiG,EAAW5F,sBAE/B6G,EACGA,EAAkBlH,EAAiBxK,GAAgByR,aAIpD9H,EAAQ8G,EAAW7F,cACpBjB,GAASxJ,GAAMT,UAAY+R,GAAcA,GAAatR,GAAMT,QAC/DgS,EAAkBhK,WA4BZ8C,EAvBAoH,EAAaC,GACjBpB,EACAY,GAAG,iBAEDO,IAAeV,IAAqBvH,IAAUxJ,GAAMT,QAEtDgS,EAAkBhK,EAAa+I,EAAW5F,4BAEtCiH,EAAQ,CACV1E,EAAM,GAAK1F,EAAa,EACxB0F,EAAM,GACNA,EAAM,GAAK1F,EAAa,EACxB0F,EAAM,GACNA,EAAM,GACNA,EAAM,GAAK1F,EAAa,EACxB0F,EAAM,GACNA,EAAM,GAAK1F,EAAa,GAK1BgK,GAFc9C,IADdkD,EAAWF,EAAWE,EAAUA,EAAU,IACPhN,MAAM,EAAG,GAAIgN,EAAShN,MAAM,EAAG,IACnD8J,GAAYkD,EAAShN,MAAM,EAAG,GAAIgN,EAAShN,MAAM,EAAG,KAC9B,OAKjBtJ,KAHhBgP,EAAgBiH,EAClBzR,GAAgByR,GAChBhB,EAAW5F,sBAEb6G,GAAmBlH,WAIlBkH,WAUOK,GAAyBC,aArGVA,GAC7BA,EAAYC,QAAQd,IAqGpBe,CAAeF,GACfA,EAAYC,SAAO,SAAW7Y,GAC5B4Y,EAAYC,SAAO,SAAWzD,GACxBpV,IAAWoV,GACbD,GAAiBnV,EAAQoV,EAAayC,mBA8C9BkB,GAAiB1B,EAAY2B,UACtC3B,EAEuB,iBAAVA,EACTY,GAAIZ,GAEuBA,EAJ3BY,GAAIe,YA2HCC,GAAWC,EAAaC,MAClCD,IAAgBC,EAAW,OACtB,MAEHC,EAAaF,EAAY1H,aAAe2H,EAAY3H,kBACtD0H,EAAY5H,YAAc6H,EAAY7H,WAGlBmH,GAA4BS,EAAaC,KACtCtB,KAHlBuB,WAgBKX,GACdY,EACAC,OAIIC,WH1YclE,EAAYC,OAC1BnM,SACAkM,KAAcH,IAAcI,KAAmBJ,GAAWG,KAC5DlM,EAAY+L,GAAWG,GAAYC,IAE9BnM,EGqYaqQ,CAFDH,EAAiB/H,UACZgI,EAAsBhI,kBAEzCiI,IACHA,EAAgBzB,IAEXyB,WAaOE,GAAazZ,EAAQoV,UAG5BqD,GAFkBR,GAAIjY,GACCiY,GAAI7C,aAkBpBsE,GAAUjQ,EAAYzJ,EAAQoV,UACtBqE,GAAazZ,EAAQoV,EACpCmE,CAAc9P,OAAYrH,EAAWqH,EAAWnL,iBAezCqb,GAAgBvO,EAAQpL,EAAQoV,EAAaxF,UAEpDF,GAAetE,EADAqO,GAAazZ,EAAQoV,QACEhT,EAAWwN,GAyBvD,IAnQDgK,GACAC,GACAC,GAkQEC,GAAiB,cA2BLC,YACPD,YAmBOE,GAAiBxQ,EAAY4P,UACtCU,GAGEL,GAAUjQ,EAAY4P,EAAkBU,IAFtCtQ,WAYKyQ,GAAmBzQ,EAAY0Q,UACxCJ,GAGEL,GAAUjQ,EAAYsQ,GAAgBI,GAFpC1Q,WAYK2Q,GAAahP,EAAQiO,UAC9BU,GAGEJ,GAAgBvO,EAAQiO,EAAkBU,IAFxC3O,WAYKiP,GAAejP,EAAQ+O,UAChCJ,GAGEJ,GAAgBvO,EAAQ2O,GAAgBI,GAFtC/O,WCvmBKkP,GACdzN,EACAC,EACApO,EACAqO,EACA5D,EACAoR,WAEMC,EAAOD,GAAmB,GAC5Bhc,EAAI,EACCkc,EAAI3N,EAAQ2N,EAAI/b,EAAK+b,GAAK1N,EAAM,KACjCrD,EAAImD,EAAgB4N,GACpB9Q,EAAIkD,EAAgB4N,EAAI,GAC9BD,EAAKjc,KAAO4K,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GAC5DqR,EAAKjc,KAAO4K,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,UAE1DoR,GAAYC,EAAKlc,QAAUC,IAC7Bic,EAAKlc,OAASC,GAETic,WAaOE,GACd7N,EACAC,EACApO,EACAqO,EACA9C,EACA0Q,EACAJ,WAEMC,EAAOD,GAAmB,GAC1BlQ,EAAMxD,KAAKwD,IAAIJ,GACfG,EAAMvD,KAAKuD,IAAIH,GACf2Q,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACnBpc,EAAI,EACCkc,EAAI3N,EAAQ2N,EAAI/b,EAAK+b,GAAK1N,EAAM,KACjC+N,EAASjO,EAAgB4N,GAAKG,EAC9BG,EAASlO,EAAgB4N,EAAI,GAAKI,EACxCL,EAAKjc,KAAOqc,EAAUE,EAASzQ,EAAM0Q,EAAS3Q,EAC9CoQ,EAAKjc,KAAOsc,EAAUC,EAAS1Q,EAAM2Q,EAAS1Q,UACrC2Q,EAAIP,EAAI,EAAGO,EAAIP,EAAI1N,IAAUiO,EACpCR,EAAKjc,KAAOsO,EAAgBmO,UAG5BT,GAAYC,EAAKlc,QAAUC,IAC7Bic,EAAKlc,OAASC,GAETic,WAsDOS,GACdpO,EACAC,EACApO,EACAqO,EACA+N,EACAC,EACAR,WAEMC,EAAOD,GAAmB,GAC5Bhc,EAAI,EACCkc,EAAI3N,EAAQ2N,EAAI/b,EAAK+b,GAAK1N,EAAM,CACvCyN,EAAKjc,KAAOsO,EAAgB4N,GAAKK,EACjCN,EAAKjc,KAAOsO,EAAgB4N,EAAI,GAAKM,UAC5BC,EAAIP,EAAI,EAAGO,EAAIP,EAAI1N,IAAUiO,EACpCR,EAAKjc,KAAOsO,EAAgBmO,UAG5BT,GAAYC,EAAKlc,QAAUC,IAC7Bic,EAAKlc,OAASC,GAETic,EDmhBP7B,GAAyBuC,GAAAC,aACzBxC,GAAyByC,GAAAD,aAlZzBvB,GAuZEsB,GAAAC,YAtZFtB,GAuZEqB,GAAAG,aAtZFvB,GAuZEoB,GAAAI,WAHAF,GAAAD,YAlZWtC,SAAO,SAAWK,GAC7BU,GAAaf,SAAO,SAAWM,GAC7BhE,GAAiB+D,EAAaC,EAAaU,IAC3C1E,GAAiBgE,EAAaD,EAAaY,weErQ3CyB,IdaI,EAAG,EAAG,EAAG,EAAG,EAAG,Gc0SzBC,GAzSA,SAAA7a,YACE8a,Q1BAyBC,EAIrBC,EAGAC,EAEAC,EARAC,E0BDJhb,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAK0P,SXsJC/D,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,GWhJnC3L,EAAKib,iBAAkB,EAMvBjb,EAAKkb,yCAA2C,EAMhDlb,EAAKmb,2BAA6B,EAUlCnb,EAAKob,6B1BnCkBR,E0BmCsB,SAC3CS,EACAC,EACAC,OAEKA,EAAa,OAAAnf,KACJof,sBAAsBF,OAE9BG,EAAKrf,KAAQqf,eACnBA,EAAMC,eAAeH,GACdE,EAAMD,sBAAsBF,I1B5CnCN,GAAS,iBAWLW,EAAW1d,MAAMzB,UAAUoO,MAAM3K,KAAKhB,kBACvC+b,GAAM5e,OAAa2e,GAAa5c,EAAYwd,EAAUb,KACzDE,GAAS,EACTD,EAAQ3e,KACR0e,EAAWa,EACXd,EAAaD,EAAG1Y,MAAK9F,KAAO6C,YAEvB4b,a0BpBYe,GAAAjB,EAAA9a,GAyDrB8a,EAAAne,UAAAqf,oBAAmB,SAACP,EAAkBC,eACxBH,4BAA2Bhf,KAChC6G,cACLqY,EACAC,IASJZ,EAAAne,UAAAif,MAAK,kBACIjY,MAWTmX,EAAAne,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,UAC1BxY,MAQTmX,EAAAne,UAAAyf,WAAU,SAACrT,EAAGC,OACNqT,EAAK9f,KAAQ+f,gBAAe,CAAEvT,EAAGC,WAChCqT,EAAM,KAAOtT,GAAKsT,EAAM,KAAOrT,GAWxC8R,EAAAne,UAAA2f,gBAAe,SAACjJ,EAAOkJ,OACfL,EAAeK,GAAmC,CAAIC,IAAKA,iBAC5DP,eAAe5I,EAAM,GAAIA,EAAM,GAAI6I,EAAcpQ,EAAAA,GAC/CoQ,GAUTpB,EAAAne,UAAA8f,qBAAoB,SAAC3T,eACPsT,WAAWtT,EAAW,GAAIA,EAAW,KASnDgS,EAAAne,UAAA+f,cAAa,SAACjS,UACL9G,MASTmX,EAAAne,UAAAiU,UAAS,SAAC/F,WACCuQ,iBAAe7e,KAAS6G,cAAW,KACpCqH,EAAMlO,KAAQmgB,cAAangB,KAAMsT,UACnC8M,MAAMlS,EAAO,KAAOkS,MAAMlS,EAAO,MACnCuB,GAAoBvB,QAEjB2Q,gBAAe7e,KAAQ6G,8BXogBHqH,EAAQI,UACjCA,GACFA,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GAChBI,GAEAJ,EW1gBAmS,CAAcrgB,KAAMsT,QAAShF,IAWtCiQ,EAAAne,UAAAkgB,OAAM,SAACvT,EAAO0Q,GACZrW,MAaFmX,EAAAne,UAAAmgB,MAAK,SAAC1T,EAAI2T,EAAQC,GAChBrZ,MAYFmX,EAAAne,UAAAsgB,SAAQ,SAACC,eACKvB,sBAAsBuB,EAAYA,IAWhDpC,EAAAne,UAAAgf,sBAAqB,SAACF,UACb9X,MAQTmX,EAAAne,UAAAwgB,QAAO,kBACExZ,MAYTmX,EAAAne,UAAAkf,eAAc,SAAC7M,GACbrL,MASFmX,EAAAne,UAAAygB,iBAAgB,SAAC3S,UACR9G,MAWTmX,EAAAne,UAAA0gB,UAAS,SAAClD,EAAQC,GAChBzW,MAkBFmX,EAAAne,UAAA6L,UAAS,SAACnJ,EAAQoV,GACsC,IAChD6I,EAAahG,GAAcjY,GAC3B2P,EACJsO,EAAWzM,YAAczK,GAAML,YAAW,SAC5BwX,EAAeC,EAAgBpR,OACjCqR,EAAcH,EAAW1M,YACzB8M,EAAkBJ,EAAWvM,iBAC7B+L,EAAQzP,GAAUqQ,GAAmBrQ,GAAUoQ,UACrDxU,GACE2R,GACA8C,EAAgB,GAChBA,EAAgB,GAChBZ,GACCA,EACD,EACA,EACA,GAEFnD,GACE4D,EACA,EACAA,EAAc5f,OACdyO,EACAwO,GACA4C,GAEK1E,GAAawE,EAAY7I,EAAzBqE,CACLyE,EACAC,EACApR,IAGJ0M,GAAawE,EAAY7I,eAC1BoH,eAAe7M,SAGxB8L,EAvSA,CAAuB6C,EAAAla,SC3BvBma,GACI,KADJA,GAEK,MAFLA,GAGK,MAHLA,GAIM,0eCiTUC,GAAmBC,OAC7B1R,SACA0R,GAAUF,GACZxR,EAAS,EACA0R,GAAUF,IAAsBE,GAAUF,GACnDxR,EAAS,EACA0R,GAAUF,KACnBxR,EAAS,GAEmBA,WAShB2R,GAAgBC,EAAgBxV,EAAWoR,OACnD1N,EAAkB8R,EAAeC,wBAClC/R,OAGGE,EAAS4R,EAAeE,mBACvBvE,GACLzN,EACA,EACAA,EAAgBvO,OAChByO,EACA5D,EACAoR,GAVgB,OACX,SAcXuE,GAjVA,SAAAne,YACEoe,QAAAje,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAK2d,OAASF,GAMdzd,EAAKiM,OAAS,EAMdjM,EAAK+L,gBAAkB,cApBEmS,GAAAD,EAAApe,GA4B3Boe,EAAAzhB,UAAA+f,cAAa,SAACjS,UACLwB,GAAiC1P,KACjC2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACL3B,IAQJ2T,EAAAzhB,UAAA2hB,eAAc,kBACL3a,MAQTya,EAAAzhB,UAAA4hB,mBAAkB,uBACJrS,gBAAgBnB,MAAM,EAACxO,KAAO6P,SAM5CgS,EAAAzhB,UAAAshB,mBAAkB,uBACJ/R,iBAQdkS,EAAAzhB,UAAA6hB,kBAAiB,uBACHtS,gBAAgBnB,MAAKxO,KAC1B2P,gBAAgBvO,OAAMpB,KAAQ6P,SASvCgS,EAAAzhB,UAAA8hB,UAAS,uBACKX,QAQdM,EAAAzhB,UAAAgf,sBAAqB,SAACF,WACXH,6BAA0B/e,KAAU6G,qBACtCiY,yCAA2C,OAC3CC,2BAA0B/e,KAAQ6G,eAKvCqY,EAAmB,GACgC,IAD/Blf,KACd8e,0CACJI,GAAgBlf,KAAS8e,yCAAwC,OAAA9e,SAK/DmiB,EAAkBniB,KACjBoiB,8BAA8BlD,UACHiD,EAAmBT,qBACvBtgB,OAAMpB,KAAQ2P,gBAAgBvO,OACnD+gB,QAQFrD,yCAA2CI,SAUpD2C,EAAAzhB,UAAAgiB,8BAA6B,SAAClD,gBAO9B2C,EAAAzhB,UAAAuhB,UAAS,uBACK9R,QAOdgS,EAAAzhB,UAAAiiB,mBAAkB,SAACd,EAAQ5R,QACpBE,OAASyR,GAAmBC,QAC5BA,OAASA,OACT5R,gBAAkBA,GAQzBkS,EAAAzhB,UAAAkiB,eAAc,SAACrU,EAAasU,GAC1Bnb,MASFya,EAAAzhB,UAAAoiB,UAAS,SAACjB,EAAQtT,EAAawU,GACR,IACjB5S,KACA0R,EACF1R,EAASyR,GAAmBC,gBAEnBlgB,EAAI,EAAGA,EAAIohB,IAAWphB,EAAC,CAAA,GACH,IAAvB4M,EAAY7M,mBACTmgB,OAASF,aACTxR,OAAS,GAGd5B,EAAoCA,EAAY,GAIpDsT,EA6GH,SACyB1R,OACtB0R,EACU,GAAV1R,EACF0R,EAASF,GACU,GAAVxR,EACT0R,EAASF,GACU,GAAVxR,IACT0R,EAASF,WAEkDE,EAvHhDmB,CADT7S,EAAS5B,EAAY7M,aAGlBmgB,OAASA,OACT1R,OAASA,GAYhBgS,EAAAzhB,UAAAkf,eAAc,SAAC7M,QACJ9C,kBACP8C,EAAWzS,KAAM2P,gBAAe3P,KAAO2P,gBAAe3P,KAAO6P,aACxDjJ,YAWTib,EAAAzhB,UAAAkgB,OAAM,SAACvT,EAAO0Q,OACN9N,EAAe3P,KAAQ0hB,wBACzB/R,EAAe,KACXE,EAAM7P,KAAQ2hB,YACpBnE,GACE7N,EACA,EACAA,EAAgBvO,OAChByO,EACA9C,EACA0Q,EACA9N,QAEG/I,YAaTib,EAAAzhB,UAAAmgB,MAAK,SAAC1T,EAAI2T,EAAQC,OACZ3T,EAAK0T,OACEtb,IAAP4H,IACFA,EAAKD,OAEH4Q,EAASgD,EACRhD,IACHA,EAAS1M,GAAS/Q,KAAMqU,kBAEpB1E,EAAe3P,KAAQ0hB,wBACzB/R,EAAe,KACXE,EAAM7P,KAAQ2hB,sBH3KxBhS,EACAC,EACApO,EACAqO,EACAhD,EACAC,EACA2Q,EACAJ,WAEMC,EAAOD,GAAmB,GAC1BK,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACnBpc,EAAI,EACCkc,EAAI3N,EAAQ2N,EAAI/b,EAAK+b,GAAK1N,EAAM,KACjC+N,EAASjO,EAAgB4N,GAAKG,EAC9BG,EAASlO,EAAgB4N,EAAI,GAAKI,EACxCL,EAAKjc,KAAOqc,EAAU7Q,EAAK+Q,EAC3BN,EAAKjc,KAAOsc,EAAU7Q,EAAK+Q,UAClBC,EAAIP,EAAI,EAAGO,EAAIP,EAAI1N,IAAUiO,EACpCR,EAAKjc,KAAOsO,EAAgBmO,GAG5BT,GAAYC,EAAKlc,QAAUC,IAC7Bic,EAAKlc,OAASC,GGqJZshB,CACEhT,EACA,EACAA,EAAgBvO,OAChByO,EACAhD,EACAC,EACA2Q,EACA9N,QAEG/I,YAWTib,EAAAzhB,UAAA0gB,UAAS,SAAClD,EAAQC,OACVlO,EAAe3P,KAAQ0hB,wBACzB/R,EAAe,KACXE,EAAM7P,KAAQ2hB,YACpB5D,GACEpO,EACA,EACAA,EAAgBvO,OAChByO,EACA+N,EACAC,EACAlO,QAEG/I,YAGXib,EAxRA,CAA6Be,EAAA1b,kBCNb2b,GAAkBlT,EAAiBC,EAAQrD,EAAYsD,WAC5DxO,EAAI,EAAGuB,EAAK2J,EAAWnL,OAAQC,EAAIuB,IAAMvB,EAChDsO,EAAgBC,KAAYrD,EAAWlL,UAElCuO,WAUOkT,GACdnT,EACAC,EACA3B,EACA4B,WAESxO,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAQC,EAAIuB,IAAMvB,UAC3CkL,EAAa0B,EAAY5M,GACtBkc,EAAI,EAAGA,EAAI1N,IAAU0N,EAC5B5N,EAAgBC,KAAYrD,EAAWgR,UAGpC3N,WAWOmT,GACdpT,EACAC,EACAoT,EACAnT,EACAoT,WAEMC,EAAOD,GAAmB,GAC5B5hB,EAAI,EACCkc,EAAI,EAAG4F,EAAKH,EAAa5hB,OAAQmc,EAAI4F,IAAM5F,EAAC,KAC7C/b,EAAMshB,GACVnT,EACAC,EACAoT,EAAazF,GACb1N,GAEFqT,EAAK7hB,KAAOG,EACZoO,EAASpO,SAEX0hB,EAAK9hB,OAASC,EACP6hB,geCrDTE,GAAA,SAAA3f,GAOK,SACH4f,EAAYlS,EAAQsH,EAAY8J,OAAhC3e,EACEH,EAAAI,KAAA7D,OAAAA,aACmBkF,IAAfqd,QAA2Crd,IAAfuT,EAC9B7U,EAAKye,mBAAmBE,EAAYpR,YAE9BuH,EAASD,GAA0B,EACzC7U,EAAK0f,mBAAmBnS,EAAQuH,EAAQ6J,mBAdzBgB,GAAAF,EAAA5f,GAuBnB4f,EAAAjjB,UAAAif,MAAK,eACGmE,EAAM,IAAOH,EAAMrjB,KAClB2P,gBAAgBnB,aACrBtJ,EAASlF,KACJuhB,eAEPiC,EAAOxa,gBAAehJ,MACfwjB,GAUTH,EAAAjjB,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,OAC3BjQ,EAAe3P,KAAQ2P,gBACvBjB,EAAKlC,EAAImD,EAAgB,GACzBhB,EAAKlC,EAAIkD,EAAgB,GACzB8T,EAAkB/U,EAAKA,EAAKC,EAAKA,KACnC8U,EAAkB7D,EAAkB,IACd,IAApB6D,EAAqB,IAAA,IACdpiB,EAAI,EAAGA,EAACrB,KAAQ6P,SAAUxO,EACjCse,EAAate,GAAKsO,EAAgBtO,YAG9BqiB,EAAK1jB,KAAQ2jB,YAAcha,KAAKqP,KAAKyK,GAC3C9D,EAAa,GAAKhQ,EAAgB,GAAK+T,EAAQhV,EAC/CiR,EAAa,GAAKhQ,EAAgB,GAAK+T,EAAQ/U,MACtCtN,EAAI,EAAGA,EAACrB,KAAQ6P,SAAUxO,EACjCse,EAAate,GAAKsO,EAAgBtO,UAGtCse,EAAave,OAAMpB,KAAQ6P,OACpB4T,SAEA7D,GASXyD,EAAAjjB,UAAAyf,WAAU,SAACrT,EAAGC,OACNkD,EAAe3P,KAAQ2P,gBACvBjB,EAAKlC,EAAImD,EAAgB,GACzBhB,EAAKlC,EAAIkD,EAAgB,UACxBjB,EAAKA,EAAKC,EAAKA,GAAE3O,KAAS4jB,qBAQnCP,EAAAjjB,UAAAyjB,UAAS,uBACKlU,gBAAgBnB,MAAM,EAACxO,KAAO6P,SAQ5CwT,EAAAjjB,UAAA+f,cAAa,SAACjS,OACNyB,EAAe3P,KAAQ2P,gBACvB+I,EAAS/I,EAAe3P,KAAM6P,QAAUF,EAAgB,UACvDH,GACLG,EAAgB,GAAK+I,EACrB/I,EAAgB,GAAK+I,EACrB/I,EAAgB,GAAK+I,EACrB/I,EAAgB,GAAK+I,EACrBxK,IASJmV,EAAAjjB,UAAAujB,UAAS,kBACAha,KAAKqP,KAAIhZ,KAAM4jB,sBAOxBP,EAAAjjB,UAAAwjB,kBAAiB,eACTlV,EAAE1O,KAAQ2P,gBAAe3P,KAAM6P,QAAM7P,KAAS2P,gBAAgB,GAC9DhB,EAAE3O,KAAQ2P,gBAAe3P,KAAM6P,OAAS,GAAC7P,KAAS2P,gBAAgB,UACjEjB,EAAKA,EAAKC,EAAKA,GAQxB0U,EAAAjjB,UAAAwgB,QAAO,kBACEhhB,GASTyjB,EAAAjjB,UAAAygB,iBAAgB,SAAC3S,MAEXqE,GAAWrE,EADGlO,KAAQqU,aACS,KAC3BlD,EAAMnR,KAAQ6jB,mBAEhB3V,EAAO,IAAMiD,EAAO,IAAMjD,EAAO,IAAMiD,EAAO,KAG9CjD,EAAO,IAAMiD,EAAO,IAAMjD,EAAO,IAAMiD,EAAO,IAI3ChB,GAAcjC,EAAMlO,KAAOkgB,qBAAqBta,KAAI5F,eAEtD,GAQTqjB,EAAAjjB,UAAA0jB,UAAS,SAAC3S,OACFtB,EAAM7P,KAAQ6P,OACd6I,EAAM1Y,KAAQ2P,gBAAgBE,GAAM7P,KAAS2P,gBAAgB,GAC7DA,EAAkBwB,EAAO3C,QAC/BmB,EAAgBE,GAAUF,EAAgB,GAAK+I,UACtCrX,EAAI,EAAGA,EAAIwO,IAAUxO,EAC5BsO,EAAgBE,EAASxO,GAAK8P,EAAO9P,QAElCghB,mBAAkBriB,KAAMuhB,OAAQ5R,QAChC/I,WAWPyc,EAAAjjB,UAAAkjB,mBAAkB,SAACnS,EAAQuH,EAAQ6J,QAC5BC,UAAUD,EAAYpR,EAAQ,QACzBxB,kBAAe3P,KAClB2P,gBAAe,IAEM,IACtBA,EAAe3P,KAAQ2P,gBACzBC,EAASiT,GAAkBlT,EAAiB,EAAGwB,EAAMnR,KAAO6P,QAChEF,EAAgBC,KAAYD,EAAgB,GAAK+I,UACxCrX,EAAI,EAAGuB,EAAE5C,KAAQ6P,OAAQxO,EAAIuB,IAAMvB,EAC1CsO,EAAgBC,KAAYD,EAAgBtO,GAE9CsO,EAAgBvO,OAASwO,OACpBhJ,WAGPyc,EAAAjjB,UAAA2hB,eAAc,kBACL,MAGTsB,EAAAjjB,UAAAkiB,eAAc,SAACrU,EAAasU,KAO5Bc,EAAAjjB,UAAA2jB,UAAS,SAACrL,QACH/I,gBAAe3P,KAAM6P,QAAM7P,KAAS2P,gBAAgB,GAAK+I,OACzD9R,WAUPyc,EAAAjjB,UAAAkgB,OAAM,SAACvT,EAAO0Q,OACNtM,EAAMnR,KAAQ6jB,YACdhU,EAAM7P,KAAQ2hB,iBACfmC,UACHtG,GAAOrM,EAAQ,EAAGA,EAAO/P,OAAQyO,EAAQ9C,EAAO0Q,EAAQtM,SAErDvK,WAUPyc,EAAAjjB,UAAA0gB,UAAS,SAAClD,EAAQC,OACV1M,EAAMnR,KAAQ6jB,YACdhU,EAAM7P,KAAQ2hB,iBACfmC,UACH/F,GAAU5M,EAAQ,EAAGA,EAAO/P,OAAQyO,EAAQ+N,EAAQC,EAAQ1M,SAEzDvK,WAETyc,EAlPA,CAAqBW,EAAA9c,SA0QrBkc,GAAOhjB,UAAU6L,cACjBgY,GAAeb,kkBC6BCc,GAAoB1c,SACpB,mBAAHA,EACFA,GAMH3F,MAAMC,QAAQ0F,GAChB2c,EAAS3c,GAETmE,GAA+C,mBAAdnE,EAAK4c,UAA2B,IAEjED,EAAM,CAD2D3c,sBAI1D2c,IAVN,IACCA,MAaRE,GAtQA,SAAA5gB,GAMK,SACH6gB,EAAYC,OAAZ3gB,EACEH,EAAAI,KAAA7D,OAAAA,QAKA4D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAML5C,EAAK4gB,SAAMtf,EAMXtB,EAAK6gB,cAAa,WAOlB7gB,EAAK8gB,OAAS,KAMd9gB,EAAK+gB,oBAAiBzf,EAMtBtB,EAAKghB,mBAAqB,KAE1BhhB,EAAKgF,kBAAkBhF,EAAK6gB,cAAe7gB,EAAKihB,wBAE5CN,KAGmE,mBAA/CA,EAA0BnF,sBAC9B,KAEV0F,EAAoCP,EAC1C3gB,EAAKmhB,YAAYD,QAEe,IAC1BE,EAAaT,EACnB3gB,EAAKwE,cAAc4c,mBArELC,GAAAX,EAAA7gB,GAgFpB6gB,EAAAlkB,UAAAif,MAAK,eACGA,EAAK,IAAOiF,EAAOtkB,KAClByI,gBAAazI,KAAUwI,gBAAkB,MAEhD6W,EAAM6F,gBAAellB,KAAMmlB,uBACrBL,EAAQ9kB,KAAQolB,cAClBN,GACFzF,EAAM0F,YAAYD,EAASzF,aAEvBxR,EAAK7N,KAAQqlB,kBACfxX,GACFwR,EAAMiG,SAASzX,GAEVwR,GAWTiF,EAAAlkB,UAAAglB,YAAW,uBACsC/c,IAAGrI,KAAMykB,gBAU1DH,EAAAlkB,UAAAmlB,MAAK,uBACSf,KAUdF,EAAAlkB,UAAA+kB,gBAAe,uBACDV,eASdH,EAAAlkB,UAAAilB,SAAQ,uBACMX,QASdJ,EAAAlkB,UAAAolB,iBAAgB,uBACFb,gBAMdL,EAAAlkB,UAAAqlB,sBAAqB,gBACd7e,WAMP0d,EAAAlkB,UAAAykB,uBAAsB,gBACXD,qBACP3e,EAAajG,KAAM4kB,yBACdA,mBAAqB,UAEtBE,EAAQ9kB,KAAQolB,cAClBN,IAAQ9kB,KACL4kB,mBAAqBnf,EACxBqf,EACAtf,EAAgBxF,KACXylB,sBAAqBzlB,YAIzB4G,WAUP0d,EAAAlkB,UAAA2kB,YAAW,SAACD,QACLhc,IAAG9I,KAAMykB,cAAeK,IAY/BR,EAAAlkB,UAAAklB,SAAQ,SAACI,QACFhB,OAASgB,OACTf,eAAkBe,EAEnBxB,GAAoBwB,QADpBxgB,OAEC0B,WAYP0d,EAAAlkB,UAAAulB,MAAK,SAACC,QACCpB,IAAMoB,OACNhf,WAUP0d,EAAAlkB,UAAA8kB,gBAAe,SAACzZ,QACT5C,qBAAoB7I,KAAMykB,cAAazkB,KAAO6kB,6BAC9CJ,cAAgBhZ,OAChB7C,kBAAiB5I,KAAMykB,cAAazkB,KAAO6kB,6BAC3CA,0BAETP,EAxOA,CAAsBlD,EAAAla,SC9DtB2e,GACQ,eCQL,SACMC,GACPnW,EACAoW,EACAC,EACAnW,EACArD,EACAC,EACAkT,OAMI/P,EAJEkC,EAAKnC,EAAgBoW,GACrB7T,EAAKvC,EAAgBoW,EAAU,GAC/BrX,EAAKiB,EAAgBqW,GAAWlU,EAChCnD,EAAKgB,EAAgBqW,EAAU,GAAK9T,KAE/B,IAAPxD,GAAmB,IAAPC,EACdiB,EAASmW,WAEHlQ,IAAMrJ,EAAIsF,GAAMpD,GAAMjC,EAAIyF,GAAMvD,IAAOD,EAAKA,EAAKC,EAAKA,MACxDkH,EAAI,EACNjG,EAASoW,UACAnQ,EAAI,EAAC,SACLxU,EAAI,EAAGA,EAAIwO,IAAUxO,EAC5Bse,EAAate,GAAKgV,GAChB1G,EAAgBoW,EAAU1kB,GAC1BsO,EAAgBqW,EAAU3kB,GAC1BwU,eAGJ8J,EAAave,OAASyO,GAGtBD,EAASmW,OAGJ1kB,EAAI,EAAGA,EAAIwO,IAAUxO,EAC5Bse,EAAate,GAAKsO,EAAgBC,EAASvO,GAE7Cse,EAAave,OAASyO,WAaRoW,GAAgBtW,EAAiBC,EAAQpO,EAAKqO,EAAQK,OAChE4B,EAAKnC,EAAgBC,GACrBsC,EAAKvC,EAAgBC,EAAS,OAC7BA,GAAUC,EAAQD,EAASpO,EAAKoO,GAAUC,EAAM,KAC7CkC,EAAKpC,EAAgBC,GACrBuC,EAAKxC,EAAgBC,EAAS,GAC9BsW,EAAepQ,GAAUhE,EAAII,EAAIH,EAAII,GACvC+T,EAAehW,IACjBA,EAAMgW,GAERpU,EAAKC,EACLG,EAAKC,SAEAjC,WAWOiW,GACdxW,EACAC,EACAsT,EACArT,EACAK,WAES7O,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACjB6O,EAAM+V,GAAgBtW,EAAiBC,EAAQpO,EAAKqO,EAAQK,GAC5DN,EAASpO,SAEJ0O,WAwCOkW,GACdzW,EACAC,EACApO,EACAqO,EACAwW,EACAC,EACA9Z,EACAC,EACAkT,EACAC,EACA2G,MAEI3W,GAAUpO,EAAG,OACRoe,MAELve,EAAGoiB,KACU,IAAb4C,EAAc,KAEhB5C,EAAkB3N,GAChBtJ,EACAC,EACAkD,EAAgBC,GAChBD,EAAgBC,EAAS,KAELgQ,EAAkB,KACjCve,EAAI,EAAGA,EAAIwO,IAAUxO,EACxBse,EAAate,GAAKsO,EAAgBC,EAASvO,UAE7Cse,EAAave,OAASyO,EACf4T,SAEA7D,UAGL4G,EAAWD,GAA2B,CAAItG,IAAKA,KACjD3a,EAAQsK,EAASC,EACdvK,EAAQ9D,MACbskB,GACEnW,EACArK,EAAQuK,EACRvK,EACAuK,EACArD,EACAC,EACA+Z,IAEF/C,EAAkB3N,GAAUtJ,EAAGC,EAAG+Z,EAAS,GAAIA,EAAS,KAClC5G,EAAkB,KACtCA,EAAqB6D,EAChBpiB,EAAI,EAAGA,EAAIwO,IAAUxO,EACxBse,EAAate,GAAKmlB,EAASnlB,GAE7Bse,EAAave,OAASyO,EACtBvK,GAASuK,OAYTvK,GACEuK,EACAlG,KAAKuG,KACDvG,KAAKqP,KAAKyK,GAAmB9Z,KAAKqP,KAAK4G,IACvCyG,EACA,EACF,MAIJC,IAEFR,GACEnW,EACAnO,EAAMqO,EACND,EACAC,EACArD,EACAC,EACA+Z,IAEF/C,EAAkB3N,GAAUtJ,EAAGC,EAAG+Z,EAAS,GAAIA,EAAS,KAClC5G,GAAkB,KACtCA,EAAqB6D,EAChBpiB,EAAI,EAAGA,EAAIwO,IAAUxO,EACxBse,EAAate,GAAKmlB,EAASnlB,GAE7Bse,EAAave,OAASyO,SAGnB+P,WAiBO6G,GACd9W,EACAC,EACAsT,EACArT,EACAwW,EACAC,EACA9Z,EACAC,EACAkT,EACAC,EACA2G,WAEMC,EAAWD,GAA2B,CAAItG,IAAKA,KAC5C5e,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACjBue,EAAqBwG,GACnBzW,EACAC,EACApO,EACAqO,EACAwW,EACAC,EACA9Z,EACAC,EACAkT,EACAC,EACA4G,GAEF5W,EAASpO,SAEJoe,WCnMO8G,GACd/W,EACAC,EACApO,EACAqO,EACAqP,EACAyH,EACAC,OAEMzlB,GAAKK,EAAMoO,GAAUC,KACvB1O,EAAI,EAAC,MACAyO,EAASpO,EAAKoO,GAAUC,EAC7B8W,EAA0BC,KAAsBjX,EAAgBC,GAChE+W,EAA0BC,KACxBjX,EAAgBC,EAAS,UAEtBgX,EAEmB,IACtBC,EAAO,IAAOhlB,MAAMV,GAC1B0lB,EAAQ,GAAK,EACbA,EAAQ1lB,EAAI,GAAK,MACW,IACtB2lB,EAAK,CAAIlX,EAAQpO,EAAMqO,GACzBvK,EAAQ,EACLwhB,EAAM1lB,OAAS,GAAC,SACf2lB,EAAOD,EAAME,MACbC,EAAQH,EAAME,MAChBE,EAAqB,EACnBpV,EAAKnC,EAAgBsX,GACrB/U,EAAKvC,EAAgBsX,EAAQ,GAC7BlV,EAAKpC,EAAgBoX,GACrB5U,EAAKxC,EAAgBoX,EAAO,GACzB1lB,EAAI4lB,EAAQpX,EAAQxO,EAAI0lB,EAAM1lB,GAAKwO,EAAM,KAG1CsX,EAAkBvR,GAFdjG,EAAgBtO,GAChBsO,EAAgBtO,EAAI,GACuByQ,EAAII,EAAIH,EAAII,GAC7DgV,EAAkBD,IACpB5hB,EAAQjE,EACR6lB,EAAqBC,GAGrBD,EAAqBhI,IACvB2H,GAASvhB,EAAQsK,GAAUC,GAAU,EACjCoX,EAAQpX,EAASvK,GACnBwhB,EAAMxjB,KAAK2jB,EAAO3hB,GAEhBA,EAAQuK,EAASkX,GACnBD,EAAMxjB,KAAKgC,EAAOyhB,QAIf1lB,EAAI,EAAGA,EAAIF,IAAKE,EACnBwlB,EAAQxlB,KACVslB,EAA0BC,KACxBjX,EAAgBC,EAASvO,EAAIwO,GAC/B8W,EAA0BC,KACxBjX,EAAgBC,EAASvO,EAAIwO,EAAS,WAGrC+W,WAeOQ,GACdzX,EACAC,EACAsT,EACArT,EACAqP,EACAyH,EACAC,EACAS,WAEShmB,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACjBulB,EAAmBF,GACjB/W,EACAC,EACApO,EACAqO,EACAqP,EACAyH,EACAC,GAEFS,EAAe/jB,KAAKsjB,GACpBhX,EAASpO,SAEJolB,WAwGOU,GAAKhf,EAAOqY,UACnBA,EAAYhX,KAAK4d,MAAMjf,EAAQqY,YAsBxB6G,GACd7X,EACAC,EACApO,EACAqO,EACA8Q,EACAgG,EACAC,MAGIhX,GAAUpO,EAAG,OACRolB,MAWL7U,EAAII,EARJL,EAAKwV,GAAK3X,EAAgBC,GAAS+Q,GACnCzO,EAAKoV,GAAK3X,EAAgBC,EAAS,GAAI+Q,GAC3C/Q,GAAUC,EAEV8W,EAA0BC,KAAsB9U,EAChD6U,EAA0BC,KAAsB1U,QAK9CH,EAAKuV,GAAK3X,EAAgBC,GAAS+Q,GACnCxO,EAAKmV,GAAK3X,EAAgBC,EAAS,GAAI+Q,IACvC/Q,GAAUC,IACIrO,SAKZmlB,EAA0BC,KAAsB7U,EAChD4U,EAA0BC,KAAsBzU,EACzCyU,QAEF7U,GAAMD,GAAMK,GAAMD,QACpBtC,EAASpO,GAAG,KAEXwQ,EAAKsV,GAAK3X,EAAgBC,GAAS+Q,GACnCvO,EAAKkV,GAAK3X,EAAgBC,EAAS,GAAI+Q,MAC7C/Q,GAAUC,EAENmC,GAAMD,GAAMK,GAAMD,OAIhBxF,EAAMoF,EAAKD,EACXlF,EAAMuF,EAAKD,EAEXlF,EAAMgF,EAAKF,EACX7E,EAAMmF,EAAKF,EAKfvF,EAAMM,GAAOL,EAAMI,IACjBL,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,KACzDC,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,IAG3DmF,EAAKC,EACLG,EAAKC,IAMPuU,EAA0BC,KAAsB7U,EAChD4U,EAA0BC,KAAsBzU,EAChDL,EAAKC,EACLG,EAAKC,EACLJ,EAAKC,EACLG,EAAKC,WAGPuU,EAA0BC,KAAsB7U,EAChD4U,EAA0BC,KAAsBzU,EACzCyU,WAeOa,GACd9X,EACAC,EACAsT,EACArT,EACA8Q,EACAgG,EACAC,EACAS,WAEShmB,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACjBulB,EAAmBY,GACjB7X,EACAC,EACApO,EACAqO,EACA8Q,EACAgG,EACAC,GAEFS,EAAe/jB,KAAKsjB,GACpBhX,EAASpO,SAEJolB,WClaOc,GAAQ/X,EAAiBC,EAAQpO,EAAKqO,EAAQO,WAGxDuX,EAFEC,EAAM,CAAIjY,EAAgBC,GAASD,EAAgBC,EAAS,IAC5DiY,EAAM,GAELjY,EAASC,EAASrO,EAAKoO,GAAUC,EAAM,IAC5CgY,EAAO,GAAKlY,EAAgBC,EAASC,GACrCgY,EAAO,GAAKlY,EAAgBC,EAASC,EAAS,GAC9C8X,EAAMvX,EAASwX,EAAQC,GAChB,OACEF,EAETC,EAAO,GAAKC,EAAO,GACnBD,EAAO,GAAKC,EAAO,UAEd,WCnBOC,GACdnY,EACAC,EACApO,EACAqO,EACAkY,WAEM9Z,OAAkC/I,IAApB6iB,EAAgCA,EAAe,GAC/D1mB,EAAI,EACCkc,EAAI3N,EAAQ2N,EAAI/b,EAAK+b,GAAK1N,EACjC5B,EAAY5M,KAAOsO,EAAgBnB,MAAM+O,EAAGA,EAAI1N,UAElD5B,EAAY7M,OAASC,EACd4M,WAWO+Z,GACdrY,EACAC,EACAsT,EACArT,EACAoY,WAEMjF,OAAoC9d,IAArB+iB,EAAiCA,EAAgB,GAClE5mB,EAAI,EACCkc,EAAI,EAAG4F,EAAKD,EAAK9hB,OAAQmc,EAAI4F,IAAM5F,EAAC,KACrC/b,EAAM0hB,EAAK3F,GACjByF,EAAa3hB,KAAOymB,GAClBnY,EACAC,EACApO,EACAqO,EACAmT,EAAa3hB,IAEfuO,EAASpO,SAEXwhB,EAAa5hB,OAASC,EACf2hB,WAYOkF,GACdvY,EACAC,EACAuY,EACAtY,EACAuY,WAEMC,OACkBnjB,IAAtBkjB,EAAkCA,EAAiB,GACjD/mB,EAAI,EACCkc,EAAI,EAAG4F,EAAKgF,EAAM/mB,OAAQmc,EAAI4F,IAAM5F,EAAC,KACtC2F,EAAOiF,EAAM5K,GACnB8K,EAAchnB,KAAO2mB,GACnBrY,EACAC,EACAsT,EACArT,EACAwY,EAAchnB,IAEhBuO,EAASsT,EAAKA,EAAK9hB,OAAS,UAE9BinB,EAAcjnB,OAASC,EAChBgnB,WC3EOC,GACd3Y,EACAC,EACApO,EACAqO,EACA0Y,EACAlL,EACAjG,OAEIoR,EAAG3S,EACD1U,GAAKK,EAAMoO,GAAUC,KACjB,IAAN1O,EACFqnB,EAAI5Y,UACW,IAANzO,EACTqnB,EAAI5Y,EACJiG,EAAI0S,UACW,IAANpnB,EAAO,SACZ2Q,EAAKnC,EAAgBC,GACrBsC,EAAKvC,EAAgBC,EAAS,GAC9B6Y,EAAS,EACPC,EAAiB,CAAI,GAClBrnB,EAAIuO,EAASC,EAAQxO,EAAIG,EAAKH,GAAKwO,EAAM,KAC1CkC,EAAKpC,EAAgBtO,GACrB8Q,EAAKxC,EAAgBtO,EAAI,GAC/BonB,GAAU9e,KAAKqP,MAAMjH,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9DwW,EAAkBplB,KAAKmlB,GACvB3W,EAAKC,EACLG,EAAKC,MAEDhS,EAASooB,EAAWE,EACpBnjB,WtCjCmBqjB,EAAUC,EAAQC,WACzCC,EAAKC,EACHC,EAAaH,GAAkBhoB,EACjCooB,EAAM,EACNC,EAAOP,EAASvnB,OAChB+nB,GAAQ,EAELF,EAAMC,IAIXH,GAAOC,EAAWL,EADlBG,EAAMG,GAAQC,EAAOD,GAAQ,IACIL,IAEvB,EAERK,EAAMH,EAAM,GAGZI,EAAOJ,EACPK,GAASJ,GAIO,OACbI,EAAQF,GAAOA,EsCSNG,CAAaV,EAAmBvoB,GAC1CmF,EAAQ,GACVuQ,GACG1V,EAASuoB,GAAmBpjB,EAAQ,KACpCojB,GAAmBpjB,EAAQ,GAAKojB,GAAmBpjB,EAAQ,IAC9DkjB,EAAI5Y,IAAWtK,EAAQ,GAAKuK,GAE5B2Y,EAAI5Y,EAAStK,EAAQuK,MAGnBwH,EAAYD,EAAgB,EAAIA,EAAgB,EAChDkG,EAAOD,GAAmB,IAAOxb,MAAMwV,OACpChW,EAAI,EAAGA,EAAIgW,IAAahW,EAC/Bic,EAAKjc,QACG6D,IAANsjB,EACIvI,SACM/a,IAAN2Q,EACAlG,EAAgB6Y,EAAInnB,GACpBgV,GAAK1G,EAAgB6Y,EAAInnB,GAAIsO,EAAgB6Y,EAAI3Y,EAASxO,GAAIwU,UAE/DyH,WAYO+L,GACd1Z,EACAC,EACApO,EACAqO,EACAyZ,EACAC,MAEI/nB,GAAOoO,EAAM,OACR,SAELrD,KACA+c,EAAI3Z,EAAgBC,EAASC,EAAS,UACpC0Z,IACFhd,EAAaoD,EAAgBnB,MAAMoB,EAAQA,EAASC,IACzCA,EAAS,GAAKyZ,EAClB/c,GAEA,QAEAoD,EAAgBnO,EAAM,GAAK8nB,SAChCC,IACFhd,EAAaoD,EAAgBnB,MAAMhN,EAAMqO,EAAQrO,IACtCqO,EAAS,GAAKyZ,EAClB/c,GAEA,QAIP+c,GAAK3Z,EAAgBC,EAASC,EAAS,GAAC,OACnCF,EAAgBnB,MAAMoB,EAAQA,EAASC,WAE5C2Z,EAAK5Z,EAASC,EACd4Z,EAAKjoB,EAAMqO,EACR2Z,EAAKC,GAAE,KACNX,EAAOU,EAAKC,GAAO,EACrBH,EAAI3Z,GAAiBmZ,EAAM,GAAKjZ,EAAS,GAC3C4Z,EAAKX,EAELU,EAAKV,EAAM,MAGTY,EAAK/Z,EAAgB6Z,EAAK3Z,EAAS,MACrCyZ,GAAKI,EAAE,OACF/Z,EAAgBnB,OAAOgb,EAAK,GAAK3Z,GAAS2Z,EAAK,GAAK3Z,EAASA,OAGhEgG,GAAKyT,EAAII,IADJ/Z,GAAiB6Z,EAAK,GAAK3Z,EAAS,GACpB6Z,GAC3Bnd,EAAU,WACDlL,EAAI,EAAGA,EAAIwO,EAAS,IAAKxO,EAChCkL,EAAWjJ,KACT+S,GACE1G,GAAiB6Z,EAAK,GAAK3Z,EAASxO,GACpCsO,EAAgB6Z,EAAK3Z,EAASxO,GAC9BwU,WAINtJ,EAAWjJ,KAAKgmB,GACT/c,WC7HOod,GACdha,EACAC,EACApO,EACAqO,EACA3B,UAEgBiC,GACdjC,GAIG,SACO3B,UACAqd,GACNja,EACAC,EACApO,EACAqO,EACAtD,EAAW,GACXA,EAAW,gBAgBHqd,GACdja,EACAC,EACApO,EACAqO,EACArD,EACAC,WASIod,EAAK,EACL/X,EAAKnC,EAAgBnO,EAAMqO,GAC3BqC,EAAKvC,EAAgBnO,EAAMqO,EAAS,GACjCD,EAASpO,EAAKoO,GAAUC,EAAM,KAC7BkC,EAAKpC,EAAgBC,GACrBuC,EAAKxC,EAAgBC,EAAS,GAChCsC,GAAMzF,EACJ0F,EAAK1F,IAAMsF,EAAKD,IAAOrF,EAAIyF,IAAO1F,EAAIsF,IAAOK,EAAKD,GAAM,GAC1D2X,IAEO1X,GAAM1F,IAAMsF,EAAKD,IAAOrF,EAAIyF,IAAO1F,EAAIsF,IAAOK,EAAKD,GAAM,GAClE2X,IAEF/X,EAAKC,EACLG,EAAKC,SAEO,IAAP0X,WAYOC,GACdna,EACAC,EACAsT,EACArT,EACArD,EACAC,MAEoB,IAAhByW,EAAK9hB,OAAY,OACZ,MAEJwoB,GAAqBja,EAAiBC,EAAQsT,EAAK,GAAIrT,EAAQrD,EAAGC,GAAC,OAC/D,UAEApL,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,KAExCuoB,GAAqBja,EAAiBuT,EAAK7hB,EAAI,GAAI6hB,EAAK7hB,GAAIwO,EAAQrD,EAAGC,GAAC,OAEjE,SAGJ,WC5FOsd,GACdpa,EACAC,EACApO,EACAqO,EACA3B,OAEM8b,EAAoBla,IxBuKlBP,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,GwBrKnCI,EACAC,EACApO,EACAqO,WAEG0C,GAAWrE,EAAQ8b,OAGpBlb,GAAeZ,EAAQ8b,KAGvBA,EAAkB,IAAM9b,EAAO,IAAM8b,EAAkB,IAAM9b,EAAO,KAGpE8b,EAAkB,IAAM9b,EAAO,IAAM8b,EAAkB,IAAM9b,EAAO,IAGjEwZ,GACL/X,EACAC,EACApO,EACAqO,GAMG,SACO+X,EAAQC,mBxB+pBY3Z,EAAQ+b,EAAOzoB,OAC3C0oB,GAAa,EACXC,EAAWlb,GAAuBf,EAAQ+b,GAC1CG,EAASnb,GAAuBf,EAAQ1M,MAE5C2oB,IAAapc,IACbqc,IAAWrc,GAEXmc,GAAa,WAEPhb,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdmc,EAASJ,EAAM,GACfK,EAASL,EAAM,GACfM,EAAO/oB,EAAI,GACXgpB,EAAOhpB,EAAI,GACXipB,GAASD,EAAOF,IAAWC,EAAOF,GACpC7d,OAAC,EAAEC,OAAC,EACD2d,EAASrc,MAAyBoc,EAAWpc,MAGlDmc,GADA1d,EAAI+d,GAAQC,EAAOnb,GAAQob,IACTvb,GAAQ1C,GAAK4C,GAG9B8a,KACEE,EAASrc,KACVoc,EAAWpc,KAIbmc,GADAzd,EAAI+d,GAAQD,EAAOnb,GAAQqb,IACTtb,GAAQ1C,GAAK4C,GAG9B6a,KACEE,EAASrc,KACVoc,EAAWpc,KAIbmc,GADA1d,EAAI+d,GAAQC,EAAOrb,GAAQsb,IACTvb,GAAQ1C,GAAK4C,GAG9B8a,KACEE,EAASrc,KACVoc,EAAWpc,KAIbmc,GADAzd,EAAI+d,GAAQD,EAAOrb,GAAQub,IACTtb,GAAQ1C,GAAK4C,UAG5B6a,EwBntBIQ,CAAkBxc,EAAQ0Z,EAAQC,kBA4G/B8C,GACdhb,EACAC,EACAsT,EACArT,EACA3B,gBAzEAyB,EACAC,EACApO,EACAqO,EACA3B,YAEI6b,GAAqBpa,EAAiBC,EAAQpO,EAAKqO,EAAQ3B,IAI7D0b,GACEja,EACAC,EACApO,EACAqO,EACA3B,EAAO,GACPA,EAAO,KAMT0b,GACEja,EACAC,EACApO,EACAqO,EACA3B,EAAO,GACPA,EAAO,KAMT0b,GACEja,EACAC,EACApO,EACAqO,EACA3B,EAAO,GACPA,EAAO,KAMT0b,GACEja,EACAC,EACApO,EACAqO,EACA3B,EAAO,GACPA,EAAO,KAuBN0c,CAAqBjb,EAAiBC,EAAQsT,EAAK,GAAIrT,EAAQ3B,GAAM,OACjE,KAEW,IAAhBgV,EAAK9hB,OAAY,OACZ,UAEAC,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,GAEzCsoB,GACEha,EACAuT,EAAK7hB,EAAI,GACT6hB,EAAK7hB,GACLwO,EACA3B,KAIC6b,GACCpa,EACAuT,EAAK7hB,EAAI,GACT6hB,EAAK7hB,GACLwO,EACA3B,GAAM,OAGD,SAIN,WChMO2c,GAAiBlb,EAAiBC,EAAQpO,EAAKqO,WACzDiC,EAAKnC,EAAgBC,GACrBsC,EAAKvC,EAAgBC,EAAS,GAC9BxO,EAAS,EACJC,EAAIuO,EAASC,EAAQxO,EAAIG,EAAKH,GAAKwO,EAAM,KAC1CkC,EAAKpC,EAAgBtO,GACrB8Q,EAAKxC,EAAgBtO,EAAI,GAC/BD,GAAUuI,KAAKqP,MAAMjH,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9DJ,EAAKC,EACLG,EAAKC,SAEA/Q,mgBCqST0pB,GApSA,SAAArnB,GAKK,SACHsnB,EAAY9c,EAAasU,OAAzB3e,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKonB,cAAgB,KAMrBpnB,EAAKqnB,uBAAwB,EAM7BrnB,EAAKsnB,WAAY,EAMjBtnB,EAAKunB,mBAAoB,OAENjmB,IAAfqd,GAA6B1gB,MAAMC,QAAQmM,EAAY,IAMzDrK,EAAK0e,eAEDrU,EAEFsU,GATF3e,EAAKye,mBACHE,EAC8BtU,YApCbmd,GAAAL,EAAAtnB,GAqDvBsnB,EAAA3qB,UAAAirB,iBAAgB,SAAC9e,QACLoD,gBAGRjO,EAAM1B,KAAM2P,gBAAiBpD,GAHNvM,KAClB2P,gBAAkBpD,EAAWiC,aAI/B5H,WAQPmkB,EAAA3qB,UAAAif,MAAK,eACGiM,EAAU,IAAOP,EAAU/qB,KAC1B2P,gBAAgBnB,QAAKxO,KACrBuhB,eAEP+J,EAAWtiB,gBAAehJ,MACnBsrB,GAUTP,EAAA3qB,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,UAC7BA,EAAqBnR,GAAwBzO,KAAMqU,YAAa7H,EAAGC,GAC9DmT,QAEAuL,mBAAiBnrB,KAAS6G,qBAC5BqkB,UAAYvhB,KAAKqP,KACpBiN,GAAejmB,KACR2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACL,SAGCsb,kBAAiBnrB,KAAQ6G,eAEzBuf,GAAkBpmB,KAClB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OAAM7P,KACNkrB,WACL,EACA1e,EACAC,EACAkT,EACAC,KAeJmL,EAAA3qB,UAAAmrB,eAAc,SAACnb,UACNsX,GAAc1nB,KACd2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACLO,IAkBJ2a,EAAA3qB,UAAAorB,iBAAgB,SAAClC,EAAGmC,WAEXlK,QAAUF,IAAkBrhB,KAC5BuhB,QAAUF,GAAmB,OAE3B,SAEHkI,OAAkCrkB,IAApBumB,GAAgCA,SAC7CpC,GAAuBrpB,KACvB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACLyZ,EACAC,IASJwB,EAAA3qB,UAAA2hB,eAAc,kBACL+F,GAAkB9nB,KAClB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,SAcTkb,EAAA3qB,UAAAsrB,gBAAe,SAACnD,EAAUlL,UACjBiL,GAAgBtoB,KAChB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACL0Y,EACAlL,EAAQrd,KACH6P,SASTkb,EAAA3qB,UAAAurB,UAAS,kBACAd,GAAgB7qB,KAChB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,SAOTkb,EAAA3qB,UAAAwrB,gBAAe,uBACJX,uBAAqBjrB,KAAS6G,qBAChCmkB,cAAahrB,KAAQ0rB,gBAAgB,GAAG1rB,KAAOgrB,oBAC/CC,sBAAqBjrB,KAAQ6G,oBAExBmkB,eAQdD,EAAA3qB,UAAAgiB,8BAA6B,SAAClD,OACtByH,EAAyB,UAC/BA,EAA0BvlB,OAASslB,GAAc1mB,KAC1C2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACLqP,EACAyH,EACA,OAESoE,EAAWpE,EAA2BtF,KAQnD0J,EAAA3qB,UAAAwgB,QAAO,kBACEhhB,GASTmrB,EAAA3qB,UAAAygB,iBAAgB,SAAC3S,UACR6b,GAAoB/pB,KACpB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACL3B,IAUJ6c,EAAA3qB,UAAAkiB,eAAc,SAACrU,EAAasU,QACrBC,UAAUD,EAAYtU,EAAa,QAC9B0B,kBAAe3P,KAClB2P,gBAAe,SAEjBA,gBAAgBvO,OAAS0hB,GAAkB9iB,KACzC2P,gBACL,EACA1B,EAAWjO,KACN6P,aAEFjJ,WAETmkB,EAlSA,CAAyB/G,EAAA9c,6jBCYzB2kB,GAzBA,SAAApoB,GAKK,SACHqoB,EAAY/rB,EAAMgsB,EAAKC,OAAvBpoB,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKmoB,IAAMA,EAOXnoB,EAAKqoB,gBAAgC/mB,IAAnB8mB,EAA+BA,EAAiB,cArB/CE,GAAAJ,EAAAroB,GAuBvBqoB,EAvBA,CAAuBjsB,6dCkGvBssB,GAjGA,SAAA1oB,GAOK,SACH2oB,EAAYrsB,EAAMgsB,EAAKM,EAAeC,EAAcN,OAApDpoB,EACEH,EAAAI,KAAA7D,KAAMD,EAAMgsB,EAAKC,IAAchsB,YAQ/B4D,EAAKyoB,cAAgBA,EAMrBzoB,EAAK2oB,OAAS,KAMd3oB,EAAK4oB,YAAc,KASnB5oB,EAAK6oB,cAA4BvnB,IAAjBonB,GAA6BA,WAtCnBI,GAAAN,EAAA3oB,GA8C5BlB,OAAA0I,eAAImhB,EAAAhsB,UAAA,QAAK,4BACGmsB,SAAMvsB,KACTusB,OAAMvsB,KAAQ+rB,IAAIY,cAAa3sB,KAAMqsB,qBAEhCE,qBAEJK,QACHL,OAASK,mCAShBrqB,OAAA0I,eAAImhB,EAAAhsB,UAAA,aAAU,4BACFosB,cAAWxsB,KACdwsB,YAAWxsB,KAAQ+rB,IAAIc,uBAAsB7sB,KAAM4sB,aAE9CJ,0BAECjgB,QACRigB,YAAcjgB,mCAQrB6f,EAAAhsB,UAAAC,eAAc,WACZoD,EAAArD,UAAMC,eAAcwD,KAAA7D,yBACAA,KAASqsB,eACLrsB,KAAOqsB,cAAehsB,kBAShD+rB,EAAAhsB,UAAAE,gBAAe,WACbmD,EAAArD,UAAME,gBAAeuD,KAAA7D,0BACAA,KAASqsB,eACNrsB,KAAOqsB,cAAe/rB,mBAGlD8rB,EA/FA,CAA8BU,GAAA5lB,SCF9B6lB,GA6CE,CAtCAC,YAAW,cAOXC,MAAOznB,EAOP0nB,SAAU1nB,EAOV2nB,YAAW,cAQXC,YAAW,cAEXC,YAAW,cACXC,UAAS,YACTC,YAAW,cACXC,WAAU,aACVC,aAAY,eACZC,aAAY,eACZC,cAAa,whBC+SfC,GA3UA,SAAAnqB,GAOK,SACHoqB,EAAY5f,EAAasU,EAAYU,OAArCrf,EACEH,EAAAI,KAAA7D,OAAAA,QAMA4D,EAAKkqB,MAAK,GAMVlqB,EAAKsnB,WAAY,EAMjBtnB,EAAKunB,mBAAoB,EAErBtpB,MAAMC,QAAQmM,EAAY,IAC5BrK,EAAK0e,eAEDrU,EAEFsU,gBAEsBrd,IAAfqd,GAA4BU,EACrCrf,EAAKye,mBACHE,EAC8BtU,GAEhCrK,EAAKkqB,MAAQ7K,eAET1B,EAAS3d,EAAKse,YACZ6L,EAAgD9f,EAChD0B,EAAe,GACfuT,EAAI,GACD7hB,EAAI,EAAGuB,EAAKmrB,EAAY3sB,OAAQC,EAAIuB,IAAMvB,EAAC,KAC5CiqB,EAAayC,EAAY1sB,GACrB,IAANA,IACFkgB,EAAS+J,EAAWpJ,aAEtBxgB,EAAOiO,EAAiB2b,EAAW5J,sBACnCwB,EAAK5f,KAAKqM,EAAgBvO,QAE5BwC,EAAKye,mBAAmBd,EAAQ5R,GAChC/L,EAAKkqB,MAAQ5K,kBAxDW8K,GAAAH,EAAApqB,GAiE5BoqB,EAAAztB,UAAA6tB,iBAAgB,SAAC3C,QACL3b,gBAGRjO,EAAM1B,KAAM2P,gBAAiB2b,EAAW5J,qBAAqBlT,SAHtCxO,KAClB2P,gBAAkB2b,EAAW5J,qBAAqBlT,aAIpDsf,MAAMxqB,KAAItD,KAAM2P,gBAAgBvO,aAChCwF,WAQPinB,EAAAztB,UAAAif,MAAK,eACG6O,EAAe,IAAOL,EAAe7tB,KACpC2P,gBAAgBnB,QAAKxO,KACrBuhB,OAAMvhB,KACN8tB,MAAMtf,gBAEb0f,EAAgBllB,gBAAehJ,MACxBkuB,GAUTL,EAAAztB,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,UAC7BA,EAAqBnR,GAAwBzO,KAAMqU,YAAa7H,EAAGC,GAC9DmT,QAEAuL,mBAAiBnrB,KAAS6G,qBAC5BqkB,UAAYvhB,KAAKqP,KACpBmN,GAAoBnmB,KACb2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,OACL,SAGCsb,kBAAiBnrB,KAAQ6G,eAEzB4f,GAAuBzmB,KACvB2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,OAAM7P,KACNkrB,WACL,EACA1e,EACAC,EACAkT,EACAC,KA0BJiO,EAAAztB,UAAAorB,iBAAgB,SAAClC,EAAGmC,EAAiB0C,WAE3B5M,QAAUF,IAAkBrhB,KAC3BuhB,QAAUF,IACe,IADIrhB,KAC/B2P,gBAAgBvO,OAAY,OAE1B,SAEHmoB,OAAkCrkB,IAApBumB,GAAgCA,EAC9C2C,OAAkClpB,IAApBipB,GAAgCA,kBR/BtDxe,EACAC,EACAsT,EACArT,EACAyZ,EACAC,EACA6E,MAEIA,EAAW,OACN/E,GACL1Z,EACAC,EACAsT,EAAKA,EAAK9hB,OAAS,GACnByO,EACAyZ,EACAC,OAGAhd,KACA+c,EAAI3Z,EAAgBE,EAAS,UAC3B0Z,IACFhd,EAAaoD,EAAgBnB,MAAM,EAAGqB,IAC3BA,EAAS,GAAKyZ,EAClB/c,GAEA,QAGPoD,EAAgBA,EAAgBvO,OAAS,GAAKkoB,SAC5CC,IACFhd,EAAaoD,EAAgBnB,MAAMmB,EAAgBvO,OAASyO,IACjDA,EAAS,GAAKyZ,EAClB/c,GAEA,aAGFlL,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,MACbuO,GAAUpO,MAGV8nB,EAAI3Z,EAAgBC,EAASC,EAAS,GAAC,OAClC,QACEyZ,GAAK3Z,EAAgBnO,EAAM,GAAC,OAC9B6nB,GACL1Z,EACAC,EACApO,EACAqO,EACAyZ,GACA,GAGJ1Z,EAASpO,UAEJ,KQxBE6sB,CAAwBruB,KACxB2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,OACLyZ,EACAC,EACA6E,IASJP,EAAAztB,UAAA2hB,eAAc,kBACLiG,GAAuBhoB,KACvB2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,SAOTge,EAAAztB,UAAAkuB,QAAO,uBACOR,OASdD,EAAAztB,UAAAmuB,cAAa,SAACjpB,UACRA,EAAQ,GAACtF,KAAS8tB,MAAM1sB,QAAUkE,EAC7B,SAEEkpB,GAAAtnB,QAAUlH,KACd2P,gBAAgBnB,MACT,IAAVlJ,EAAc,EAACtF,KAAQ8tB,MAAMxoB,EAAQ,GAACtF,KACjC8tB,MAAMxoB,IAAKtF,KAEbuhB,SASTsM,EAAAztB,UAAAquB,eAAc,mBACN9e,EAAe3P,KAAQ2P,gBACvBuT,EAAIljB,KAAQ8tB,MACZvM,EAAMvhB,KAAQuhB,OAEdwM,EAAW,GACbne,EAAS,EACJvO,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACXiqB,EAAU,IAAOkD,GAAAtnB,QACrByI,EAAgBnB,MAAMoB,EAAQpO,GAC9B+f,GAEFwM,EAAYzqB,KAAKgoB,GACjB1b,EAASpO,SAEJusB,GAMTF,EAAAztB,UAAAsuB,iBAAgB,mBACRC,EAAS,GACThf,EAAe3P,KAAQ2P,gBACzBC,EAAS,EACPsT,EAAIljB,KAAQ8tB,MACZje,EAAM7P,KAAQ6P,OACXxO,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GAQjBK,EAAOitB,EAPUrG,GACf3Y,EACAC,EACApO,EACAqO,EACA,KAGFD,EAASpO,SAEJmtB,GAQTd,EAAAztB,UAAAgiB,8BAA6B,SAAClD,OACtByH,EAAyB,GACzBU,EAAc,UACpBV,EAA0BvlB,OAASgmB,GAAmBpnB,KAC/C2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,OACLqP,EACAyH,EACA,EACAU,OAESwG,EACTlH,EACAtF,GACAgG,IASJwG,EAAAztB,UAAAwgB,QAAO,kBACEhhB,GASTiuB,EAAAztB,UAAAygB,iBAAgB,SAAC3S,mBN1PjByB,EACAC,EACAsT,EACArT,EACA3B,WAES7M,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,IAEzC0oB,GAAqBpa,EAAiBC,EAAQsT,EAAK7hB,GAAIwO,EAAQ3B,GAAM,OAE9D,EAET0B,EAASsT,EAAK7hB,UAET,EM6OEutB,CAAyB5uB,KACzB2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,OACL3B,IAUJ2f,EAAAztB,UAAAkiB,eAAc,SAACrU,EAAasU,QACrBC,UAAUD,EAAYtU,EAAa,QAC9B0B,kBAAe3P,KAClB2P,gBAAe,QAEhBuT,EAAOH,GAAuB/iB,KAC7B2P,gBACL,EACA1B,EAAWjO,KACN6P,OAAM7P,KACN8tB,YAEFne,gBAAgBvO,OAAyB,IAAhB8hB,EAAK9hB,OAAe,EAAI8hB,EAAKA,EAAK9hB,OAAS,QACpEwF,WAETinB,EAzUA,CAA8B7J,EAAA9c,6jBC+F9B2nB,GAzGA,SAAAprB,GAIK,SACHqrB,EAAY7gB,EAAasU,OAAzB3e,EACEH,EAAAI,KAAA7D,OAAAA,YACA4D,EAAK0e,eAAerU,EAAasU,YAPjBwM,GAAAD,EAAArrB,GAelBqrB,EAAA1uB,UAAAif,MAAK,eACGvI,EAAK,IAAOgY,EAAK9uB,KAAM2P,gBAAgBnB,QAAKxO,KAASuhB,eAC3DzK,EAAM9N,gBAAehJ,MACd8W,GAUTgY,EAAA1uB,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,OAC3BjQ,EAAe3P,KAAQ2P,gBACvB8T,EAAkB3N,GACtBtJ,EACAC,EACAkD,EAAgB,GAChBA,EAAgB,OAEd8T,EAAkB7D,EAAkB,SAChC/P,EAAM7P,KAAQ6P,OACXxO,EAAI,EAAGA,EAAIwO,IAAUxO,EAC5Bse,EAAate,GAAKsO,EAAgBtO,UAEpCse,EAAave,OAASyO,EACf4T,SAEA7D,GASXkP,EAAA1uB,UAAA2hB,eAAc,uBACCpS,gBAAe3P,KAAa2P,gBAAgBnB,QAA7B,IAQ9BsgB,EAAA1uB,UAAA+f,cAAa,SAACjS,U/B4J6B3B,E+B3JNvM,KAAM2P,gB/B2JYrB,E+B3JKJ,E/B4JtD1B,EAAID,EAAW,GACfE,EAAIF,EAAW,GACdiD,GAAehD,EAAGC,EAAGD,EAAGC,EAAG6B,OAHS/B,EAAY+B,EACjD9B,EACAC,G+BrJNqiB,EAAA1uB,UAAAwgB,QAAO,kBACEhhB,GASTkvB,EAAA1uB,UAAAygB,iBAAgB,SAAC3S,UACRW,GAAWX,EAAMlO,KAAO2P,gBAAgB,GAAC3P,KAAQ2P,gBAAgB,KAQ1Emf,EAAA1uB,UAAAkiB,eAAc,SAACrU,EAAasU,QACrBC,UAAUD,EAAYtU,EAAa,QAC9B0B,kBAAe3P,KAClB2P,gBAAe,SAEjBA,gBAAgBvO,OAASyhB,GAAiB7iB,KACxC2P,gBACL,EACA1B,EAAWjO,KACN6P,aAEFjJ,WAETkoB,EAvGA,CAAoB9K,EAAA9c,meC4LpB8nB,GAzLA,SAAAvrB,GAKK,SACHwrB,EAAYhhB,EAAasU,OAAzB3e,EACEH,EAAAI,KAAA7D,OAAAA,YACIuiB,IAAe1gB,MAAMC,QAAQmM,EAAY,IAC3CrK,EAAKye,mBACHE,EAC8BtU,GAGhCrK,EAAK0e,eAEDrU,EAEFsU,YAlBiB2M,GAAAD,EAAAxrB,GA4BvBwrB,EAAA7uB,UAAA+uB,YAAW,SAACrY,QACAnH,gBAGRjO,EAAM1B,KAAM2P,gBAAiBmH,EAAM4K,sBAHZ1hB,KAClB2P,gBAAkBmH,EAAM4K,qBAAqBlT,aAI/C5H,WAQPqoB,EAAA7uB,UAAAif,MAAK,eACG+P,EAAU,IAAOH,EAAUjvB,KAC1B2P,gBAAgBnB,QAAKxO,KACrBuhB,eAEP6N,EAAWpmB,gBAAehJ,MACnBovB,GAUTH,EAAA7uB,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,MAC7BA,EAAqBnR,GAAwBzO,KAAMqU,YAAa7H,EAAGC,GAAC,OAC/DmT,UAEHjQ,EAAe3P,KAAQ2P,gBACvBE,EAAM7P,KAAQ6P,OACXxO,EAAI,EAAGuB,EAAK+M,EAAgBvO,OAAQC,EAAIuB,EAAIvB,GAAKwO,EAAM,KACxD4T,EAAkB3N,GACtBtJ,EACAC,EACAkD,EAAgBtO,GAChBsO,EAAgBtO,EAAI,OAElBoiB,EAAkB7D,EAAkB,CACtCA,EAAqB6D,UACZlG,EAAI,EAAGA,EAAI1N,IAAU0N,EAC5BoC,EAAapC,GAAK5N,EAAgBtO,EAAIkc,GAExCoC,EAAave,OAASyO,UAGnB+P,GAQTqP,EAAA7uB,UAAA2hB,eAAc,kBACL+F,GAAkB9nB,KAClB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,SAUTof,EAAA7uB,UAAAivB,SAAQ,SAAC/pB,OACDnE,EAACnB,KAAS2P,gBACX3P,KACI2P,gBAAgBvO,OAAMpB,KAAQ6P,OADnC,SAEAvK,EAAQ,GAAKnE,GAAKmE,EACb,SAEEgqB,GAAApoB,QAAKlH,KACT2P,gBAAgBnB,MACnBlJ,EAAKtF,KAAQ6P,QACZvK,EAAQ,GAACtF,KAAS6P,QAAM7P,KAEtBuhB,SAST0N,EAAA7uB,UAAAmvB,UAAS,mBACD5f,EAAe3P,KAAQ2P,gBACvB4R,EAAMvhB,KAAQuhB,OACd1R,EAAM7P,KAAQ6P,OAEd2f,EAAM,GACHnuB,EAAI,EAAGuB,EAAK+M,EAAgBvO,OAAQC,EAAIuB,EAAIvB,GAAKwO,EAAM,KACxDiH,EAAK,IAAOwY,GAAApoB,QAAMyI,EAAgBnB,MAAMnN,EAAGA,EAAIwO,GAAS0R,GAC9DiO,EAAOlsB,KAAKwT,UAEP0Y,GAQTP,EAAA7uB,UAAAwgB,QAAO,kBACEhhB,GASTqvB,EAAA7uB,UAAAygB,iBAAgB,SAAC3S,WACTyB,EAAe3P,KAAQ2P,gBACvBE,EAAM7P,KAAQ6P,OACXxO,EAAI,EAAGuB,EAAK+M,EAAgBvO,OAAQC,EAAIuB,EAAIvB,GAAKwO,EAAM,IAG1DhB,GAAWX,EAFLyB,EAAgBtO,GAChBsO,EAAgBtO,EAAI,IACH,OAClB,SAGJ,GAST4tB,EAAA7uB,UAAAkiB,eAAc,SAACrU,EAAasU,QACrBC,UAAUD,EAAYtU,EAAa,QAC9B0B,kBAAe3P,KAClB2P,gBAAe,SAEjBA,gBAAgBvO,OAAS0hB,GAAkB9iB,KACzC2P,gBACL,EACA1B,EAAWjO,KACN6P,aAEFjJ,WAETqoB,EAvLA,CAAyBjL,EAAA9c,yQCPTuoB,GAAW9f,EAAiBC,EAAQpO,EAAKqO,WACnD6f,EAAY,EACZ5d,EAAKnC,EAAgBnO,EAAMqO,GAC3BqC,EAAKvC,EAAgBnO,EAAMqO,EAAS,GACjCD,EAASpO,EAAKoO,GAAUC,EAAM,KAC7BkC,EAAKpC,EAAgBC,GACrBuC,EAAKxC,EAAgBC,EAAS,GACpC8f,GAAaxd,EAAKH,EAAKD,EAAKK,EAC5BL,EAAKC,EACLG,EAAKC,SAEAud,EAAY,WAULC,GAAYhgB,EAAiBC,EAAQsT,EAAMrT,WACrDc,EAAO,EACFtP,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACjBsP,GAAQ8e,GAAW9f,EAAiBC,EAAQpO,EAAKqO,GACjDD,EAASpO,SAEJmP,mgBCsJTif,GAzKA,SAAAnsB,GAKK,SACHosB,EAAY5hB,EAAasU,OAAzB3e,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKsnB,WAAY,EAMjBtnB,EAAKunB,mBAAoB,OAENjmB,IAAfqd,GAA6B1gB,MAAMC,QAAQmM,EAAY,IAMzDrK,EAAK0e,eAEDrU,EAEFsU,GATF3e,EAAKye,mBACHE,EAC8BtU,YAxBb6hB,GAAAD,EAAApsB,GAyCvBosB,EAAAzvB,UAAAif,MAAK,sBACQwQ,EAAU7vB,KAAM2P,gBAAgBnB,QAAKxO,KAASuhB,SAU3DsO,EAAAzvB,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,UAC7BA,EAAqBnR,GAAwBzO,KAAMqU,YAAa7H,EAAGC,GAC9DmT,QAEAuL,mBAAiBnrB,KAAS6G,qBAC5BqkB,UAAYvhB,KAAKqP,KACpBiN,GAAejmB,KACR2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACL,SAGCsb,kBAAiBnrB,KAAQ6G,eAEzBuf,GAAkBpmB,KAClB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OAAM7P,KACNkrB,WACL,EACA1e,EACAC,EACAkT,EACAC,KASJiQ,EAAAzvB,UAAA2vB,QAAO,kBACEN,GAAczvB,KACd2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,SASTggB,EAAAzvB,UAAA2hB,eAAc,kBACL+F,GAAkB9nB,KAClB2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,SASTggB,EAAAzvB,UAAAgiB,8BAA6B,SAAClD,OACtByH,EAAyB,UAC/BA,EAA0BvlB,OAASslB,GAAc1mB,KAC1C2P,gBACL,EAAC3P,KACI2P,gBAAgBvO,OAAMpB,KACtB6P,OACLqP,EACAyH,EACA,OAESkJ,EAAWlJ,EAA2BtF,KAQnDwO,EAAAzvB,UAAAwgB,QAAO,kBACEhhB,GASTiwB,EAAAzvB,UAAAygB,iBAAgB,SAAC3S,UACR,GAST2hB,EAAAzvB,UAAAkiB,eAAc,SAACrU,EAAasU,QACrBC,UAAUD,EAAYtU,EAAa,QAC9B0B,kBAAe3P,KAClB2P,gBAAe,SAEjBA,gBAAgBvO,OAAS0hB,GAAkB9iB,KACzC2P,gBACL,EACA1B,EAAWjO,KACN6P,aAEFjJ,WAETipB,EAvKA,CAAyB7L,EAAA9c,kBCDT8oB,GACdrgB,EACAC,EACAsT,EACArT,EACAogB,EACAC,EACA7S,WAEIhc,EAAGuB,EAAI4J,EAAGsF,EAAIC,EAAIG,EAAIC,EACpB1F,EAAIwjB,EAAYC,EAAoB,GAEpCC,EAAa,GAEV/Z,EAAI,EAAGga,EAAKlN,EAAK9hB,OAAQgV,EAAIga,IAAMha,EAAC,KACrC5U,EAAM0hB,EAAK9M,OACjBtE,EAAKnC,EAAgBnO,EAAMqO,GAC3BqC,EAAKvC,EAAgBnO,EAAMqO,EAAS,GAC/BxO,EAAIuO,EAAQvO,EAAIG,EAAKH,GAAKwO,EAC7BkC,EAAKpC,EAAgBtO,GACrB8Q,EAAKxC,EAAgBtO,EAAI,IACpBoL,GAAKyF,GAAMC,GAAM1F,GAAOyF,GAAMzF,GAAKA,GAAK0F,KAC3C3F,GAAMC,EAAIyF,IAAOC,EAAKD,IAAQH,EAAKD,GAAMA,EACzCqe,EAAc7sB,KAAKkJ,IAErBsF,EAAKC,EACLG,EAAKC,MAKLke,EAASpQ,IACTqQ,GAAoB/gB,EAAAA,MACxB4gB,EAAcI,KAAK1vB,GACnBiR,EAAKqe,EAAc,GACd9uB,EAAI,EAAGuB,EAAKutB,EAAc/uB,OAAQC,EAAIuB,IAAMvB,EAAC,CAChD0Q,EAAKoe,EAAc9uB,OACbmvB,EAAgB7mB,KAAK8mB,IAAI1e,EAAKD,GAChC0e,EAAgBF,GAEdxG,GAAsBna,EAAiBC,EAAQsT,EAAMrT,EADzDrD,GAAKsF,EAAKC,GAAM,EACoDtF,KAClE4jB,EAAS7jB,EACT8jB,EAAmBE,GAGvB1e,EAAKC,SAEHqO,MAAMiQ,KAGRA,EAASJ,EAAYC,IAEnB7S,GACFA,EAAS/Z,KAAK+sB,EAAQ5jB,EAAG6jB,GAClBjT,IAECgT,EAAQ5jB,EAAG6jB,YCjEPI,GAAY/gB,EAAiBC,EAAQpO,EAAKqO,QACjDD,EAASpO,EAAMqO,GAAM,SACjBxO,EAAI,EAAGA,EAAIwO,IAAUxO,EAAC,KACvBI,EAAMkO,EAAgBC,EAASvO,GACrCsO,EAAgBC,EAASvO,GAAKsO,EAAgBnO,EAAMqO,EAASxO,GAC7DsO,EAAgBnO,EAAMqO,EAASxO,GAAKI,EAEtCmO,GAAUC,EACVrO,GAAOqO,YCHK8gB,GAAsBhhB,EAAiBC,EAAQpO,EAAKqO,WAG9D+gB,EAAO,EACP9e,EAAKnC,EAAgBnO,EAAMqO,GAC3BqC,EAAKvC,EAAgBnO,EAAMqO,EAAS,GACjCD,EAASpO,EAAKoO,GAAUC,EAAM,KAC7BkC,EAAKpC,EAAgBC,GACrBuC,EAAKxC,EAAgBC,EAAS,GACpCghB,IAAS7e,EAAKD,IAAOK,EAAKD,GAC1BJ,EAAKC,EACLG,EAAKC,SAES,IAATye,OAAa1rB,EAAY0rB,EAAO,WAgBzBC,GACdlhB,EACAC,EACAsT,EACArT,EACAihB,WAEMC,OAAsB7rB,IAAd4rB,GAA0BA,EAC/BzvB,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACX2vB,EAAcL,GAClBhhB,EACAC,EACApO,EACAqO,MAEQ,IAANxO,MACG0vB,GAASC,IAAkBD,IAAUC,EAAW,OAC5C,UAGJD,IAAUC,IAAkBD,GAASC,EAAW,OAC5C,EAGXphB,EAASpO,SAEJ,WAkDOyvB,GACdthB,EACAC,EACAsT,EACArT,EACAihB,WAEMC,OAAsB7rB,IAAd4rB,GAA0BA,EAC/BzvB,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACX2vB,EAAcL,GAClBhhB,EACAC,EACApO,EACAqO,IAGM,IAANxO,EACK0vB,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1CN,GAAmB/gB,EAAiBC,EAAQpO,EAAKqO,GAEnDD,EAASpO,SAEJoO,WAgBOshB,GACdvhB,EACAC,EACAuY,EACAtY,EACAihB,WAESzvB,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAC3CuO,EAASqhB,GACPthB,EACAC,EACAuY,EAAM9mB,GACNwO,EACAihB,UAGGlhB,geCtJTuhB,GAAA,SAAA1tB,GAWK,SACH2tB,EAAYnjB,EAAasU,EAAYU,OAArCrf,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKkqB,MAAK,GAMVlqB,EAAKytB,4BAA6B,EAMlCztB,EAAK0tB,mBAAqB,KAM1B1tB,EAAKsnB,WAAY,EAMjBtnB,EAAKunB,mBAAoB,EAMzBvnB,EAAK2tB,mBAAoB,EAMzB3tB,EAAK4tB,yBAA2B,UAEbtsB,IAAfqd,GAA4BU,GAC9Brf,EAAKye,mBACHE,EAC8BtU,GAEhCrK,EAAKkqB,MAAQ7K,GAEbrf,EAAK0e,eAEDrU,EAEFsU,YApEckP,GAAAL,EAAA3tB,GA8EpB2tB,EAAAhxB,UAAAsxB,iBAAgB,SAACC,QACLhiB,gBAGRjO,EAAM1B,KAAM2P,gBAAiBgiB,EAAWjQ,sBAHjB1hB,KAClB2P,gBAAkBgiB,EAAWjQ,qBAAqBlT,aAIpDsf,MAAMxqB,KAAItD,KAAM2P,gBAAgBvO,aAChCwF,WAQPwqB,EAAAhxB,UAAAif,MAAK,eACGuS,EAAO,IAAOR,EAAOpxB,KACpB2P,gBAAgBnB,QAAKxO,KACrBuhB,OAAMvhB,KACN8tB,MAAMtf,gBAEbojB,EAAQ5oB,gBAAehJ,MAChB4xB,GAUTR,EAAAhxB,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,UAC7BA,EAAqBnR,GAAwBzO,KAAMqU,YAAa7H,EAAGC,GAC9DmT,QAEAuL,mBAAiBnrB,KAAS6G,qBAC5BqkB,UAAYvhB,KAAKqP,KACpBmN,GAAoBnmB,KACb2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,OACL,SAGCsb,kBAAiBnrB,KAAQ6G,eAEzB4f,GAAuBzmB,KACvB2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,OAAM7P,KACNkrB,WACL,EACA1e,EACAC,EACAkT,EACAC,KASJwR,EAAAhxB,UAAAyf,WAAU,SAACrT,EAAGC,UACLqd,GAAqB9pB,KACrB6xB,6BACL,EAAC7xB,KACI8tB,MAAK9tB,KACL6P,OACLrD,EACAC,IASJ2kB,EAAAhxB,UAAA2vB,QAAO,kBACEJ,GAAe3vB,KACf6xB,6BACL,EAAC7xB,KACI8tB,MAAK9tB,KACL6P,SAiBTuhB,EAAAhxB,UAAA2hB,eAAc,SAAC+O,OACTnhB,cACczK,IAAd4rB,EAEFG,GADAthB,EAAe3P,KAAQ6xB,6BAA6BrjB,QACjB,EAACxO,KAAO8tB,MAAK9tB,KAAO6P,OAAQihB,GAE/DnhB,EAAe3P,KAAQ2P,gBAGlBqY,GAAwBrY,EAAiB,EAAC3P,KAAO8tB,MAAK9tB,KAAO6P,SAMtEuhB,EAAAhxB,UAAAkuB,QAAO,uBACOR,OAMdsD,EAAAhxB,UAAA0xB,qBAAoB,mBACTT,4BAA0BrxB,KAAS6G,cAAW,KAC/CkrB,EAAahhB,GAAS/Q,KAAMqU,kBAC7Bid,mBAAqBtB,GAAuBhwB,KAC1C6xB,6BACL,EAAC7xB,KACI8tB,MAAK9tB,KACL6P,OACLkiB,EACA,QAEGV,2BAA0BrxB,KAAQ6G,0BAE7ByqB,oBASdF,EAAAhxB,UAAA4xB,iBAAgB,sBACH1C,GAAApoB,QAAKlH,KAAM8xB,uBAAwBzQ,KAUhD+P,EAAAhxB,UAAA6xB,mBAAkB,uBACJnE,MAAM1sB,QAapBgwB,EAAAhxB,UAAA8xB,cAAa,SAAC5sB,UACRA,EAAQ,GAACtF,KAAS8tB,MAAM1sB,QAAUkE,EAC7B,SAEE6sB,GAAAjrB,QAAUlH,KACd2P,gBAAgBnB,MACT,IAAVlJ,EAAc,EAACtF,KAAQ8tB,MAAMxoB,EAAQ,GAACtF,KACjC8tB,MAAMxoB,IAAKtF,KAEbuhB,SAST6P,EAAAhxB,UAAAgyB,eAAc,mBACN7Q,EAAMvhB,KAAQuhB,OACd5R,EAAe3P,KAAQ2P,gBACvBuT,EAAIljB,KAAQ8tB,MACZuE,EAAW,GACbziB,EAAS,EACJvO,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACXswB,EAAU,IAAOQ,GAAAjrB,QACrByI,EAAgBnB,MAAMoB,EAAQpO,GAC9B+f,GAEF8Q,EAAY/uB,KAAKquB,GACjB/hB,EAASpO,SAEJ6wB,GAMTjB,EAAAhxB,UAAAyxB,2BAA0B,mBACfN,mBAAiBvxB,KAAS6G,cAAW,KACtC8I,EAAe3P,KAAQ2P,gBACzBkhB,GAAuBlhB,EAAiB,EAAC3P,KAAO8tB,MAAK9tB,KAAO6P,QAAM7P,KAC/DwxB,yBAA2B7hB,QAE3B6hB,yBAA2B7hB,EAAgBnB,aAC3CgjB,yBAAyBpwB,OAAS6vB,GAAiBjxB,KACjDwxB,yBACL,EAACxxB,KACI8tB,MAAK9tB,KACL6P,cAGJ0hB,kBAAiBvxB,KAAQ6G,0BAEpB2qB,0BAQdJ,EAAAhxB,UAAAgiB,8BAA6B,SAAClD,OACtByH,EAAyB,GACzBU,EAAc,UACpBV,EAA0BvlB,OAASqmB,GAAaznB,KACzC2P,gBACL,EAAC3P,KACI8tB,MAAK9tB,KACL6P,OACLlG,KAAKqP,KAAKkG,GACVyH,EACA,EACAU,OAES+J,EACTzK,EACAtF,GACAgG,IASJ+J,EAAAhxB,UAAAwgB,QAAO,kBACEhhB,GASTwxB,EAAAhxB,UAAAygB,iBAAgB,SAAC3S,UACRyc,GAAyB3qB,KACzB6xB,6BACL,EAAC7xB,KACI8tB,MAAK9tB,KACL6P,OACL3B,IAUJkjB,EAAAhxB,UAAAkiB,eAAc,SAACrU,EAAasU,QACrBC,UAAUD,EAAYtU,EAAa,QAC9B0B,kBAAe3P,KAClB2P,gBAAe,QAEhBuT,EAAOH,GAAuB/iB,KAC7B2P,gBACL,EACA1B,EAAWjO,KACN6P,OAAM7P,KACN8tB,YAEFne,gBAAgBvO,OAAyB,IAAhB8hB,EAAK9hB,OAAe,EAAI8hB,EAAKA,EAAK9hB,OAAS,QACpEwF,WAETwqB,EA7XA,CAAsBpN,EAAA9c,SA+XtBorB,GAAenB,YAcCoB,GAASphB,EAAQuH,EAAQ8Z,EAAOC,WACxCtxB,EAAIqxB,GAAgB,GAEpB7iB,EAAe,GACZtO,EAAI,EAAGA,EAAIF,IAAKE,EACvBK,EACEiO,EACAsJ,GAAa9H,EAAQuH,EAAS,EAAI/O,KAAKC,GAAKvI,EAAKF,EAAGsxB,WAGxD9iB,EAAgBrM,KAAKqM,EAAgB,GAAIA,EAAgB,QAC9CwhB,GAAQxhB,EAAiB0R,GAAiB,CACnD1R,EAAgBvO,kBAUJsxB,GAAWxkB,OACnBgB,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdyB,EAAe,CACnBT,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,cAESgiB,GAAQxhB,EAAiB0R,GAAiB,CACnD1R,EAAgBvO,kBAaJuxB,GAAWnP,EAAQoP,EAAWC,WACtCC,EAAQF,GAAwB,GAChC/iB,EAAS2T,EAAO7B,YAChBJ,EAASiC,EAAOtB,YAChB/Q,EAASqS,EAAOK,YAChBkP,EAAcljB,GAAUijB,EAAQ,GAChCnjB,EAAe,IAAO9N,MAAMkxB,GACzB1xB,EAAI,EAAGA,EAAI0xB,EAAa1xB,GAAKwO,EAAM,CAC1CF,EAAgBtO,GAAK,EACrBsO,EAAgBtO,EAAI,GAAK,UAChBkc,EAAI,EAAGA,EAAI1N,EAAQ0N,IAC1B5N,EAAgBtO,EAAIkc,GAAKpM,EAAOoM,OAG9B2F,EAAI,CAAIvT,EAAgBvO,QACxBwwB,EAAO,IAAOT,GAAQxhB,EAAiB4R,EAAQ2B,UACrD8P,GAAYpB,EAASzgB,EAAQqS,EAAOG,YAAakP,GAC1CjB,WAWOoB,GAAYpB,EAASzgB,EAAQuH,EAAQma,WAC7CljB,EAAkBiiB,EAAQlQ,qBAC1B7R,EAAS+hB,EAAQjQ,YACjBmR,EAAQnjB,EAAgBvO,OAASyO,EAAS,EAC1CojB,EAAaJ,GAAwB,EAClCxxB,EAAI,EAAGA,GAAKyxB,IAASzxB,EAAC,KACvBuO,EAASvO,EAAIwO,EACb9C,EAAQkmB,EAAiC,EAAnB9c,GAAO9U,EAAGyxB,GAAanpB,KAAKC,GAAMkpB,EAC9DnjB,EAAgBC,GAAUuB,EAAO,GAAKuH,EAAS/O,KAAKwD,IAAIJ,GACxD4C,EAAgBC,EAAS,GAAKuB,EAAO,GAAKuH,EAAS/O,KAAKuD,IAAIH,GAE9D6kB,EAAQhrB,weCtCVssB,GA9bA,SAAAzvB,GAMK,SACH0vB,EAAYllB,EAAasU,EAAY6Q,OAArCxvB,EACEH,EAAAI,KAAA7D,OAAAA,QAMA4D,EAAKyvB,OAAM,GAMXzvB,EAAK0vB,6BAA8B,EAMnC1vB,EAAK2vB,oBAAsB,KAM3B3vB,EAAKsnB,WAAY,EAMjBtnB,EAAKunB,mBAAoB,EAMzBvnB,EAAK2tB,mBAAoB,EAMzB3tB,EAAK4tB,yBAA2B,MAE3B4B,IAAcvxB,MAAMC,QAAQmM,EAAY,IAAC,SACxCsT,EAAS3d,EAAKse,YACZsR,EAA0CvlB,EAC1C0B,EAAe,GACfwY,EAAK,GACF9mB,EAAI,EAAGuB,EAAK4wB,EAASpyB,OAAQC,EAAIuB,IAAMvB,EAAC,KACzCuwB,EAAU4B,EAASnyB,GACf,IAANA,IACFkgB,EAASqQ,EAAQ1P,qBAEbtS,EAASD,EAAgBvO,OACzB8hB,EAAO0O,EAAQtD,UACZ/Q,EAAI,EAAG4F,EAAKD,EAAK9hB,OAAQmc,EAAI4F,IAAM5F,EAC1C2F,EAAK3F,IAAM3N,EAEblO,EAAOiO,EAAiBiiB,EAAQlQ,sBAChCyG,EAAM7kB,KAAK4f,GAEbX,EAAahB,EACbtT,EAAc0B,EACdyjB,EAAYjL,cAEKjjB,IAAfqd,GAA4B6Q,GAC9BxvB,EAAKye,mBACHE,EAC8BtU,GAEhCrK,EAAKyvB,OAASD,GAEdxvB,EAAK0e,eAEDrU,EAEFsU,YArFmBkR,GAAAN,EAAA1vB,GA+FzB0vB,EAAA/yB,UAAAszB,cAAa,SAAC9B,GACgB,IACxB1O,UACMvT,qBAKFC,EAAM5P,KAAQ2P,gBAAgBvO,OACpCM,EAAM1B,KAAM2P,gBAAiBiiB,EAAQlQ,8BAE5BrgB,EAAI,EAAGuB,GADhBsgB,EAAO0O,EAAQtD,UAAU9f,SACCpN,OAAQC,EAAIuB,IAAMvB,EAC1C6hB,EAAK7hB,IAAMuO,YARRD,gBAAkBiiB,EAAQlQ,qBAAqBlT,QACpD0U,EAAO0O,EAAQtD,UAAU9f,aACpB6kB,OAAO/vB,YAST+vB,OAAO/vB,KAAK4f,QACZtc,WAQPusB,EAAA/yB,UAAAif,MAAK,mBACGvY,EAAG9G,KAAQqzB,OAAOjyB,OAClBuyB,EAAQ,IAAO9xB,MAAMiF,GAClBzF,EAAI,EAAGA,EAAIyF,IAAOzF,EACzBsyB,EAAStyB,GAACrB,KAASqzB,OAAOhyB,GAAGmN,YAGzBolB,EAAY,IAAOT,EAAYnzB,KAC9B2P,gBAAgBnB,QAAKxO,KACrBuhB,OACLoS,UAEFC,EAAa5qB,gBAAehJ,MAErB4zB,GAUTT,EAAA/yB,UAAAsf,eAAc,SAAClT,EAAGC,EAAGkT,EAAcC,UAC7BA,EAAqBnR,GAAwBzO,KAAMqU,YAAa7H,EAAGC,GAC9DmT,QAEAuL,mBAAiBnrB,KAAS6G,qBAC5BqkB,UAAYvhB,KAAKqP,crBlE1BrJ,EACAC,EACAuY,EACAtY,EACAK,WAES7O,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,GACnB6O,EAAMiW,GAAqBxW,EAAiBC,EAAQsT,EAAMrT,EAAQK,GAClEN,EAASsT,EAAKA,EAAK9hB,OAAS,UAEvB8O,EqBwDD2jB,CAAyB7zB,KAClB2P,gBACL,EAAC3P,KACIqzB,OAAMrzB,KACN6P,OACL,SAGCsb,kBAAiBnrB,KAAQ6G,wBrBmHlC8I,EACAC,EACAuY,EACAtY,EACAwW,EACAC,EACA9Z,EACAC,EACAkT,EACAC,EACA2G,WAEMC,EAAWD,GAA2B,CAAItG,IAAKA,KAC5C5e,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,GACnBue,EAAqB6G,GACnB9W,EACAC,EACAsT,EACArT,EACAwW,EACAC,EACA9Z,EACAC,EACAkT,EACAC,EACA4G,GAEF5W,EAASsT,EAAKA,EAAK9hB,OAAS,UAEvBwe,EqB/IEkU,CAA4B9zB,KAC5B6xB,6BACL,EAAC7xB,KACIqzB,OAAMrzB,KACN6P,OAAM7P,KACNkrB,WACL,EACA1e,EACAC,EACAkT,EACAC,KASJuT,EAAA/yB,UAAAyf,WAAU,SAACrT,EAAGC,mBhBrFdkD,EACAC,EACAuY,EACAtY,EACArD,EACAC,MAEqB,IAAjB0b,EAAM/mB,OAAY,OACb,UAEAC,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,MACfyoB,GAAsBna,EAAiBC,EAAQsT,EAAMrT,EAAQrD,EAAGC,GAAC,OAC5D,EAETmD,EAASsT,EAAKA,EAAK9hB,OAAS,UAEvB,EgBqEE2yB,CAAsB/zB,KACtB6xB,6BACL,EAAC7xB,KACIqzB,OAAMrzB,KACN6P,OACLrD,EACAC,IASJ0mB,EAAA/yB,UAAA2vB,QAAO,2BNlLoBpgB,EAAiBC,EAAQuY,EAAOtY,WACvDc,EAAO,EACFtP,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,GACnBsP,GAAQgf,GAAYhgB,EAAiBC,EAAQsT,EAAMrT,GACnDD,EAASsT,EAAKA,EAAK9hB,OAAS,UAEvBuP,EM4KEqjB,CAAgBh0B,KAChB6xB,6BACL,EAAC7xB,KACIqzB,OAAMrzB,KACN6P,SAiBTsjB,EAAA/yB,UAAA2hB,eAAc,SAAC+O,OACTnhB,cACczK,IAAd4rB,EAEFI,GADAvhB,EAAe3P,KAAQ6xB,6BAA6BrjB,QAGlD,EAACxO,KACIqzB,OAAMrzB,KACN6P,OACLihB,GAGFnhB,EAAe3P,KAAQ2P,gBAGlBuY,GACLvY,EACA,EAAC3P,KACIqzB,OAAMrzB,KACN6P,SAOTsjB,EAAA/yB,UAAA6zB,SAAQ,uBACMZ,QAMdF,EAAA/yB,UAAA8zB,sBAAqB,mBACVZ,6BAA2BtzB,KAAS6G,cAAW,KAChDopB,WChRiBtgB,EAAiBC,EAAQuY,EAAOtY,WACrDogB,EAAW,GACb/hB,GxCqLIqB,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,GwCpL5BlO,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,GACnB6M,EAASwB,GACPC,EACAC,EACAsT,EAAK,GACLrT,GAEFogB,EAAY3sB,MAAM4K,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACxE0B,EAASsT,EAAKA,EAAK9hB,OAAS,UAEvB6uB,EDkQiBkE,CAAkBn0B,KAC/B2P,gBACL,EAAC3P,KACIqzB,OAAMrzB,KACN6P,aAEF0jB,6BJzMT5jB,EACAC,EACAuY,EACAtY,EACAogB,WAEImE,EAAc,GACT/yB,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,GACnB+yB,EAAiBpE,GACfrgB,EACAC,EACAsT,EACArT,EACAogB,EACA,EAAI5uB,EACJ+yB,GAEFxkB,EAASsT,EAAKA,EAAK9hB,OAAS,UAEvBgzB,EIqLwBC,CAA6Br0B,KACjD6xB,6BACL,EAAC7xB,KACIqzB,OAAMrzB,KACN6P,OACLogB,QAEGqD,4BAA2BtzB,KAAQ6G,0BAE9B0sB,qBASdJ,EAAA/yB,UAAAk0B,kBAAiB,sBACJC,GAAArtB,QAAUlH,KACdk0B,wBAAwB1lB,QAC7B6S,KAOJ8R,EAAA/yB,UAAAyxB,2BAA0B,mBACfN,mBAAiBvxB,KAAS6G,cAAW,KACtC8I,EAAe3P,KAAQ2P,0BFxOjCA,EACAC,EACAuY,EACAtY,EACAihB,WAESzvB,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,OAEhBwvB,GAAuBlhB,EAAiBC,EAAQsT,EAAMrT,EAAQihB,GAAS,OAEjE,EAEL5N,EAAK9hB,SACPwO,EAASsT,EAAKA,EAAK9hB,OAAS,WAGzB,EEyNDozB,CAAwB7kB,EAAiB,EAAC3P,KAAOqzB,OAAMrzB,KAAO6P,cAIzD2hB,yBAA2B7hB,EAAgBnB,aAC3CgjB,yBAAyBpwB,OAAS8vB,GAAsBlxB,KACtDwxB,yBACL,EAACxxB,KACIqzB,OAAMrzB,KACN6P,SAT6D7P,KAE/DwxB,yBAA2B7hB,OAU7B4hB,kBAAiBvxB,KAAQ6G,0BAEpB2qB,0BAQd2B,EAAA/yB,UAAAgiB,8BAA6B,SAAClD,OACtByH,EAAyB,GACzB8N,EAAe,UACrB9N,EAA0BvlB,gBpBwG5BuO,EACAC,EACAuY,EACAtY,EACA8Q,EACAgG,EACAC,EACA6N,WAESpzB,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,GACbgmB,EAAc,GACpBT,EAAmBa,GACjB9X,EACAC,EACAsT,EACArT,EACA8Q,EACAgG,EACAC,EACAS,GAEFoN,EAAgBnxB,KAAK+jB,GACrBzX,EAASsT,EAAKA,EAAK9hB,OAAS,UAEvBwlB,EoBjI8B8N,CAAkB10B,KAC9C2P,gBACL,EAAC3P,KACIqzB,OAAMrzB,KACN6P,OACLlG,KAAKqP,KAAKkG,GACVyH,EACA,EACA8N,OAEStB,EACTxM,EACAtF,GACAoT,IAUJtB,EAAA/yB,UAAAu0B,WAAU,SAACrvB,MACLA,EAAQ,GAACtF,KAASqzB,OAAOjyB,QAAUkE,EAAK,OACnC,SAELsK,KACU,IAAVtK,EACFsK,EAAS,WAEHglB,EAAQ50B,KAAQqzB,OAAO/tB,EAAQ,GACrCsK,EAASglB,EAASA,EAASxzB,OAAS,OAEhC8hB,EAAIljB,KAAQqzB,OAAO/tB,GAAOkJ,QAC1BhN,EAAM0hB,EAAKA,EAAK9hB,OAAS,MAChB,IAAXwO,EAAY,IAAA,IACLvO,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAC1C6hB,EAAK7hB,IAAMuO,aAGJilB,GAAA3tB,QAAOlH,KACX2P,gBAAgBnB,MAAMoB,EAAQpO,GAAGxB,KACjCuhB,OACL2B,IASJiQ,EAAA/yB,UAAA00B,YAAW,mBACHvT,EAAMvhB,KAAQuhB,OACd5R,EAAe3P,KAAQ2P,gBACvBwY,EAAKnoB,KAAQqzB,OACbG,EAAQ,GACV5jB,EAAS,EACJvO,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,GAAGmN,QAChBhN,EAAM0hB,EAAKA,EAAK9hB,OAAS,MAChB,IAAXwO,EAAY,IAAA,IACL2N,EAAI,EAAG4F,EAAKD,EAAK9hB,OAAQmc,EAAI4F,IAAM5F,EAC1C2F,EAAK3F,IAAM3N,MAGTgiB,EAAO,IAAOiD,GAAA3tB,QAClByI,EAAgBnB,MAAMoB,EAAQpO,GAC9B+f,EACA2B,GAEFsQ,EAASlwB,KAAKsuB,GACdhiB,EAASpO,SAEJgyB,GAQTL,EAAA/yB,UAAAwgB,QAAO,kBACEhhB,GASTuzB,EAAA/yB,UAAAygB,iBAAgB,SAAC3S,mBfjOjByB,EACAC,EACAuY,EACAtY,EACA3B,WAES7M,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,MAEjBspB,GAA0Bhb,EAAiBC,EAAQsT,EAAMrT,EAAQ3B,GAAM,OAEhE,EAET0B,EAASsT,EAAKA,EAAK9hB,OAAS,UAEvB,EemNE2zB,CAA8B/0B,KAC9B6xB,6BACL,EAAC7xB,KACIqzB,OAAMrzB,KACN6P,OACL3B,IAUJilB,EAAA/yB,UAAAkiB,eAAc,SAACrU,EAAasU,QACrBC,UAAUD,EAAYtU,EAAa,QAC9B0B,kBAAe3P,KAClB2P,gBAAe,QAEhBwY,WzB7XRxY,EACAC,EACAyY,EACAxY,EACAujB,WAEMjL,EAAQiL,GAAqB,GAC/B/xB,EAAI,EACCkc,EAAI,EAAG4F,EAAKkF,EAAcjnB,OAAQmc,EAAI4F,IAAM5F,EAAC,KAC9C2F,EAAOH,GACXpT,EACAC,EACAyY,EAAc9K,GACd1N,EACAsY,EAAM9mB,IAER8mB,EAAM9mB,KAAO6hB,EACbtT,EAASsT,EAAKA,EAAK9hB,OAAS,UAE9B+mB,EAAM/mB,OAASC,EACR8mB,EyByWS6M,CAA4Bh1B,KACnC2P,gBACL,EACA1B,EAAWjO,KACN6P,OAAM7P,KACNqzB,WAEc,IAAjBlL,EAAM/mB,OAAYpB,KACf2P,gBAAgBvO,OAAS,WAExB6zB,EAAW9M,EAAMA,EAAM/mB,OAAS,QACjCuO,gBAAgBvO,OACC,IAApB6zB,EAAS7zB,OAAe,EAAI6zB,EAASA,EAAS7zB,OAAS,QAEtDwF,WAETusB,EA5bA,CAA2BnP,EAAA9c,yGEvBXguB,GAAOrf,UACdlM,KAAKwrB,IAAItf,EAAG,YASLuf,GAAQvf,UACf,EAAIqf,GAAO,EAAIrf,YASRwf,GAASxf,UAChB,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,WASjByf,GAAOzf,UACdA,klBCyFO0f,GAAIC,EAAM9R,EAAO+R,OACzBC,EAAgBF,EAAKG,uBACvBD,EAAa,KACTvkB,EAAM,CAAIukB,EAAc,GAAKhS,EAAM,GAAIgS,EAAc,GAAKhS,EAAM,IACtE8R,EAAKI,gBAAe,CAClBC,cAA2B3wB,IAAjBuwB,EAA6BA,EAAe,IACtDK,OAAQR,GACRnkB,OAAQqkB,EAAKO,qBAAqB5kB,eAWxB6kB,GAAYR,EAAM9R,EAAOjD,EAAYgV,OAC7CQ,EAAcT,EAAKU,kBAELhxB,IAAhB+wB,OAIEE,EAAUX,EAAKY,mBAAmBH,EAAcvS,GAChD2S,EAAgBb,EAAKc,qBAAqBH,GAE5CX,EAAKe,gBACPf,EAAKgB,mBAEPhB,EAAKiB,QAAO,CACVrlB,WAAYilB,EACZ5Y,OAAQgD,EACRoV,cAA2B3wB,IAAjBuwB,EAA6BA,EAAe,IACtDK,OAAQV,UAIZsB,GAjIA,SAAAjzB,GAGK,SACHkzB,EAAYC,OAAZhzB,EACEH,EAAAI,KAAA7D,OAAAA,YAKA4D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAEDowB,GAAeA,EAAY9xB,cAC7BlB,EAAKkB,YAAc8xB,EAAY9xB,aAOjClB,EAAKizB,KAAO,KAEZjzB,EAAKkzB,WAAU,YAhCOC,GAAAJ,EAAAlzB,GAyCxBkzB,EAAAv2B,UAAA42B,UAAS,uBAC6B3uB,IAAIwd,KAQ1C8Q,EAAAv2B,UAAA62B,OAAM,uBACQJ,MASdF,EAAAv2B,UAAA0E,YAAW,SAACoyB,UACH,GASTP,EAAAv2B,UAAA02B,UAAS,SAACK,QACHruB,IAAI+c,GAA4BsR,IASvCR,EAAAv2B,UAAAg3B,OAAM,SAACrL,QACA8K,KAAO9K,GAEhB4K,EAnFA,CAA0BvV,EAAAla,4eC4KVmwB,GAASC,WACjBl2B,EAASk2B,EAAcl2B,OACzBm2B,EAAU,EACVC,EAAU,EACLn2B,EAAI,EAAGA,EAAID,EAAQC,IAC1Bk2B,GAAWD,EAAcj2B,GAAGk2B,QAC5BC,GAAWF,EAAcj2B,GAAGm2B,eAEtBD,EAAUn2B,EAAQo2B,EAAUp2B,OAiBtCq2B,GAhMA,SAAAh0B,GAGK,SACHi0B,EAAYd,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,UAEzChzB,EAAAH,EAAAI,KAAA7D,KACgEgL,IAAOhL,KAGnEgL,EAAQ2sB,kBACV/zB,EAAK+zB,gBAAkB3sB,EAAQ2sB,iBAG7B3sB,EAAQ4sB,kBACVh0B,EAAKg0B,gBAAkB5sB,EAAQ4sB,iBAG7B5sB,EAAQ6sB,kBACVj0B,EAAKi0B,gBAAkB7sB,EAAQ6sB,iBAG7B7sB,EAAQ8sB,gBACVl0B,EAAKk0B,cAAgB9sB,EAAQ8sB,eAG3B9sB,EAAQ+sB,WACVn0B,EAAKm0B,SAAW/sB,EAAQ+sB,UAO1Bn0B,EAAKo0B,wBAAyB,EAM9Bp0B,EAAKq0B,iBAAgB,GAMrBr0B,EAAKs0B,eAAc,YA/CUC,GAAAT,EAAAj0B,GAwD/Bi0B,EAAAt3B,UAAAg4B,gBAAe,uBACDF,eAAe92B,QAS7Bs2B,EAAAt3B,UAAAu3B,gBAAe,SAACT,UACP,GAQTQ,EAAAt3B,UAAAw3B,gBAAe,SAACV,KAUhBQ,EAAAt3B,UAAA0E,YAAW,SAACoyB,OACLA,EAAgB7K,cAAa,OACzB,MAGLgM,GAAY,UACXC,uBAAuBpB,QACnBc,2BACHd,EAAgBn3B,MAAQgtB,GAAoBI,iBACzCyK,gBAAgBV,GAErBA,EAAgB7K,cAAchsB,yBACrB62B,EAAgBn3B,MAAQgtB,GAAoBO,UAAS,KACxDiL,EAASv4B,KAAQ83B,cAAcZ,QAChCc,uBACHO,GAASv4B,KAASk4B,eAAe92B,OAAS,WAG1C81B,EAAgBn3B,MAAQgtB,GAAoBM,YAAW,KACnDmL,EAAOx4B,KAAQ23B,gBAAgBT,QAChCc,uBAAyBQ,EAC9BH,EAASr4B,KAAQ+3B,SAASS,QACjBtB,EAAgBn3B,MAAQgtB,GAAoBK,aAAWptB,KAC3D63B,gBAAgBX,UAGjBmB,GAQVX,EAAAt3B,UAAAy3B,gBAAe,SAACX,KAQhBQ,EAAAt3B,UAAA03B,cAAa,SAACZ,UACL,GASTQ,EAAAt3B,UAAA23B,SAAQ,SAACS,UACAA,GAOTd,EAAAt3B,UAAAk4B,uBAAsB,SAACpB,MAqCtB,SAC6BA,OACxBn3B,EAAOm3B,EAAgBn3B,YAE3BA,IAASgtB,GAAoBM,aAC7BttB,IAASgtB,GAAoBI,aAC7BptB,IAASgtB,GAAoBO,UA1CzBmL,CAAuBvB,GAAe,KAClCwB,EAAQxB,EAAgB7K,cAExBzG,EAAK8S,EAAMC,UAAUC,WACvB1B,EAAgBn3B,MAAQgtB,GAAoBO,iBAASttB,KAC3Ci4B,iBAAiBrS,IACpBsR,EAAgBn3B,MAAQgtB,GAAoBM,aAE5CzH,KAAE5lB,KAASi4B,oBAF4Cj4B,KAC3Di4B,iBAAiBrS,GAAM8S,QAKzBR,eAAiB90B,EAASpD,KAAMi4B,oBAG3CP,EAjKA,CAAiCmB,GAAA3xB,+NCtCjC4xB,GACS,UADTA,GAES,UAFTA,GAGQ,SAHRA,GAIS,SAJTA,GAKgB,gBALhBA,GAMgB,gBANhBA,GAOU,UAPVA,GAQU,UARVA,GASQ,meC8VRC,GAxTA,SAAAt1B,GAGK,SACHu1B,EAAYhuB,OAAZpH,EACEH,EAAAI,KAAA7D,OAAAA,KAKA4D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAIF,IACGwe,EAAa1iB,EAAM,GAAK0I,SACD,iBAAlBA,EAAQga,oBACVA,EAAWA,WAClB1iB,EAAO0iB,EAAYha,EAAQga,aAG7BA,EAAW8T,SACW5zB,IAApB8F,EAAQiuB,QAAwBjuB,EAAQiuB,QAAU,EACpDttB,GAA8C,iBAAhCqZ,EAAW8T,IAAqC,IAE9D9T,EAAW8T,SACW5zB,IAApB8F,EAAQkuB,SAAwBluB,EAAQkuB,QAC1ClU,EAAW8T,IAAyB9tB,EAAQmuB,OAC5CnU,EAAW8T,SACiB5zB,IAA1B8F,EAAQouB,cAA8BpuB,EAAQouB,cAAgB7pB,EAAAA,EAChEyV,EAAW8T,SACiB5zB,IAA1B8F,EAAQquB,cAA8BruB,EAAQquB,cAAgB,EAChErU,EAAW8T,SACW5zB,IAApB8F,EAAQsuB,QAAwBtuB,EAAQsuB,SAAW/pB,EAAAA,EACrDyV,EAAW8T,SACW5zB,IAApB8F,EAAQuuB,QAAwBvuB,EAAQuuB,QAAUhqB,EAAAA,EAMpD3L,EAAK41B,gBACsBt0B,IAAzB8f,EAAWyU,UAA0BzuB,EAAQyuB,UAAS,kBACjDzU,EAAWyU,UAElB71B,EAAKwE,cAAc4c,GAMnBphB,EAAK81B,OAAS,cA7DMC,GAAAX,EAAAv1B,GAmEtBu1B,EAAA54B,UAAAw5B,aAAY,uBACEJ,YAUdR,EAAA54B,UAAAy5B,cAAa,SAACC,GAC6B,IACnCC,EAAK/5B,KACJ05B,QAAM,CAETM,MAAKh6B,KACLi6B,aAAyB/0B,IAAhB40B,GAAmCA,GAE1CX,EAAMn5B,KAAQokB,mBACpB2V,EAAMd,QAAU7jB,GAAMzL,KAAK4d,MAA0B,IAArBvnB,KAAMk6B,cAAsB,IAAK,EAAG,GACpEH,EAAMI,YAAWn6B,KAAQo6B,iBACzBL,EAAMb,QAAOl5B,KAAQq6B,aACrBN,EAAM7rB,OAAMlO,KAAQqU,YACpB0lB,EAAMZ,YAAoBj0B,IAAXi0B,GAAyBY,EAAME,QAAqBd,EAAX5pB,EAAAA,EACxDwqB,EAAMX,cAAap5B,KAAQs6B,mBAC3BP,EAAMV,cAAgB1vB,KAAKuG,IAAGlQ,KAAMu6B,mBAAoB,GACxDR,EAAMT,QAAOt5B,KAAQw6B,aACrBT,EAAMR,QAAOv5B,KAAQy6B,kBAChBf,OAASK,EAEPA,GASTf,EAAA54B,UAAAs6B,eAAc,SAACC,UACNvzB,MAST4xB,EAAA54B,UAAAw6B,oBAAmB,SAACC,UACXzzB,MAUT4xB,EAAA54B,UAAAiU,UAAS,uBAEAhM,IAAIywB,KAUbE,EAAA54B,UAAAk6B,iBAAgB,uBACqBjyB,IAAIywB,KASzCE,EAAA54B,UAAAm6B,iBAAgB,uBACqBlyB,IAAIywB,KASzCE,EAAA54B,UAAAo6B,WAAU,uBAC2BnyB,IAAIywB,KASzCE,EAAA54B,UAAAq6B,WAAU,uBAC2BpyB,IAAIywB,KASzCE,EAAA54B,UAAA85B,WAAU,uBAC2B7xB,IAAIywB,KAOzCE,EAAA54B,UAAAg6B,eAAc,kBACLhzB,MAST4xB,EAAA54B,UAAAi6B,WAAU,uBAC4BhyB,IAAIywB,KAU1CE,EAAA54B,UAAAgkB,UAAS,uBAC4B/b,IAAIywB,KAUzCE,EAAA54B,UAAA2U,UAAS,SAAC7G,QACHpF,IAAIgwB,GAAsB5qB,IASjC8qB,EAAA54B,UAAA06B,iBAAgB,SAAC1B,QACVtwB,IAAIgwB,GAA8BM,IASzCJ,EAAA54B,UAAA26B,iBAAgB,SAAC1B,QACVvwB,IAAIgwB,GAA8BO,IAWzCL,EAAA54B,UAAA46B,WAAU,SAACzB,QACJzwB,IAAIgwB,GAAwBS,IAWnCP,EAAA54B,UAAA66B,WAAU,SAAC3B,QACJxwB,IAAIgwB,GAAwBQ,IASnCN,EAAA54B,UAAA86B,WAAU,SAACjC,GACTttB,GAAqB,iBAAPstB,EAAsB,SAC/BnwB,IAAIgwB,GAAuBG,IASlCD,EAAA54B,UAAA+6B,WAAU,SAACjC,QACJpwB,IAAIgwB,GAAuBI,IAUlCF,EAAA54B,UAAAg7B,UAAS,SAACC,QACHvyB,IAAIgwB,GAAuBuC,IAMlCrC,EAAA54B,UAAAQ,gBAAe,gBACJ84B,cACFA,OAAOM,MAAQ,UACfN,OAAS,MAEhBj2B,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAEzBg5B,EAtTA,CAAwB5X,EAAAla,SC/CxBo0B,GAMW,YANXA,GAaY,aAbZA,GAqBY,aArBZA,GA6Ba,cA7BbA,GAsCgB,iBCrChBC,GACW,YADXA,GAGO,2eC+VSC,GAAOC,EAAYC,OAC5BD,EAAWvC,QAAO,OACd,MAEH9nB,EAAasqB,EAAUtqB,cAE3BA,EAAaqqB,EAAWpC,eACxBjoB,GAAcqqB,EAAWrC,cAAa,OAE/B,MAEHuC,EAAOD,EAAUC,YAChBA,EAAOF,EAAWnC,SAAWqC,GAAQF,EAAWlC,YCtX/C1jB,GAAExU,GDyXZu6B,GAvRA,SAAAn4B,GAGK,SACHo4B,EAAY7wB,OAAZpH,EAAA5D,KACQ87B,EAAcx5B,EAAM,GAAK0I,UACxB8wB,EAAYh5B,QAEnBc,EAAAH,EAAAI,KAAA7D,KAAM87B,IAAW97B,MAKZoG,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAML5C,EAAKm4B,kBAAoB,KAMzBn4B,EAAKo4B,cAAgB,KAMrBp4B,EAAKq4B,iBAAmB,KAMxBr4B,EAAKs4B,UAAY,KAGblxB,EAAQmxB,SACVv4B,EAAKu4B,OAASnxB,EAAQmxB,QAGpBnxB,EAAQ+gB,KACVnoB,EAAKwzB,OAAOpsB,EAAQ+gB,KAGtBnoB,EAAKgF,kBACHkwB,GACAl1B,EAAKw4B,iCAGDt5B,EAASkI,EAAQlI,OACQkI,EAAQlI,OACnC,YACJc,EAAKy4B,UAAUv5B,YAlECw5B,GAAAT,EAAAp4B,GAyElBo4B,EAAAz7B,UAAAs6B,eAAc,SAACC,OACP4B,EAAQ5B,GAAqB,UACnC4B,EAAMj5B,KAAItD,MACHu8B,GAOTV,EAAAz7B,UAAAw6B,oBAAmB,SAACC,OACZ2B,EAAS3B,GAAuB,UACtC2B,EAAOl5B,KAAItD,KAAM65B,iBACV2C,GASTX,EAAAz7B,UAAAq8B,UAAS,kBACyBz8B,KAAOqI,IAAIywB,KAA0B,MAMvE+C,EAAAz7B,UAAAg6B,eAAc,eACNt3B,EAAM9C,KAAQy8B,mBACZ35B,EAAiCA,EAAO45B,WAA/BnB,IAMnBM,EAAAz7B,UAAAu8B,oBAAmB,gBACZ/1B,WAMPi1B,EAAAz7B,UAAAg8B,4BAA2B,gBAChBH,mBACPh2B,EAAajG,KAAMi8B,uBACdA,iBAAmB,UAEpBn5B,EAAM9C,KAAQy8B,YAChB35B,IAAM9C,KACHi8B,iBAAmBx2B,EACtB3C,EACA0C,EAAgBxF,KACX28B,oBAAmB38B,YAIvB4G,WAQPi1B,EAAAz7B,UAAAw8B,YAAW,SAAChQ,eACAsP,eAGEA,UAAUU,YAAYhQ,GAHf,IACNiQ,SAAO,SAAEC,UAAYA,EAAO,QAa3CjB,EAAAz7B,UAAA+7B,OAAM,SAAClQ,EAAY9rB,OACX48B,EAAa/8B,KAAQg9B,iBAEvBD,EAAcE,aAAahR,GAAU,OAChC8Q,EAAcG,YAAYjR,EAAY9rB,IAgBjD07B,EAAAz7B,UAAAg3B,OAAM,SAACrL,QACIgQ,oBACP91B,EAAajG,KAAM+7B,wBACdA,kBAAoB,MAEtBhQ,GAAG/rB,KACD4G,eAEEo1B,gBACP/1B,EAAajG,KAAMg8B,oBACdA,cAAgB,MAEnBjQ,SACGgQ,kBAAoBt2B,EACvBsmB,EACAuP,IAA0B,SAChB52B,OAGFy4B,EADiDz4B,EAClBunB,WAAWkR,iBAC1C1B,EAAUz7B,KAAQ65B,eAAc,GAEtCluB,IACGwxB,EAAiBC,MAAI,SAAWC,UACxBA,EAAgBrD,QAAUyB,EAAWzB,SAE9C,IAEFmD,EAAiB75B,KAAKm4B,gBAIrBO,cAAgBv2B,EAAMzF,KAAOwF,EAAkBumB,EAAIoQ,OAAQpQ,QAC3DnlB,YAUTi1B,EAAAz7B,UAAAi8B,UAAS,SAACv5B,QACHgG,IAAIgwB,GAAsBh2B,IAOjC+4B,EAAAz7B,UAAA48B,YAAW,uBACCd,YAASl8B,KACZk8B,UAASl8B,KAAQs9B,uBAEZpB,WAMdL,EAAAz7B,UAAAm9B,YAAW,wBACKrB,WAQhBL,EAAAz7B,UAAAk9B,eAAc,kBACL,MAMTzB,EAAAz7B,UAAAQ,gBAAe,gBACRy7B,UAAU,MACf54B,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAEzB67B,EA/PA,CAAoB2B,GAAAt2B,eClGV2O,GAAoJ4nB,GAAlJp8B,GAAsJ,iCAAkCwU,EAAE6nB,EAAEtnB,EAAEhK,EAAEtL,EAAE68B,aAAaC,EAAEz8B,EAAE08B,EAAEC,EAAEC,EAAEC,QAAQD,EAAED,GAAC,IAAMC,EAAED,EAAE,IAAG,KAAMtV,EAAEuV,EAAED,EAAE,EAAEG,EAAEJ,EAAEC,EAAE,EAAE/qB,EAAEpJ,KAAK+L,IAAI8S,GAAGnc,EAAE,GAAG1C,KAAK4L,IAAI,EAAExC,EAAE,GAAGmrB,EAAE,GAAGv0B,KAAKqP,KAAKjG,EAAE1G,GAAGmc,EAAEnc,GAAGmc,IAAIyV,EAAEzV,EAAE,EAAE,GAAE,EAAG,GAA+EoV,EAAEz8B,EAAE08B,EAA9El0B,KAAKuG,IAAI4tB,EAAEn0B,KAAK+Q,MAAMmjB,EAAEI,EAAE5xB,EAAEmc,EAAE0V,IAAMv0B,KAAKsG,IAAI8tB,EAAEp0B,KAAK+Q,MAAMmjB,GAAGrV,EAAEyV,GAAG5xB,EAAEmc,EAAE0V,IAAcF,OAAOG,EAAEh9B,EAAE08B,GAAG1xB,EAAE2xB,EAAEtxB,EAAEuxB,MAAM18B,EAAEF,EAAE28B,EAAED,GAAGG,EAAE78B,EAAE48B,GAAGI,GAAG,GAAG98B,EAAEF,EAAE28B,EAAEC,GAAG5xB,EAAEK,GAAC,KAAOnL,EAAEF,EAAEgL,EAAEK,GAAGL,IAAIK,IAAIwxB,EAAE78B,EAAEgL,GAAGgyB,GAAG,GAAGhyB,SAAS6xB,EAAE78B,EAAEqL,GAAG2xB,GAAG,GAAG3xB,IAAI,IAAIwxB,EAAE78B,EAAE28B,GAAGK,GAAG98B,EAAEF,EAAE28B,EAAEtxB,GAAGnL,EAAEF,IAAIqL,EAAEuxB,GAAGvxB,GAAGqxB,IAAIC,EAAEtxB,EAAE,GAAGqxB,GAAGrxB,IAAIuxB,EAAEvxB,EAAE,KAAKkxB,EAAEtnB,EAAEhK,GAAG,EAAEtL,GAAG48B,EAAEt8B,OAAO,EAAEu8B,GAAGx8B,YAAYE,EAAEq8B,EAAEU,EAAEj9B,OAAOiV,EAAEsnB,EAAEU,GAAGV,EAAEU,GAAGV,EAAEv8B,GAAGu8B,EAAEv8B,GAAGiV,WAAWjV,EAAEu8B,EAAEU,UAAUV,EAAEU,GAAE,EAAGV,EAAEU,EAAE,EAAE,MAAMhoB,EAAC,SAAUsnB,YAAYA,IAAIA,EAAE,GAAC19B,KAAOq+B,YAAY10B,KAAKuG,IAAI,EAAEwtB,GAAC19B,KAAOs+B,YAAY30B,KAAKuG,IAAI,EAAEvG,KAAK40B,KAAK,GAAEv+B,KAAMq+B,cAAWr+B,KAAQw+B,kBAAkBpyB,EAAEsxB,EAAEU,EAAEK,OAAOA,EAAC,OAAQL,EAAE75B,QAAQm5B,WAAWG,EAAE,EAAEA,EAAEO,EAAEh9B,OAAOy8B,IAAC,GAAMY,EAAEf,EAAEU,EAAEP,IAAC,OAAUA,SAAQ,WAAY/8B,EAAE48B,EAAEU,GAAGT,EAAED,EAAE,EAAEA,EAAEgB,SAASt9B,OAAOg9B,EAAEV,YAAYC,EAAED,EAAEU,EAAEK,EAAEZ,EAAEC,GAAGA,IAAIA,EAAEK,EAAE,OAAOL,EAAE5uB,KAAK,EAAA,EAAI4uB,EAAE3uB,KAAK,EAAA,EAAI2uB,EAAE1uB,MAAK,EAAA,EAAK0uB,EAAEzuB,MAAK,EAAA,UAAa0uB,EAAEK,EAAEL,EAAEU,EAAEV,IAAC,KAAQC,EAAEN,EAAEgB,SAASX,GAAGvV,EAAEsV,EAAEJ,EAAEiB,KAAKd,EAAEG,GAAGA,UAAUF,WAAWtV,EAAEkV,EAAEU,UAAUV,EAAExuB,KAAKvF,KAAKsG,IAAIytB,EAAExuB,KAAKkvB,EAAElvB,MAAMwuB,EAAEvuB,KAAKxF,KAAKsG,IAAIytB,EAAEvuB,KAAKivB,EAAEjvB,MAAMuuB,EAAEtuB,KAAKzF,KAAKuG,IAAIwtB,EAAEtuB,KAAKgvB,EAAEhvB,MAAMsuB,EAAEruB,KAAK1F,KAAKuG,IAAIwtB,EAAEruB,KAAK+uB,EAAE/uB,MAAMquB,WAAWO,EAAEP,EAAEU,UAAUV,EAAExuB,KAAKkvB,EAAElvB,cAAc6D,EAAE2qB,EAAEU,UAAUV,EAAEvuB,KAAKivB,EAAEjvB,cAAc9C,EAAEqxB,UAAUA,EAAEtuB,KAAKsuB,EAAExuB,OAAOwuB,EAAEruB,KAAKquB,EAAEvuB,eAAe+uB,EAAER,UAAUA,EAAEtuB,KAAKsuB,EAAExuB,MAAMwuB,EAAEruB,KAAKquB,EAAEvuB,eAAeyvB,EAAElB,EAAEU,UAAUV,EAAExuB,MAAMkvB,EAAElvB,MAAMwuB,EAAEvuB,MAAMivB,EAAEjvB,MAAMivB,EAAEhvB,MAAMsuB,EAAEtuB,MAAMgvB,EAAE/uB,MAAMquB,EAAEruB,cAAcmJ,EAAEklB,EAAEU,UAAUA,EAAElvB,MAAMwuB,EAAEtuB,MAAMgvB,EAAEjvB,MAAMuuB,EAAEruB,MAAM+uB,EAAEhvB,MAAMsuB,EAAExuB,MAAMkvB,EAAE/uB,MAAMquB,EAAEvuB,cAAcgvB,EAAET,UAAUgB,SAAShB,EAAE9qB,OAAO,EAAE+rB,MAAK,EAAGzvB,KAAK,EAAA,EAAIC,KAAK,EAAA,EAAIC,MAAK,EAAA,EAAKC,MAAK,EAAA,YAAelD,EAAEiyB,EAAEK,EAAEZ,EAAEC,EAAEC,WAAWc,EAAC,CAAEJ,EAAEZ,GAAGgB,EAAEz9B,QAAM,MAAQy8B,EAAEgB,EAAE7X,QAAQyX,EAAEI,EAAE7X,QAAQ8W,GAAC,KAAOgB,EAAEL,EAAE90B,KAAK40B,MAAMV,EAAEY,GAAGX,EAAE,GAAGA,EAAEjoB,EAAEuoB,EAAEU,EAAEL,EAAEZ,EAAEE,GAAGc,EAAEv7B,KAAKm7B,EAAEK,EAAEA,EAAEjB,WAAWznB,EAAEhW,UAAU2+B,IAAG,uBAAwBC,KAAIh/B,KAAM2B,KAAI,KAAMyU,EAAEhW,UAAU6+B,OAAM,SAAUvB,OAAOU,EAACp+B,KAAM2B,KAAK88B,EAAC,OAAQjmB,EAAEklB,EAAEU,GAAC,OAASK,UAAUZ,EAAC79B,KAAMk/B,OAAOpB,EAAC,GAAIM,GAAC,SAAWL,EAAE,EAAEA,EAAEK,EAAEM,SAASt9B,OAAO28B,IAAC,KAAQc,EAAET,EAAEM,SAASX,GAAGoB,EAAEf,EAAEO,KAAKd,EAAEgB,GAAGA,EAAErmB,EAAEklB,EAAEyB,KAAKf,EAAEO,KAAKF,EAAEn7B,KAAKu7B,GAAGD,EAAElB,EAAEyB,GAACn/B,KAAOg/B,KAAKH,EAAEJ,GAAGX,EAAEx6B,KAAKu7B,IAAIT,EAAEN,EAAE9W,aAAayX,GAAGroB,EAAEhW,UAAUg/B,SAAQ,SAAU1B,OAAOU,EAACp+B,KAAM2B,SAAS6W,EAAEklB,EAAEU,GAAC,OAAQ,UAAWK,EAAC,GAAIL,GAAC,SAAWP,EAAE,EAAEA,EAAEO,EAAEM,SAASt9B,OAAOy8B,IAAC,KAAQC,EAAEM,EAAEM,SAASb,GAAGwB,EAAEjB,EAAEO,KAAI3+B,KAAMk/B,OAAOpB,GAAGA,KAAKtlB,EAAEklB,EAAE2B,GAAC,IAAMjB,EAAEO,MAAMC,EAAElB,EAAE2B,GAAC,OAAQ,EAAGZ,EAAEn7B,KAAKw6B,IAAIM,EAAEK,EAAEzX,aAAY,GAAI5Q,EAAEhW,UAAUk/B,KAAI,SAAU5B,OAAOA,IAAIA,EAAEt8B,OAAM,OAAApB,QAAgB09B,EAAEt8B,OAAMpB,KAAMs+B,YAAW,SAAUF,EAAE,EAAEA,EAAEV,EAAEt8B,OAAOg9B,IAACp+B,KAAQu/B,OAAO7B,EAAEU,oBAAoBK,EAACz+B,KAAMw/B,OAAO9B,EAAElvB,QAAQ,EAAEkvB,EAAEt8B,OAAO,EAAE,WAAWO,KAAK+8B,SAASt9B,eAAeO,KAAKiR,SAAS6rB,EAAE7rB,OAAM5S,KAAMy/B,WAAUz/B,KAAM2B,KAAK88B,gBAAgB98B,KAAKiR,OAAO6rB,EAAE7rB,OAAM,KAAM8sB,EAAC1/B,KAAM2B,UAAUA,KAAK88B,EAAEA,EAAEiB,OAAOC,QAAQlB,EAACz+B,KAAM2B,KAAKiR,OAAO6rB,EAAE7rB,OAAO,GAAE,aAAcjR,KAAK88B,eAAeroB,EAAEhW,UAAUm/B,OAAM,SAAU7B,UAAUA,GAAC19B,KAAO2/B,QAAQjC,EAAC19B,KAAM2B,KAAKiR,OAAO,GAAC5S,MAAQoW,EAAEhW,UAAUo+B,MAAK,uBAAwB78B,KAAKw8B,EAAC,IAAAn+B,MAAWoW,EAAEhW,UAAUw/B,OAAM,SAAUlC,EAAEmC,OAAOnC,EAAC,OAAA19B,aAAqBy+B,EAAEqB,EAAEC,EAAEC,EAAChgC,KAAM2B,KAAKs+B,EAACjgC,KAAMk/B,OAAOxB,GAAGwC,EAAC,GAAIC,EAAC,GAAIH,GAAGE,EAAE9+B,QAAM,IAAM4+B,IAAIA,EAAEE,EAAElZ,MAAM8Y,EAAEI,EAAEA,EAAE9+B,OAAO,GAAGq9B,EAAE0B,EAAEnZ,MAAM+Y,GAAE,GAAIC,EAAErB,KAAI,KAAMyB,EAAEh0B,EAAEsxB,EAAEsC,EAAEtB,SAASmB,OAAM,IAAKO,EAAC,OAAQJ,EAAEtB,SAASn5B,OAAO66B,EAAE,GAAGF,EAAE58B,KAAK08B,GAAChgC,KAAOqgC,UAAUH,GAAClgC,KAAO+/B,GAAGC,EAAErB,OAAOC,EAAEoB,EAAEC,GAAGH,GAAGrB,IAAIuB,EAAEF,EAAEpB,SAASD,GAAGsB,GAAE,GAAIC,EAAE,MAAME,EAAE58B,KAAK08B,GAAGG,EAAE78B,KAAKm7B,GAAGA,EAAE,EAAEqB,EAAEE,EAAEA,EAAEA,EAAEtB,SAAS,iBAAiBtoB,EAAEhW,UAAU8+B,OAAM,SAAUxB,UAAUA,GAAGtnB,EAAEhW,UAAUkgC,YAAW,SAAU5C,EAAEmC,UAAUnC,EAAExuB,KAAK2wB,EAAE3wB,MAAMkH,EAAEhW,UAAUmgC,YAAW,SAAU7C,EAAEmC,UAAUnC,EAAEvuB,KAAK0wB,EAAE1wB,MAAMiH,EAAEhW,UAAUogC,OAAM,uBAAwB7+B,MAAMyU,EAAEhW,UAAUqgC,SAAQ,SAAU/C,eAAe/7B,KAAK+7B,EAAC19B,MAAOoW,EAAEhW,UAAU4+B,KAAI,SAAUtB,EAAEmC,WAAWpB,EAAC,GAAIf,GAAGA,EAAEiB,KAAKkB,EAAEv8B,KAAKwC,MAAM+5B,EAAEnC,EAAEgB,UAAUD,EAAEn7B,KAAKwC,MAAM24B,EAAEf,EAAEgB,UAAUhB,EAAEe,EAAEzX,aAAa6Y,GAAGzpB,EAAEhW,UAAUo/B,OAAM,SAAU9B,EAAEmC,EAAEpB,EAAEqB,OAAOY,EAAEV,EAAEvB,EAAEoB,EAAE,EAAEI,EAACjgC,KAAMq+B,eAAe2B,GAAGC,EAAC,OAAQn/B,EAAE4/B,EAAEvC,EAAET,EAAElvB,MAAMqxB,EAAEpB,EAAE,IAACz+B,KAAQk/B,QAAQwB,EAAEZ,IAAIA,EAAEn2B,KAAK40B,KAAK50B,KAAK+L,IAAIsqB,GAAGr2B,KAAK+L,IAAIuqB,IAAIA,EAAEt2B,KAAK40B,KAAKyB,EAAEr2B,KAAKwrB,IAAI8K,EAAEH,EAAE,MAAMY,EAAEvC,EAAC,KAAMQ,MAAK,EAAG+B,EAAE9tB,OAAOktB,MAAMI,EAAEv2B,KAAK40B,KAAKyB,EAAEC,GAAGE,EAAED,EAAEv2B,KAAK40B,KAAK50B,KAAKqP,KAAKinB,IAAI9zB,EAAEuxB,EAAEmC,EAAEpB,EAAE0B,EAACngC,KAAMsgC,qBAAqBK,EAAEd,EAAEc,GAAGlC,EAAEkC,GAAGR,EAAC,KAAMS,EAAEj3B,KAAKsG,IAAI0wB,EAAER,EAAE,EAAE1B,GAAGtyB,EAAEuxB,EAAEiD,EAAEC,EAAEV,EAAClgC,KAAMugC,qBAAqBM,EAAEF,EAAEE,GAAGD,EAAEC,GAAGX,EAAC,KAAM3nB,EAAE5O,KAAKsG,IAAI4wB,EAAEX,EAAE,EAAEU,GAAGF,EAAEhC,SAASp7B,KAAItD,KAAMw/B,OAAO9B,EAAEmD,EAAEtoB,EAAEunB,EAAE,YAAYh/B,EAAE4/B,EAAC1gC,KAAMk/B,QAAQwB,GAAGtqB,EAAEhW,UAAU0gC,eAAc,SAAUpD,EAAEmC,EAAEpB,EAAEqB,QAAQA,EAAEx8B,KAAKu8B,IAAIA,EAAElB,MAAMmB,EAAE1+B,OAAO,IAAIq9B,GAAC,SAAWiC,EAAE,EAAA,EAAIX,EAAE,EAAA,EAAIC,OAAC,EAAQC,EAAE,EAAEA,EAAEJ,EAAEnB,SAASt9B,OAAO6+B,IAAC,KAAQC,EAAEL,EAAEnB,SAASuB,GAAGE,EAAE9zB,EAAE6zB,GAAGa,GAAGC,EAAEtD,EAAEuD,EAAEf,GAAGv2B,KAAKuG,IAAI+wB,EAAE7xB,KAAK4xB,EAAE5xB,MAAMzF,KAAKsG,IAAIgxB,EAAE/xB,KAAK8xB,EAAE9xB,QAAQvF,KAAKuG,IAAI+wB,EAAE5xB,KAAK2xB,EAAE3xB,MAAM1F,KAAKsG,IAAIgxB,EAAE9xB,KAAK6xB,EAAE7xB,OAAOgxB,GAAGY,EAAEhB,GAAGA,EAAEgB,EAAEL,EAAEP,EAAEO,EAAEP,EAAEO,EAAEV,EAAEE,GAAGa,IAAIhB,GAAGI,EAAEO,IAAIA,EAAEP,EAAEH,EAAEE,GAAGL,EAAEG,GAAGH,EAAEnB,SAAS,OAAOsC,EAAEC,SAASpB,GAAGzpB,EAAEhW,UAAUu/B,QAAO,SAAUjC,EAAEmC,EAAEpB,OAAOqB,EAAErB,EAAEf,EAAC19B,KAAMk/B,OAAOxB,GAAGwD,EAAC,GAAIC,EAACnhC,KAAM8gC,eAAehB,EAAC9/B,KAAM2B,KAAKk+B,EAAEqB,OAAOC,EAAEzC,SAASp7B,KAAKo6B,GAAGlV,EAAE2Y,EAAErB,GAAGD,GAAG,GAAGqB,EAAErB,GAAGnB,SAASt9B,OAAMpB,KAAMq+B,aAAWr+B,KAAOohC,OAAOF,EAAErB,GAAGA,SAASwB,oBAAoBvB,EAAEoB,EAAErB,IAAIzpB,EAAEhW,UAAUghC,OAAM,SAAU1D,EAAEmC,OAAOpB,EAAEf,EAAEmC,GAAGC,EAAErB,EAAEC,SAASt9B,OAAO8/B,EAAClhC,KAAMs+B,iBAAiBgD,iBAAiB7C,EAAEyC,EAAEpB,OAAOyB,EAACvhC,KAAMwhC,kBAAkB/C,EAAEyC,EAAEpB,GAAG2B,EAAEtD,EAAEM,EAAEC,SAASn5B,OAAOg8B,EAAE9C,EAAEC,SAASt9B,OAAOmgC,IAAIE,EAAE7uB,OAAO6rB,EAAE7rB,OAAO6uB,EAAE9C,KAAKF,EAAEE,KAAK79B,EAAE29B,EAACz+B,KAAMk/B,QAAQp+B,EAAE2gC,EAACzhC,KAAMk/B,QAAQW,EAAEnC,EAAEmC,EAAE,GAAGnB,SAASp7B,KAAKm+B,GAACzhC,KAAOy/B,WAAWhB,EAAEgD,IAAIrrB,EAAEhW,UAAUq/B,WAAU,SAAU/B,EAAEmC,QAAQl+B,KAAKw8B,EAAC,CAAET,EAAEmC,SAASl+B,KAAKiR,OAAO8qB,EAAE9qB,OAAO,EAAC5S,KAAM2B,KAAKg9B,MAAK,EAAG79B,EAACd,KAAM2B,KAAI3B,KAAMk/B,SAAS9oB,EAAEhW,UAAUohC,kBAAiB,SAAU9D,EAAEmC,EAAEpB,WAAWqB,EAAEoB,EAAEC,EAAEM,EAAEC,EAAEC,EAAEC,EAAEZ,EAAE,EAAA,EAAIC,EAAE,EAAA,EAAIY,EAAEhC,EAAEgC,GAAGpD,EAAEoB,EAAEgC,IAAC,KAAQC,EAAEnE,EAAED,EAAE,EAAEmE,EAAC7hC,KAAMk/B,QAAQ1yB,EAAEmxB,EAAED,EAAEmE,EAAEpD,EAACz+B,KAAMk/B,QAAQ6C,GAAGb,EAAEY,EAAEX,EAAE30B,EAAsCi1B,EAAE93B,KAAKuG,IAAIgxB,EAAEhyB,KAAKiyB,EAAEjyB,MAAMwyB,EAAE/3B,KAAKuG,IAAIgxB,EAAE/xB,KAAKgyB,EAAEhyB,MAAMwyB,EAAEh4B,KAAKsG,IAAIixB,EAAE9xB,KAAK+xB,EAAE/xB,MAAMwyB,EAAEj4B,KAAKsG,IAAIixB,EAAE7xB,KAAK8xB,EAAE9xB,MAAM1F,KAAKuG,IAAI,EAAEyxB,EAAEF,GAAG93B,KAAKuG,IAAI,EAAE0xB,EAAEF,IAAIM,EAAE31B,EAAEy1B,GAAGz1B,EAAEG,GAAGu1B,EAAEf,GAAGA,EAAEe,EAAEjC,EAAE+B,EAAEZ,EAAEe,EAAEf,EAAEe,EAAEf,GAAGc,IAAIf,GAAGgB,EAAEf,IAAIA,EAAEe,EAAElC,EAAE+B,UAAU/B,GAAGrB,EAAEoB,GAAGzpB,EAAEhW,UAAUkhC,iBAAgB,SAAU5D,EAAEmC,EAAEpB,OAAOqB,EAAEpC,EAAEiB,KAAI3+B,KAAMsgC,YAAYrC,EAAEiD,EAAExD,EAAEiB,KAAI3+B,KAAMugC,YAAYxtB,OAAOkvB,eAAevE,EAAEmC,EAAEpB,EAAEqB,GAAC9/B,KAAOiiC,eAAevE,EAAEmC,EAAEpB,EAAEyC,IAAIxD,EAAEgB,SAASnO,KAAKuP,IAAI1pB,EAAEhW,UAAU6hC,eAAc,SAAUvE,EAAEmC,EAAEpB,EAAEqB,GAAGpC,EAAEgB,SAASnO,KAAKuP,WAAWoB,EAAClhC,KAAMk/B,OAAOiC,EAAExD,EAAED,EAAE,EAAEmC,EAAEqB,GAAGQ,EAAE/D,EAAED,EAAEe,EAAEoB,EAAEpB,EAAEyC,GAAGS,EAAEzD,EAAEiD,GAAGjD,EAAEwD,GAAGf,EAAEd,EAAEc,EAAElC,EAAEoB,EAAEc,IAAC,KAAQK,EAAEtD,EAAEgB,SAASiC,GAAGnY,EAAE2Y,EAAEzD,EAAEiB,KAAKuC,EAAEF,GAAGA,GAAGW,GAAGzD,EAAEiD,WAAWF,EAAExC,EAAEoB,EAAE,EAAEoB,GAAGpB,EAAEoB,IAAC,KAAQY,EAAEnE,EAAEgB,SAASuC,GAAGzY,EAAEkZ,EAAEhE,EAAEiB,KAAKuC,EAAEW,GAAGA,GAAGF,GAAGzD,EAAEwD,UAAUC,GAAGvrB,EAAEhW,UAAUihC,oBAAmB,SAAU3D,EAAEmC,EAAEpB,WAAWqB,EAAErB,EAAEqB,GAAG,EAAEA,IAAItX,EAAEqX,EAAEC,GAAGpC,IAAItnB,EAAEhW,UAAUigC,UAAS,SAAU3C,WAAWmC,EAAEnC,EAAEt8B,OAAO,EAAEq9B,OAAC,EAAQoB,GAAG,EAAEA,IAAI,IAAInC,EAAEmC,GAAGnB,SAASt9B,OAAOy+B,EAAE,GAAGpB,EAAEf,EAAEmC,EAAE,GAAGnB,UAAUn5B,OAAOk5B,EAAEl6B,QAAQm5B,EAAEmC,IAAI,GAAC7/B,KAAOw+B,QAAQ19B,EAAE48B,EAAEmC,GAAC7/B,KAAOk/B,SAAS9oB,oBAA3xMqnB,GAAoCA,GAAep8B,KAAC,mBAAsB6gC,QAAQA,OAAOC,IAAID,OAAO7gC,KAAIwU,GAAEA,IAAGnL,MAAM03B,MAAM/gC,mGCOzJghC,GACQ,EADRA,GAEW,EAFXA,GAGU,EAHVA,GAIS,WCoBOC,GAAQhxB,UACfA,EAAK,GAAK,GAAKA,EAAK,GAAK,WA4BlBixB,GAAOjxB,EAAMkxB,UACvB3gC,MAAMC,QAAQwP,GACTA,QAEUpM,IAAbs9B,EACFA,EAAQ,CAAIlxB,EAAMA,IAElBkxB,EAAS,GAAKlxB,EACdkxB,EAAS,GAAKlxB,GAETkxB,GChDR,IAwPHC,GAvPA,WAGK,SACHC,EAAY13B,GAIPhL,KACE2iC,SAAW33B,EAAQiuB,QAKrBj5B,KACE4iC,gBAAkB53B,EAAQ63B,eAK5B7iC,KACE8iC,UAAY93B,EAAQqG,SAKtBrR,KACE+iC,OAAS/3B,EAAQuV,MAKnBvgB,KACEgjC,YAAcT,GAAOv3B,EAAQuV,OAK/BvgB,KACEijC,cAAgBj4B,EAAQk4B,oBAQ/BR,EAAAtiC,UAAAif,MAAK,eACGkB,EAAKvgB,KAAQmjC,sBACRT,EAAU,CACnBzJ,QAAOj5B,KAAOk6B,aACd3Z,MAAO1e,MAAMC,QAAQye,GAASA,EAAM/R,QAAU+R,EAC9ClP,SAAQrR,KAAOojC,cACfP,eAAc7iC,KAAOqjC,oBACrBH,aAAYljC,KAAOsjC,kBAAkB90B,WASzCk0B,EAAAtiC,UAAA85B,WAAU,uBACIyI,UAQdD,EAAAtiC,UAAAijC,kBAAiB,uBACHT,iBAQdF,EAAAtiC,UAAAgjC,YAAW,uBACGN,WAQdJ,EAAAtiC,UAAA+iC,SAAQ,uBACMJ,QAOdL,EAAAtiC,UAAAmjC,cAAa,uBACCP,aAQdN,EAAAtiC,UAAAkjC,gBAAe,uBACDL,eASdP,EAAAtiC,UAAAojC,UAAS,kBACAp8B,MASTs7B,EAAAtiC,UAAAqjC,SAAQ,SAACC,UACAt8B,MAOTs7B,EAAAtiC,UAAAujC,qBAAoB,kBACXv8B,MAQTs7B,EAAAtiC,UAAAwjC,cAAa,SAACF,UACL,GAOThB,EAAAtiC,UAAAyjC,cAAa,kBACJz8B,MAOTs7B,EAAAtiC,UAAA0jC,aAAY,kBACH18B,MAQTs7B,EAAAtiC,UAAA2jC,UAAS,kBACA38B,MAQTs7B,EAAAtiC,UAAA4jC,QAAO,kBACE58B,MASTs7B,EAAAtiC,UAAA86B,WAAU,SAACjC,QACJ0J,SAAW1J,GASlByJ,EAAAtiC,UAAA6jC,kBAAiB,SAACpB,QACXD,gBAAkBC,GASzBH,EAAAtiC,UAAA8jC,YAAW,SAAC7yB,QACLyxB,UAAYzxB,GAQnBqxB,EAAAtiC,UAAA+jC,SAAQ,SAAC5jB,QACFwiB,OAASxiB,OACTyiB,YAAcT,GAAOhiB,IAO5BmiB,EAAAtiC,UAAAgkC,kBAAiB,SAAChgC,GAChBgD,MAOFs7B,EAAAtiC,UAAAk/B,KAAI,WACFl4B,MAOFs7B,EAAAtiC,UAAAikC,oBAAmB,SAACjgC,GAClBgD,MAEJs7B,EArPA,GCFM4B,GAAa,oDAQbC,GAAe,qCAQLC,GAASC,SACP,iBAALA,EACFA,EAEAC,GAASD,GAQjB,SACME,GAAUF,OACXG,EAAKj3B,SAASC,cAAa,UACjCg3B,EAAG/2B,MAAM42B,MAAQA,EACC,KAAdG,EAAG/2B,MAAM42B,MAAK,CAChB92B,SAASk3B,KAAKC,YAAYF,OACpBG,EAAMC,iBAAiBJ,GAAIH,aACjC92B,SAASk3B,KAAKI,YAAYL,GACnBG,eAwBHG,GAKFC,GAnBOC,IAcLF,GAAK,GAKPC,GAAY,WAOJlH,OACJwG,KACAS,GAAMliC,eAAei7B,GACvBwG,EAAQS,GAAMjH,WAEVkH,IAtBa,KAsBc,KACzB9jC,EAAI,UACG0B,KAAOmiC,GACE,IAAP,EAAN7jC,cACI6jC,GAAMniC,KACXoiC,IAIRV,EA4BL,SAC0BxG,OACvB7nB,EAAGivB,EAAGtkC,EAAGD,EAAG2jC,KAEZF,GAAgBe,KAAKrH,KACvBA,EAAI0G,GAAU1G,IAGZqG,GAAcgB,KAAKrH,GAAC,KAEhB98B,EAAI88B,EAAE78B,OAAS,EACjB+K,OAAC,EAEHA,EADEhL,GAAK,EACH,EAEA,MAEAokC,EAAiB,IAANpkC,GAAiB,IAANA,EAC5BiV,EAAIovB,SAASvH,EAAEwH,OAAO,EAAI,EAAIt5B,EAAGA,GAAI,IACrCk5B,EAAIG,SAASvH,EAAEwH,OAAO,EAAI,EAAIt5B,EAAGA,GAAI,IACrCpL,EAAIykC,SAASvH,EAAEwH,OAAO,EAAI,EAAIt5B,EAAGA,GAAI,IAEnCrL,EADEykC,EACEC,SAASvH,EAAEwH,OAAO,EAAI,EAAIt5B,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACFiK,GAAKA,GAAK,GAAKA,EACfivB,GAAKA,GAAK,GAAKA,EACftkC,GAAKA,GAAK,GAAKA,EACXwkC,IACFzkC,GAAKA,GAAK,GAAKA,IAGnB2jC,EAAK,CAAIruB,EAAGivB,EAAGtkC,EAAGD,EAAI,UACS,GAAtBm9B,EAAE15B,QAAO,SAGlBmhC,GADAjB,EAAQxG,EAAEzvB,MAAM,GAAG,GAAIhD,MAAK,KAAMugB,IAAI4Z,SAER,GAArB1H,EAAE15B,QAAO,UAElBkgC,EAAQxG,EAAEzvB,MAAM,GAAG,GAAIhD,MAAK,KAAMugB,IAAI4Z,SAChCriC,KAAK,GACXoiC,GAAUjB,IAEV94B,IAAO,EAAO,WAET84B,EA3EOmB,CAAoB3H,GAC5BiH,GAAMjH,GAAKwG,IACTU,UAEGV,aAYGoB,GAAQpB,UAClB5iC,MAAMC,QAAQ2iC,GACTA,EAEAW,GAAWX,YA+DNiB,GAAUjB,UACxBA,EAAM,GAAKrvB,GAAOqvB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKrvB,GAAOqvB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKrvB,GAAOqvB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKrvB,GAAMqvB,EAAM,GAAI,EAAG,GACvBA,WAOOC,GAASD,OACnBruB,EAAIquB,EAAM,GACVruB,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,OAEdivB,EAAIZ,EAAM,GACVY,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,OAEdtkC,EAAI0jC,EAAM,UACV1jC,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,WAGDqV,EAAC,IAASivB,EAAC,IAAStkC,EAAC,UADfmE,IAAbu/B,EAAM,GAAmB,EAAIA,EAAM,IACG,aClMlCqB,GAAYrB,UACtB5iC,MAAMC,QAAQ2iC,GACTC,GAASD,GAETA,WCXKsB,GACdC,EACAC,EACAC,EACAC,OAEMC,EACJF,GAAkBA,EAAe9kC,OAC7B8kC,EAAeG,QACf97B,GAAuB,IACnBE,gBAAgBu7B,GAAa,IAAKC,GAAc,KACpDt4B,SAASC,cAAa,iBACxBo4B,IACFI,EAAOzzB,MAAQqzB,GAEbC,IACFG,EAAOxzB,OAASqzB,GAIhBG,EAAOE,WAAU,KAAOH,YAsCZI,GAAYC,EAASC,OAC7BC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,YAQjBI,GAAWn5B,UAClBA,GAAQA,EAAKi5B,WAAaj5B,EAAKi5B,WAAW1B,YAAYv3B,GAAQ,SChE1Do5B,GAAY,YAgCZC,GAAa,aASbC,GAAe,eAMtBC,GAAS,IAAOC,OAAM,iYASxBz5B,KAAI,IAAA,KAGF05B,GAAmB,0DAeZC,GAAiB,SAAaC,OACnCC,EAAQD,EAASC,MAAML,QACxBK,EAAK,OACD,aAEHz5B,EAAK,CACT05B,WAAU,SACVj2B,KAAI,QACJzD,MAAK,SACL25B,OAAM,SACNC,QAAO,UAEApmC,EAAI,EAAGuB,EAAKukC,GAAoB/lC,OAAQC,EAAIuB,IAAMvB,EAAC,KACpDiH,EAAQg/B,EAAMjmC,EAAI,QACV6D,IAAVoD,IACFuF,EAAMs5B,GAAoB9lC,IAAMiH,UAGpCuF,EAAM65B,SAAW75B,EAAM85B,OAAOn8B,MAAK,QAC5BqC,GC5BI+5B,GAAW,kBAMXC,GAAgB,OAMhBC,GAAc,QAMdC,GAAe,GAYfC,GAAe,QAYfC,GAAkB,OAMlBC,GAAgB,SAMhBC,GAAmB,SAMnBC,GAAc,CAAI,EAAG,EAAG,EAAG,GAW3BC,GAAY,IAAOjnB,EAAAla,SAUT,IAAOD,EAAAC,SACnBohC,QAAO,WAChBC,QAAQC,KAAI,8BAKX,IAMCC,GA8GEC,GAnHFC,GAAiB,KAURC,GAAW,GAMXC,GAAY,eAMnBC,EAAUC,EAJRz3B,EAAI,QACJ03B,EAAc,sBACdliC,EAAMkiC,EAAe5nC,OACrB6nC,EAAI,2BAQP,SACMC,EAAYC,EAAWC,EAAYC,WACtCC,GAAY,EACPjoC,EAAI,EAAGA,EAAIyF,IAAOzF,EAAC,KACpBkoC,EAAgBP,EAAe3nC,MACrC0nC,EAAiBS,GACfL,EAAS,IAASC,EAAU,IAAS93B,EAAOi4B,EAC5CN,GAEEI,GAAcE,EAAa,KACvB52B,EAAQ62B,GACZL,EAAS,IAEPC,EAAU,IAEV93B,EACA+3B,EAAU,IAEVE,EACFN,GAIFK,EAAYA,GAAa32B,GAASo2B,WAGlCO,WAMGG,YACHC,GAAO,EACLC,EAAQtB,GAAa9/B,UAClBlH,EAAI,EAAGuB,EAAK+mC,EAAMvoC,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCuoC,EAAOD,EAAMtoC,GACfgnC,GAAahgC,IAAIuhC,GAjDT,MAkDNV,EAAYpjC,MAAK9F,KAAO4pC,EAAKp+B,MAAK,QACpCvI,EAAM2lC,IAEND,GAAiB,KACjBF,QAAcvjC,EACdmjC,GAAav/B,IAAI8gC,EAvDT,OAyDRvB,GAAav/B,IAAI8gC,EAAMvB,GAAahgC,IAAIuhC,GAAQ,GAAG,GACnDF,GAAO,IAITA,IACFG,cAAcf,GACdA,OAAW5jC,mBAIEmiC,OACTuC,EAAOxC,GAAkBC,MAC1BuC,UAGClC,EAAWkC,EAAKlC,SACbrmC,EAAI,EAAGuB,EAAK8kC,EAAStmC,OAAQC,EAAIuB,IAAMvB,EAAC,KACzCsmC,EAASD,EAASrmC,GAClB0B,EAAM6mC,EAAK/7B,MAAK,KAAU+7B,EAAKpC,OAAM,KAAUG,OACvBziC,IAA1BmjC,GAAahgC,IAAItF,KACnBslC,GAAav/B,IAAI/F,EA9EP,KA8EqB,GAC1BmmC,EAAYU,EAAK/7B,MAAO+7B,EAAKpC,OAAQG,KACxCU,GAAav/B,IAAI/F,EAAK,GAAG,QACRmC,IAAb4jC,IACFA,EAAWgB,YAAYL,EAAO,SAnFjB,GA+FZM,YAKM1C,OACXz0B,EAASg2B,GAAYvB,MACXniC,MAAV0N,EAAmB,IACjBrI,GAAuB,KACnBq/B,EAAOxC,GAAkBC,GACzB2C,EAAUC,GAAY5C,EAAQ,MAIpCz0B,GAHmBwN,MAAMulB,OAAOiE,EAAKrC,aACjC,IACA5B,OAAOiE,EAAKrC,cAGbyC,EAAQE,wBAA0BF,EAAQG,+BAExCzB,MACHA,GAAiB/6B,SAASC,cAAa,QACxBw8B,UAAS,IACxB1B,GAAe76B,MAAMw8B,UAAS,IAC9B3B,GAAe76B,MAAMy8B,UAAS,OAC9B5B,GAAe76B,MAAM+E,OAAM,OAC3B81B,GAAe76B,MAAM08B,QAAO,IAC5B7B,GAAe76B,MAAM28B,OAAM,OAC3B9B,GAAe76B,MAAM48B,SAAQ,WAC7B/B,GAAe76B,MAAM68B,QAAO,QAC5BhC,GAAe76B,MAAM88B,KAAI,YAE3BjC,GAAe76B,MAAM+7B,KAAOvC,EAC5B15B,SAASk3B,KAAKC,YAAY4D,IAC1B91B,EAAS81B,GAAekC,aACxBj9B,SAASk3B,KAAKI,YAAYyD,IAE5BE,GAAYvB,GAAYz0B,SAEnBA,GAQR,SACMq3B,GAAYL,EAAMX,UACpBN,KACHA,GAAiB5C,GAAsB,EAAG,IAExC6D,GAAQnB,KACVE,GAAeiB,KAAOA,EACtBnB,GAAcE,GAAeiB,MAExBjB,GAAekC,YAAY5B,YAQpBO,GAAiBI,EAAMX,UAC9BgB,GAAYL,EAAMX,GAAMt2B,eAUjBm4B,GAAyBlB,EAAMX,EAAM/D,MAC/C+D,KAAQ/D,EAAK,OACRA,EAAM+D,OAETt2B,EAAQ62B,GAAiBI,EAAMX,UACrC/D,EAAM+D,GAAQt2B,EACPA,WAgDOo4B,GACdC,EACA/+B,EACAgtB,EACAgS,EACAC,EACAC,EACAC,EACAzN,EACAnxB,EACAC,EACA8T,GAEAyqB,EAAQK,OAEQ,IAAZpS,IACF+R,EAAQM,aAAerS,GAErBhtB,GACF++B,EAAQO,aAAazlC,MAAMklC,EAAS/+B,GAGhBg/B,EAAcO,qBAElCR,EAAQlqB,UAAUtU,EAAGC,GACrBu+B,EAAQzqB,MAAMA,EAAM,GAAIA,EAAM,IA0C/B,SAC+BkrB,EAAOT,WACjCQ,EAAsBC,EAAMD,oBACzBnqC,EAAI,EAAGuB,EAAK4oC,EAAoBpqC,OAAQC,EAAIuB,EAAIvB,GAAK,EACxDQ,MAAMC,QAAQ0pC,EAAoBnqC,EAAI,IACxC2pC,EAAQQ,EAAoBnqC,IAAIyE,MAC9BklC,EACAQ,EAAoBnqC,EAAI,IAG1B2pC,EAAQQ,EAAoBnqC,IAAMmqC,EAAoBnqC,EAAI,GAnD5DqqC,CAA+CT,EAAeD,IACrDzqB,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCyqB,EAAQlqB,UAAUtU,EAAGC,GACrBu+B,EAAQzqB,MAAMA,EAAM,GAAIA,EAAM,IAC9ByqB,EAAQW,UAEJV,EAEFC,EACAC,EACAC,EACAzN,EACA,EACA,EACAyN,EACAzN,IAIFqN,EAAQW,UAEJV,EAEFC,EACAC,EACAC,EACAzN,EACAnxB,EACAC,EACA2+B,EAAI7qB,EAAM,GACVod,EAAIpd,EAAM,IAIdyqB,EAAQY,UCxdP,8dAylBHC,GApiBA,SAAApoC,GAGK,SACHqoC,EAAY9gC,OAAZpH,EAAA5D,KAIQ6iC,OACuB39B,IAA3B8F,EAAQ63B,gBAA+B73B,EAAQ63B,sBAEjDj/B,EAAAH,EAAAI,KAAA7D,KAAA,CACEi5B,QAAS,EACT4J,eAAgBA,EAChBxxB,cAA+BnM,IAArB8F,EAAQqG,SAAyBrG,EAAQqG,SAAW,EAC9DkP,WAAyBrb,IAAlB8F,EAAQuV,MAAsBvV,EAAQuV,MAAQ,EACrD2iB,kBAC2Bh+B,IAAzB8F,EAAQk4B,aAA6Bl4B,EAAQk4B,aAAY,CAAI,EAAG,YAO/D6I,aAAU7mC,EAMftB,EAAKooC,oBAAsB,KAM3BpoC,EAAKqoC,WAAyB/mC,IAAjB8F,EAAQkhC,KAAqBlhC,EAAQkhC,KAAO,KAMzDtoC,EAAKuoC,QAAO,CAAI,EAAG,GAMnBvoC,EAAKwoC,QAAUphC,EAAQwkB,OAMvB5rB,EAAKyoC,aACgBnnC,IAAnB8F,EAAQ0N,OAAuB1N,EAAQ0N,OAAS1N,EAAQshC,QAM1D1oC,EAAK2oC,SAAWvhC,EAAQwhC,QAMxB5oC,EAAK6oC,YAA2BvnC,IAAlB8F,EAAQ+B,MAAsB/B,EAAQ+B,MAAQ,EAM5DnJ,EAAK8oC,aAA6BxnC,IAAnB8F,EAAQ2hC,OAAuB3hC,EAAQ2hC,OAAS,KAM/D/oC,EAAKgpC,QAAU,KAMfhpC,EAAKipC,MAAQ,KAMbjpC,EAAKkpC,eAAiB,KAEtBlpC,EAAKu4B,kBA7FkB4Q,GAAAjB,EAAAroC,GAqGzBqoC,EAAA1rC,UAAAif,MAAK,eACGkB,EAAKvgB,KAAQmjC,WACbt1B,EAAK,IAAOi+B,EAAY,CAC5BI,KAAIlsC,KAAOgtC,UAAOhtC,KAAUgtC,UAAU3tB,aAAUna,EAChDsqB,OAAMxvB,KAAOuvB,YACb7W,OAAM1Y,KAAO2jB,YACb6oB,QAAOxsC,KAAOitC,aACdlgC,MAAK/M,KAAOktC,WACZP,OAAM3sC,KAAOmtC,YAASntC,KAAUmtC,YAAY9tB,aAAUna,EACtDmM,SAAQrR,KAAOojC,cACfP,eAAc7iC,KAAOqjC,oBACrB9iB,MAAO1e,MAAMC,QAAQye,GAASA,EAAM/R,QAAU+R,EAC9C2iB,aAAYljC,KAAOsjC,kBAAkB90B,iBAEvCX,EAAMqtB,WAAUl7B,KAAMk6B,cACfrsB,GASTi+B,EAAA1rC,UAAAojC,UAAS,uBACKoJ,SAQdd,EAAA1rC,UAAA8sC,SAAQ,uBACMT,QAQdX,EAAA1rC,UAAA4sC,QAAO,uBACOf,OAMdH,EAAA1rC,UAAAujC,qBAAoB,uBACRqI,qBAAmBhsC,KACtBotC,0BAAyBptC,KAAM8sC,qBAE1Bd,qBASdF,EAAA1rC,UAAAqjC,SAAQ,SAACC,OACH2J,EAAKrtC,KAAQ+rC,QAAQrI,OACpB2J,EAAK,KACFC,EAAattC,KAAQ8sC,eACrB9B,EAAUjF,GACduH,EAAch8B,KAAOoyB,EACrB4J,EAAch8B,KAAOoyB,QAElB6J,MAAMD,EAAetC,EAAStH,GAEnC2J,EAAQrC,EAAQ5E,YACX2F,QAAQrI,GAAc2J,SAEtBA,GAQTvB,EAAA1rC,UAAAwjC,cAAa,SAACF,UACLA,GAMToI,EAAA1rC,UAAA0jC,aAAY,uBACE+I,OAMdf,EAAA1rC,UAAAyjC,cAAa,kBACJxB,IAQTyJ,EAAA1rC,UAAA2jC,UAAS,uBACKoI,SAQdL,EAAA1rC,UAAAmvB,UAAS,uBACK6c,SAQdN,EAAA1rC,UAAAujB,UAAS,uBACK0oB,SAQdP,EAAA1rC,UAAA6sC,WAAU,uBACIV,UAQdT,EAAA1rC,UAAA4jC,QAAO,uBACO6I,OAQdf,EAAA1rC,UAAA+sC,UAAS,uBACKT,SAMdZ,EAAA1rC,UAAAgkC,kBAAiB,SAAChgC,KAKlB0nC,EAAA1rC,UAAAk/B,KAAI,aAKJwM,EAAA1rC,UAAAikC,oBAAmB,SAACjgC,KAUpB0nC,EAAA1rC,UAAAotC,uBAAsB,SAACC,EAAUC,EAAaC,MAE1B,IAAhBD,GAAiB1tC,KACZosC,UAAY78B,EAAAA,GACR,UAARk+B,GAAgC,UAARA,EAAoB,OAEtCC,MAwBL7P,EAAE79B,KAAQqsC,QACV3M,OAAuBx6B,IAArBlF,KAAQusC,SAAyB1O,EAAE79B,KAAQusC,YAC7C1O,EAAK6B,EAAE,KACHj+B,EAAMo8B,EACZA,EAAK6B,EACLA,EAAKj+B,MAED+tB,OACctqB,IADRlF,KACLusC,SAAsBvsC,KAAQosC,QAAyB,EAAlBpsC,KAAQosC,QAC9CwB,EAAS,EAAIjkC,KAAKC,GAAM4lB,EACxB1uB,EAAI4+B,EAAK/1B,KAAKuD,IAAI0gC,GAElBzhC,EAAI0xB,EADAl0B,KAAKqP,KAAK0mB,EAAKA,EAAK5+B,EAAIA,GAE5BsL,EAAIzC,KAAKqP,KAAKlY,EAAIA,EAAIqL,EAAIA,GAC1B0hC,EAAazhC,EAAItL,KACX,UAAR2sC,GAAwBI,GAAcF,EAAU,OAC3CE,EAAaH,MAehB5vB,EAAI4vB,EAAc,EAAIG,EACtB96B,EAAK26B,EAAc,GAAMvhC,EAAIC,GAE7B0hC,EADOnkC,KAAKqP,MAAM6kB,EAAK/f,IAAM+f,EAAK/f,GAAK/K,EAAIA,GACzB8qB,UACF34B,SAAbqnC,UAAkC,UAARkB,EAAoB,OACnC,EAAXK,MAIHC,EAAKlQ,EAAKl0B,KAAKuD,IAAI0gC,GAEnBI,EAAKtO,EADA/1B,KAAKqP,KAAK6kB,EAAKA,EAAKkQ,EAAKA,GAG9BE,EADKtkC,KAAKqP,KAAK+0B,EAAKA,EAAKC,EAAKA,GACPD,KACzBE,GAAmBN,EAAU,KACzBO,EAAeD,EAAkBP,EAAe,EAAIhO,EAAK7B,SACxD,EAAIl0B,KAAKuG,IAAI49B,EAAUI,UAEd,EAAXJ,GAOThC,EAAA1rC,UAAA+tC,oBAAmB,eAMbC,EALAC,EAAUvG,GACV2F,EAAWzF,GACX2F,EAAa,EACbW,EAAW,KACXC,EAAiB,EAEjBb,EAAc,OAEThB,UAEa,QADpB0B,EAAWpuC,KAAQ0sC,QAAQ8B,cAEzBJ,EAAcnG,IAEhBmG,EAActI,GAAYsI,QAENlpC,KADpBwoC,EAAW1tC,KAAQ0sC,QAAQ+B,cAEzBf,ED7RwB,GC+R1BY,EAAQtuC,KAAQ0sC,QAAQgC,cACxBH,EAAcvuC,KAAQ0sC,QAAQiC,yBAEbzpC,KADjBuoC,EAAQztC,KAAQ0sC,QAAQkC,iBAEtBnB,EAAWzF,SAGG9iC,KADhBmpC,EAAOruC,KAAQ0sC,QAAQmC,gBAErBR,EAAUvG,SAGO5iC,KADnByoC,EAAU3tC,KAAQ0sC,QAAQoC,mBAExBnB,EDzUyB,SC6UvBoB,EAAG/uC,KAAQwtC,uBAAuBC,EAAUC,EAAaC,GACzDqB,EAAYrlC,KAAKuG,IAAGlQ,KAAMqsC,QAAOrsC,KAAOusC,UAAY,UAIxD6B,YAAaA,EACbV,YAAaA,EACbp8B,KALW3H,KAAK40B,KAAK,EAAIyQ,EAAYD,GAMrCV,QAASA,EACTC,SAAUA,EACVC,eAAgBA,EAChBd,SAAUA,EACVE,WAAYA,IAOhB7B,EAAA1rC,UAAA+7B,OAAM,gBACC2Q,eAAc9sC,KAAQmuC,0BACrB78B,EAAItR,KAAQ8sC,eAAex7B,KAC3B4xB,EAAYljC,KAAQsjC,uBACrByI,QAAO,QACPa,QAAO,CAAIt7B,EAAO,EAAI4xB,EAAa,GAAI5xB,EAAO,EAAI4xB,EAAa,SAC/D2J,MAAK,CAAIv7B,EAAMA,IAStBw6B,EAAA1rC,UAAAmtC,MAAK,SAACD,EAAetC,EAAStH,MAC5BsH,EAAQzqB,MAAMmjB,EAAYA,GAE1BsH,EAAQlqB,UAAUwsB,EAAch8B,KAAO,EAAGg8B,EAAch8B,KAAO,QAE1D29B,YAAYjE,QAERiB,MAAK,KACRxH,EAAKzkC,KAAQisC,MAAMuC,WACT,OAAV/J,IACFA,EAAQoD,IAEVmD,EAAQkE,UAAYpJ,GAAYrB,GAChCuG,EAAQkB,YAEDQ,UACP1B,EAAQoD,YAAcd,EAAcc,YACpCpD,EAAQmE,UAAY7B,EAAcI,YAC9B1C,EAAQoE,aAAe9B,EAAcgB,WACvCtD,EAAQoE,YAAY9B,EAAcgB,UAClCtD,EAAQuD,eAAiBjB,EAAciB,gBAEzCvD,EAAQqD,QAAUf,EAAce,QAChCrD,EAAQyC,SAAWH,EAAcG,SACjCzC,EAAQ2C,WAAaL,EAAcK,WACnC3C,EAAQ2B,WAQZb,EAAA1rC,UAAAgtC,0BAAyB,SAACE,WACfrB,MAAK,KACRxH,EAAKzkC,KAAQisC,MAAMuC,WAGnBvV,EAAU,KACE,iBAALwL,IACTA,EAAQoB,GAAQpB,IAEJ,OAAVA,EACFxL,EAAU,EACDp3B,MAAMC,QAAQ2iC,KACvBxL,EAA2B,IAAjBwL,EAAMrjC,OAAeqjC,EAAM,GAAK,GAE5B,IAAZxL,EAAa,KAGT+R,EAAUjF,GACduH,EAAch8B,KACdg8B,EAAch8B,WAEX06B,oBAAsBhB,EAAQ5E,YAE9BiJ,wBAAwB/B,EAAetC,SAGtCgB,sBAAmBhsC,KACtBgsC,oBAAmBhsC,KAAQyjC,SAAS,KAQ7CqI,EAAA1rC,UAAA6uC,YAAW,SAACjE,OACNxb,EAAMxvB,KAAQosC,QACZ1zB,EAAM1Y,KAAQqsC,WAChB7c,IAAWjgB,EAAAA,EACby7B,EAAQsE,IAAI,EAAG,EAAG52B,EAAQ,EAAG,EAAI/O,KAAKC,aAEhC4iC,OAA4BtnC,IAArBlF,KAAQusC,SAAyB7zB,EAAM1Y,KAAQusC,cACtCrnC,SAAbqnC,WACP/c,GAAU,WAENyD,EAAUjzB,KAAQysC,OAAS9iC,KAAKC,GAAK,EACrC2lC,EAAQ,EAAI5lC,KAAKC,GAAM4lB,EACpBnuB,EAAI,EAAGA,EAAImuB,EAAQnuB,IAAC,KACrBmuC,EAASvc,EAAa5xB,EAAIkuC,EAC1BE,EAAUpuC,EAAI,GAAM,EAAIqX,EAAS8zB,EACvCxB,EAAQ0E,OAAOD,EAAU9lC,KAAKwD,IAAIqiC,GAASC,EAAU9lC,KAAKuD,IAAIsiC,IAEhExE,EAAQ2E,cASZ7D,EAAA1rC,UAAAivC,wBAAuB,SAAC/B,EAAetC,GAErCA,EAAQlqB,UAAUwsB,EAAch8B,KAAO,EAAGg8B,EAAch8B,KAAO,QAE1D29B,YAAYjE,GAEjBA,EAAQkE,UAAYrH,GACpBmD,EAAQkB,YACCQ,UACP1B,EAAQoD,YAAcd,EAAcc,YACpCpD,EAAQmE,UAAY7B,EAAcI,YAC9BJ,EAAcgB,WAChBtD,EAAQoE,YAAY9B,EAAcgB,UAClCtD,EAAQuD,eAAiBjB,EAAciB,gBAEzCvD,EAAQ2B,WAGdb,EAliBA,CAA2BrJ,8dCuB3BmN,GArDA,SAAAnsC,GAGK,SACHosC,EAAYjZ,OACJ5rB,EAAU4rB,GAAyB,UAEzCnzB,EAAAI,KAAA7D,KAAA,CACEwvB,OAAQjgB,EAAAA,EACR28B,KAAMlhC,EAAQkhC,KACdxzB,OAAQ1N,EAAQ0N,OAChBi0B,OAAQ3hC,EAAQ2hC,OAChBpsB,WAAyBrb,IAAlB8F,EAAQuV,MAAsBvV,EAAQuV,MAAQ,EACrDlP,cAA+BnM,IAArB8F,EAAQqG,SAAyBrG,EAAQqG,SAAW,EAC9DwxB,oBAC6B39B,IAA3B8F,EAAQ63B,gBAA+B73B,EAAQ63B,eACjDK,kBAC2Bh+B,IAAzB8F,EAAQk4B,aAA6Bl4B,EAAQk4B,aAAY,CAAI,EAAG,kBAjB9C4M,GAAAD,EAAApsC,GA0BxBosC,EAAAzvC,UAAAif,MAAK,eACGkB,EAAKvgB,KAAQmjC,WACbt1B,EAAK,IAAOgiC,EAAW,CAC3B3D,KAAIlsC,KAAOgtC,UAAOhtC,KAAUgtC,UAAU3tB,aAAUna,EAChDynC,OAAM3sC,KAAOmtC,YAASntC,KAAUmtC,YAAY9tB,aAAUna,EACtDwT,OAAM1Y,KAAO2jB,YACbpD,MAAO1e,MAAMC,QAAQye,GAASA,EAAM/R,QAAU+R,EAC9ClP,SAAQrR,KAAOojC,cACfP,eAAc7iC,KAAOqjC,oBACrBH,aAAYljC,KAAOsjC,kBAAkB90B,iBAEvCX,EAAMqtB,WAAUl7B,KAAMk6B,cACfrsB,GASTgiC,EAAAzvC,UAAA2jB,UAAS,SAACrL,QACH2zB,QAAU3zB,OACVyjB,UAET0T,EAnDA,CAA0BE,GAAA7oC,SCqC1B8oC,GA9CA,WAGK,SACHC,EAAYrZ,OACJ5rB,EAAU4rB,GAAW,GAKxB52B,KACEkwC,YAA2BhrC,IAAlB8F,EAAQy5B,MAAsBz5B,EAAQy5B,MAAQ,YAQ9DwL,EAAA7vC,UAAAif,MAAK,eACGolB,EAAKzkC,KAAQwuC,sBACRyB,EAAI,CACbxL,MAAO5iC,MAAMC,QAAQ2iC,GAASA,EAAMj2B,QAAUi2B,QAASv/B,KAS3D+qC,EAAA7vC,UAAAouC,SAAQ,uBACM0B,QASdD,EAAA7vC,UAAA+vC,SAAQ,SAAC1L,QACFyL,OAASzL,GAElBwL,EA5CA,GC2NAG,GAhNA,WAGK,SACHC,EAAYzZ,OACJ5rB,EAAU4rB,GAAW,GAKxB52B,KACEkwC,YAA2BhrC,IAAlB8F,EAAQy5B,MAAsBz5B,EAAQy5B,MAAQ,KAKzDzkC,KACEswC,SAAWtlC,EAAQqjC,QAKrBruC,KACEuwC,eAAiCrrC,IAArB8F,EAAQsjC,SAAyBtjC,EAAQsjC,SAAW,KAKlEtuC,KACEwwC,gBAAkBxlC,EAAQujC,eAK5BvuC,KACEywC,UAAYzlC,EAAQyiC,SAKtBztC,KACE0wC,YAAc1lC,EAAQ2iC,WAKxB3tC,KACE2wC,OAAS3lC,EAAQ2H,aAQxB09B,EAAAjwC,UAAAif,MAAK,eACGolB,EAAKzkC,KAAQwuC,sBACR6B,EAAM,CACf5L,MAAO5iC,MAAMC,QAAQ2iC,GAASA,EAAMj2B,QAAUi2B,QAASv/B,EACvDmpC,QAAOruC,KAAO6uC,aACdP,SAAQtuC,KAAO0uC,cAAW1uC,KAAU0uC,cAAclgC,aAAUtJ,EAC5DqpC,eAAcvuC,KAAO2uC,oBACrBlB,SAAQztC,KAAO4uC,cACfjB,WAAU3tC,KAAO8uC,gBACjBn8B,MAAK3S,KAAOyuC,cAShB4B,EAAAjwC,UAAAouC,SAAQ,uBACM0B,QAQdG,EAAAjwC,UAAAyuC,WAAU,uBACIyB,UAQdD,EAAAjwC,UAAAsuC,YAAW,uBACG6B,WAQdF,EAAAjwC,UAAAuuC,kBAAiB,uBACH6B,iBAQdH,EAAAjwC,UAAAwuC,YAAW,uBACG6B,WAQdJ,EAAAjwC,UAAA0uC,cAAa,uBACC4B,aAQdL,EAAAjwC,UAAAquC,SAAQ,uBACMkC,QASdN,EAAAjwC,UAAA+vC,SAAQ,SAAC1L,QACFyL,OAASzL,GAShB4L,EAAAjwC,UAAAwwC,WAAU,SAACvC,QACJiC,SAAWjC,GAelBgC,EAAAjwC,UAAAgvC,YAAW,SAACd,QACLiC,UAAYjC,GASnB+B,EAAAjwC,UAAAywC,kBAAiB,SAACtC,QACXiC,gBAAkBjC,GASzB8B,EAAAjwC,UAAA0wC,YAAW,SAACrD,QACLgD,UAAYhD,GASnB4C,EAAAjwC,UAAA2wC,cAAa,SAACpD,QACP+C,YAAc/C,GASrB0C,EAAAjwC,UAAA4wC,SAAQ,SAACr+B,QACFg+B,OAASh+B,GAElB09B,EA9MA,GCwHAY,GAAA,WAGK,SACHC,EAAYta,OACJ5rB,EAAU4rB,GAAW,GAKxB52B,KACEmxC,UAAY,KAKdnxC,KACEoxC,kBAAoBC,QAEAnsC,IAArB8F,EAAQ8Z,UAAsB9kB,KAC3B+kB,YAAY/Z,EAAQ8Z,UAMxB9kB,KACEisC,WAAyB/mC,IAAjB8F,EAAQkhC,KAAqBlhC,EAAQkhC,KAAO,KAKtDlsC,KACEsxC,YAA2BpsC,IAAlB8F,EAAQqiC,MAAsBriC,EAAQqiC,MAAQ,KAKzDrtC,KACEk8B,eAAiCh3B,IAArB8F,EAAQumC,SAAyBvmC,EAAQumC,SAAW,KAKlEvxC,KACE0sC,aAA6BxnC,IAAnB8F,EAAQ2hC,OAAuB3hC,EAAQ2hC,OAAS,KAK5D3sC,KACEwxC,WAAyBtsC,IAAjB8F,EAAQi+B,KAAqBj+B,EAAQi+B,KAAO,KAKtDjpC,KACEyxC,QAAUzmC,EAAQmuB,cAQzB+X,EAAA9wC,UAAAif,MAAK,eACCyF,EAAQ9kB,KAAQolB,qBAChBN,GAA2B,iBAARA,IACrBA,EACEA,EACAzF,aAEO6xB,EAAK,CACdpsB,SAAUA,EACVonB,KAAIlsC,KAAOgtC,UAAOhtC,KAAUgtC,UAAU3tB,aAAUna,EAChDmoC,MAAKrtC,KAAOyjC,WAAQzjC,KAAUyjC,WAAWpkB,aAAUna,EACnDqsC,SAAQvxC,KAAOg9B,cACf2P,OAAM3sC,KAAOmtC,YAASntC,KAAUmtC,YAAY9tB,aAAUna,EACtD+jC,KAAIjpC,KAAO0xC,UAAO1xC,KAAU0xC,UAAUryB,aAAUna,EAChDi0B,OAAMn5B,KAAOokB,eAUjB8sB,EAAA9wC,UAAA48B,YAAW,uBACGd,WASdgV,EAAA9wC,UAAAuxC,YAAW,SAACJ,QACLrV,UAAYqV,GAUnBL,EAAA9wC,UAAAglB,YAAW,uBACG+rB,WASdD,EAAA9wC,UAAAwxC,oBAAmB,uBACLR,mBAQdF,EAAA9wC,UAAA4sC,QAAO,uBACOf,OAQdiF,EAAA9wC,UAAAyxC,QAAO,SAAC3F,QACDD,MAAQC,GAQfgF,EAAA9wC,UAAAqjC,SAAQ,uBACM6N,QAQdJ,EAAA9wC,UAAA0xC,SAAQ,SAACzE,QACFiE,OAASjE,GAQhB6D,EAAA9wC,UAAA+sC,UAAS,uBACKT,SAQdwE,EAAA9wC,UAAA2xC,UAAS,SAACpF,QACHD,QAAUC,GAQjBuE,EAAA9wC,UAAAsxC,QAAO,uBACOF,OAQdN,EAAA9wC,UAAA4xC,QAAO,SAAC/I,QACDuI,MAAQvI,GAQfiI,EAAA9wC,UAAAgkB,UAAS,uBACKqtB,SAWdP,EAAA9wC,UAAA2kB,YAAW,SAACD,GACS,mBAARA,EAAuB9kB,KAC3BoxC,kBAAoBtsB,EACD,iBAARA,EAAqB9kB,KAChCoxC,kBAAiB,SAAaa,UAE/BA,EAAQ5pC,IAAIyc,IAGNA,OAEY5f,IAAb4f,IAAsB9kB,KAC1BoxC,kBAAiB,kBACyCtsB,IAJ7C9kB,KACboxC,kBAAoBC,QAMtBF,UAAYrsB,GASnBosB,EAAA9wC,UAAAg7B,UAAS,SAACjC,QACHsY,QAAUtY,GAEnB+X,EAjPA,GAqRG,IACCgB,GAAgB,cAOJC,GAAmBF,EAAS7gC,OAMrC8gC,GAAa,KACVhG,EAAI,IAAO8D,GAAI,CACnBvL,MAAK,0BAEDkI,EAAM,IAAOyD,GAAM,CACvB3L,MAAK,UACL9xB,MAAO,OAETu/B,GAAa,KACPjB,GAAK,CACP5D,MAAK,IAAM+E,GAAAlrC,QAAW,CACpBglC,KAAMA,EACNS,OAAQA,EACRj0B,OAAQ,IAEVwzB,KAAMA,EACNS,OAAQA,YAIPuF,YAOOG,KACgE,IACxEC,EAAM,GACNC,EAAK,CAAI,IAAK,IAAK,IAAK,GACxBC,EAAI,CAAI,EAAG,IAAK,IAAK,UAE3BF,EAAO1yC,GAAoB,KACrBqxC,GAAK,CACP/E,KAAI,IAAM8D,GAAI,CACZvL,MAAK,CAAG,IAAK,IAAK,IAAK,SAI7B6N,EAAO1yC,GAA8B0yC,EAAO1yC,GAE5C0yC,EAAO1yC,GAAwB,KACzBqxC,GAAK,CACPtE,OAAM,IAAMyD,GAAM,CAChB3L,MAAO8N,EACP5/B,MAAOA,UAGPs+B,GAAK,CACPtE,OAAM,IAAMyD,GAAM,CAChB3L,MAAO+N,EACP7/B,MApBQ,OAwBd2/B,EAAO1yC,GAAkC0yC,EAAO1yC,GAEhD0yC,EAAO1yC,GAAuB0yC,EAAO1yC,GAAsB6yC,OACzDH,EAAO1yC,IAGT0yC,EAAO1yC,GAAkB,KACnBqxC,GAAK,CACP5D,MAAK,IAAM+E,GAAAlrC,QAAW,CACpBwR,OAAQ/F,EACRu5B,KAAI,IAAM8D,GAAI,CACZvL,MAAO+N,IAET7F,OAAM,IAAMyD,GAAM,CAChB3L,MAAO8N,EACP5/B,MAAOA,QAGXwmB,OAAQ5pB,EAAAA,KAGZ+iC,EAAO1yC,GAA4B0yC,EAAO1yC,GAE1C0yC,EAAO1yC,GAAoC0yC,EACzC1yC,GACA6yC,OAAOH,EAAO1yC,GAA2B0yC,EAAO1yC,IAE3C0yC,EAON,SACMjB,GAAwBY,UACxBA,EAAQ7sB,kBAGjBstB,GAAezB,6dCtdT0B,GACQ,cAgMdC,GAlLA,SAAAnvC,GAGK,SACHovC,EAAYjc,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,GAEnCkF,EAAcx5B,EAAM,GAAK0I,iBAExB8wB,EAAYjuB,aACZiuB,EAAYgX,oBACZhX,EAAYiX,4BACZjX,EAAYkX,wBACnBpvC,EAAAH,EAAAI,KAAA7D,KAAM87B,IAAW97B,MAMZizC,gBACmB/tC,IAAtB8F,EAAQkoC,WAA0BloC,EAAQkoC,UAM5CtvC,EAAKuvC,mBACsBjuC,IAAzB8F,EAAQ8nC,aAA6B9nC,EAAQ8nC,aAAe,IAO9DlvC,EAAK8gB,OAAS,KAOd9gB,EAAK+gB,oBAAiBzf,EAEtBtB,EAAK0hB,SAASta,EAAQ6C,OAMtBjK,EAAKwvC,2BAC8BluC,IAAjC8F,EAAQ+nC,sBACJ/nC,EAAQ+nC,qBAOdnvC,EAAKyvC,6BACgCnuC,IAAnC8F,EAAQgoC,wBACJhoC,EAAQgoC,gCA5DYM,GAAAT,EAAApvC,GAmE5BovC,EAAAzyC,UAAAmzC,aAAY,uBACEN,YAiBdJ,EAAAzyC,UAAAw8B,YAAW,SAAChQ,UACHnpB,EAAArD,UAAMw8B,YAAW/4B,KAAA7D,KAAC4sB,IAM3BimB,EAAAzyC,UAAAozC,gBAAe,uBACDL,eAOdN,EAAAzyC,UAAAqzC,eAAc,uBAELprC,IAAIsqC,KAUbE,EAAAzyC,UAAAilB,SAAQ,uBACMX,QAQdmuB,EAAAzyC,UAAAolB,iBAAgB,uBACFb,gBAOdkuB,EAAAzyC,UAAAszC,wBAAuB,uBACTN,uBAOdP,EAAAzyC,UAAAuzC,0BAAyB,uBACXN,yBAOdR,EAAAzyC,UAAAwzC,gBAAe,SAAC3nB,GACTA,EAAW4nB,gBACd5nB,EAAW4nB,cAAa,IAAOC,EAAArW,IAAP,CAAa,IAEvBz9B,KAAOg9B,cAAe4W,gBAAgB3nB,IAOxD4mB,EAAAzyC,UAAA2zC,eAAc,SAACC,QACRlrC,IAAI6pC,GAAuBqB,IAalCnB,EAAAzyC,UAAAklB,SAAQ,SAACI,QACFhB,YAAuBxf,IAAdwgB,EAA0BA,EAAYysB,QAC/CxtB,eACW,OAAde,OAAqBxgB,WDmJAsC,OACrBysC,KAEU,mBAAHzsC,EACTysC,EAAgBzsC,OAIb,IACC2c,EACAtiB,MAAMC,QAAQ0F,GAChB2c,EAAS3c,GAETmE,GAA+C,mBAAdnE,EAAK4c,UAA2B,IAEjED,EAAM,CAD8B3c,IAGtCysC,EAAa,kBACJ9vB,UAGJ8vB,ECxK8BC,CAAel0C,KAAM0kB,aACnD9d,WAETisC,EAhLA,CAA8BsB,GAAAjtC,+FCxE3B,IACGktC,GAAW,CACfC,eAAgB,EAChBC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,KAAM,EACNC,gBAAiB,EACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,OAAQ,IAMGC,GAAe,CAAId,GAAYS,MAK/BM,GAAiB,CAAIf,GAAYa,QAKjCG,GAAoB,CAAIhB,GAAYE,YAKpCe,GAAoB,CAAIjB,GAAYI,YAEjDc,GAAelB,GCsEfmB,GAvGA,oBAAAC,YAQEA,EAAAp1C,UAAAq1C,WAAU,SAAC3wB,EAAUmtB,EAASV,KAO9BiE,EAAAp1C,UAAAs1C,aAAY,SAAC5wB,KAOb0wB,EAAAp1C,UAAAklB,SAAQ,SAACzX,KAMT2nC,EAAAp1C,UAAAu1C,WAAU,SAACC,EAAgB3D,KAM3BuD,EAAAp1C,UAAAy1C,YAAW,SAAC5D,EAASpkC,KAMrB2nC,EAAAp1C,UAAA01C,uBAAsB,SAACC,EAA4B9D,KAMnDuD,EAAAp1C,UAAA41C,eAAc,SAACC,EAAoBhE,KAMnCuD,EAAAp1C,UAAA81C,oBAAmB,SAACC,EAAyBlE,KAM7CuD,EAAAp1C,UAAAg2C,eAAc,SAACC,EAAoBpE,KAMnCuD,EAAAp1C,UAAAk2C,iBAAgB,SAACC,EAAsBtE,KAMvCuD,EAAAp1C,UAAAo2C,UAAS,SAACC,EAAexE,KAMzBuD,EAAAp1C,UAAAs2C,YAAW,SAACC,EAAiB1E,KAM7BuD,EAAAp1C,UAAAw2C,SAAQ,SAAC9xB,EAAUmtB,KAMnBuD,EAAAp1C,UAAAy2C,mBAAkB,SAAC3H,EAAWd,KAM9BoH,EAAAp1C,UAAA02C,cAAa,SAACC,EAAYC,KAM1BxB,EAAAp1C,UAAA62C,aAAY,SAACC,EAAWF,KAC1BxB,EArGA,6dCilBA2B,GA5jBA,SAAA1zC,GAMK,SACH2zC,EAAYz2B,EAAW02B,EAAWjmC,EAAYsyB,OAA9C9/B,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAK+c,UAAYA,EAOjB/c,EAAKyzC,UAAYA,EAMjBzzC,EAAK8/B,WAAaA,EAMlB9/B,EAAK0zC,aAAe,EAOpB1zC,EAAKwN,WAAaA,EAMlBxN,EAAK2zC,2BAA6B,KAMlC3zC,EAAK4zC,2BAA6B,KAMlC5zC,EAAK6zC,mBAAqB,KAM1B7zC,EAAK8zC,aAAY,GAMjB9zC,EAAKqK,YAAW,GAMhBrK,EAAK+zC,eAAc,GAMnB/zC,EAAKg0C,yBAAwB,GAM7Bh0C,EAAKm2B,MAAK,YAxFc8d,GAAAT,EAAA3zC,GAgG1B2zC,EAAAh3C,UAAA03C,gBAAe,SAACC,OACRrU,EAAU1jC,KAAQ0jC,kBACH,GAAdA,EACHqU,EACAA,EAAUhsB,KAAG,SAAWisB,UACfA,EAAOtU,MAUtB0T,EAAAh3C,UAAA63C,2BAA0B,SAACtoC,EAAiBE,WACpC3B,EAAMlO,KAAQk4C,uBACdC,EAAQn4C,KAAQ23C,eAChB1pC,EAAWjO,KAAQiO,YACrBmqC,EAAQnqC,EAAY7M,OACfC,EAAI,EAAGuB,EAAK+M,EAAgBvO,OAAQC,EAAIuB,EAAIvB,GAAKwO,EACxDsoC,EAAS,GAAKxoC,EAAgBtO,GAC9B82C,EAAS,GAAKxoC,EAAgBtO,EAAI,GAC9BuN,GAAmBV,EAAQiqC,KAC7BlqC,EAAYmqC,KAAWD,EAAS,GAChClqC,EAAYmqC,KAAWD,EAAS,WAG7BC,GAaThB,EAAAh3C,UAAAi4C,0BAAyB,SACvB1oC,EACAC,EACApO,EACAqO,EACAyoC,EACAC,OAEMtqC,EAAWjO,KAAQiO,YACrBmqC,EAAQnqC,EAAY7M,OAClB8M,EAAMlO,KAAQk4C,uBAChBK,IACF3oC,GAAUC,OAORxO,EAAGm3C,EAASC,EALZC,EAAa/oC,EAAgBC,GAC7B+oC,EAAahpC,EAAgBC,EAAS,GACpCgpC,EAAS54C,KAAQ23C,eACnBkB,GAAU,MAGTx3C,EAAIuO,EAASC,EAAQxO,EAAIG,EAAKH,GAAKwO,EACtC+oC,EAAU,GAAKjpC,EAAgBtO,GAC/Bu3C,EAAU,GAAKjpC,EAAgBtO,EAAI,IACnCo3C,EAAUxpC,GAAuBf,EAAQ0qC,MACzBJ,GACVK,IACF5qC,EAAYmqC,KAAWM,EACvBzqC,EAAYmqC,KAAWO,EACvBE,GAAU,GAEZ5qC,EAAYmqC,KAAWQ,EAAU,GACjC3qC,EAAYmqC,KAAWQ,EAAU,IACxBH,IAAY1qC,IACrBE,EAAYmqC,KAAWQ,EAAU,GACjC3qC,EAAYmqC,KAAWQ,EAAU,GACjCC,GAAU,GAEVA,GAAU,EAEZH,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBJ,EAAUC,SAIPH,GAAUO,GAAYx3C,IAAMuO,EAASC,KACxC5B,EAAYmqC,KAAWM,EACvBzqC,EAAYmqC,KAAWO,GAElBP,GAWThB,EAAAh3C,UAAA04C,uBAAsB,SAACnpC,EAAiBC,EAAQsT,EAAMrT,EAAQkpC,WACnD13C,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM0hB,EAAK7hB,GACX23C,EAAUh5C,KAAQq4C,0BACtB1oC,EACAC,EACApO,EACAqO,GACA,GACA,GAEFkpC,EAAYz1C,KAAK01C,GACjBppC,EAASpO,SAEJoO,GAQTwnC,EAAAh3C,UAAAq1C,WAAU,SAAC3wB,EAAUmtB,EAASV,QACvB0H,cAAcn0B,EAAUmtB,OAIzBtiC,EAAiBqpC,EAAYD,EAAaG,EAC1CtpC,EAJE7P,EAAO+kB,EAASlE,UAChB/Q,EAASiV,EAASnD,YAClBw3B,EAAYn5C,KAAQiO,YAAY7M,UAGlCrB,GAAQH,EAA0B,CACpC+P,EAEImV,EACA+M,6BACJqnB,EAAY,OACN/wB,EAEFrD,EACAmP,WACJrkB,EAAS,UACAvO,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC+3C,EAAM,GACZxpC,EAAM5P,KAAQ84C,uBACZnpC,EACAC,EACAuY,EAAM9mB,GACNwO,EACAupC,GAEFF,EAAa51C,KAAK81C,QAEf1B,aAAap0C,KAAI,CACpBgyC,GAAkBb,OAClB0E,EACAD,EACAp0B,EACAysB,EACArpB,UAGFnoB,GAAQH,GACRG,GAAQH,GAERm5C,EAAW,GACXppC,EACE5P,GAAQH,EAEFklB,EACA+M,6BACF/M,EAASpD,qBACf9R,EAAM5P,KAAQ84C,uBACZnpC,EACA,EAEEmV,EACAwJ,UACFze,EACAkpC,QAEGrB,aAAap0C,KAAI,CACpBgyC,GAAkBb,OAClB0E,EACAJ,EACAj0B,EACAysB,EACAvpB,MAGFjoB,GAAQH,GACRG,GAAQH,GAER+P,EAAkBmV,EAASpD,qBAC3Bs3B,EAAUh5C,KAAQq4C,0BAChB1oC,EACA,EACAA,EAAgBvO,OAChByO,GACA,GACA,QAEG6nC,aAAap0C,KAAI,CACpBgyC,GAAkBb,OAClB0E,EACAH,EACAl0B,EACAysB,EACAzpB,MAEO/nB,GAAQH,GACjB+P,EAAkBmV,EAASpD,sBAC3Bs3B,EAAUh5C,KAAQi4C,2BAA2BtoC,EAAiBE,IAC7CspC,GAAYn5C,KACtB03C,aAAap0C,KAAI,CACpBgyC,GAAkBb,OAClB0E,EACAH,EACAl0B,EACAysB,EACAzpB,MAGK/nB,GAAQH,IACjB+P,EAAkBmV,EAASpD,0BACtBzT,YAAY3K,KAAKqM,EAAgB,GAAIA,EAAgB,IAC1DqpC,EAAUh5C,KAAQiO,YAAY7M,YACzBs2C,aAAap0C,KAAI,CACpBgyC,GAAkBb,OAClB0E,EACAH,EACAl0B,EACAysB,UAGC8H,YAAYpH,IAQnBmF,EAAAh3C,UAAA64C,cAAa,SAACn0B,EAAUmtB,QACjBsF,2BAA0B,CAC7BjC,GAAkBjB,eAClBpC,EACA,EACAntB,QAEG4yB,aAAap0C,KAAItD,KAAMu3C,iCACvBC,2BAA0B,CAC7BlC,GAAkBjB,eAClBpC,EACA,EACAntB,QAEG8yB,yBAAyBt0C,KAAItD,KAAMw3C,6BAM1CJ,EAAAh3C,UAAAk5C,OAAM,kBAEF5B,aAAY13C,KAAO03C,aACnBE,yBAAwB53C,KAAO43C,yBAC/B3pC,YAAWjO,KAAOiO,cAOtBmpC,EAAAh3C,UAAAm5C,gCAA+B,eAKzBl4C,EAJEu2C,EAAwB53C,KAAQ43C,yBAEtCA,EAAyB4B,cAIrBC,EACA15C,EAFEoB,EAAIy2C,EAAyBx2C,OAG/BG,GAAQ,MACPF,EAAI,EAAGA,EAAIF,IAAKE,GAEnBtB,GADA05C,EAAc7B,EAAyBv2C,IAC+B,KAC1Di0C,GAAkBV,aAC5BrzC,EAAQF,EACCtB,GAAQu1C,GAAkBjB,iBACnCoF,EAAY,GAAKp4C,EACjBC,EAAetB,KAAM43C,yBAA0Br2C,EAAOF,GACtDE,GAAQ,IASd61C,EAAAh3C,UAAAy2C,mBAAkB,SAAC3H,EAAWd,OACtBrU,EAAK/5B,KAAQ+5B,SACfmV,EAAS,KACLwK,EAAiBxK,EAAUV,WACjCzU,EAAMmV,UAAYpJ,GAChB4T,GAAkC7R,SAGpC9N,EAAMmV,eAAYhqC,KAEhBkpC,EAAW,KACPuL,EAAmBvL,EAAYI,WACrCzU,EAAMqU,YAActI,GAClB6T,GAAsC1R,QAElC2R,EAAqBxL,EAAYS,aACvC9U,EAAMsU,aACmBnpC,IAAvB00C,EAAmCA,EAAqB9R,OACpD+R,EAAsBzL,EAAYM,cACxC3U,EAAMuU,SAAWuL,EACbA,EAAoBrrC,QACpBu5B,OACE+R,EAA4B1L,EAAYO,oBAC9C5U,EAAMwU,eAAiBuL,GTpVQ,MSuVzBC,EAAsB3L,EAAYQ,cACxC7U,EAAM0T,cACoBvoC,IAAxB60C,EACIA,EACA/R,OACAgS,EAAmB5L,EAAYK,WACrC1U,EAAMoV,eACiBjqC,IAArB80C,EAAiCA,ETpTT,MSqTpBC,EAAwB7L,EAAYU,gBAC1C/U,EAAM4T,gBACsBzoC,IAA1B+0C,EACIA,ETtVqB,GSyVvBlgB,EAAMoV,UAASnvC,KAAQs3C,oBACpBA,aAAevd,EAAMoV,eAErBsI,mBAAqB,WAG5B1d,EAAMqU,iBAAclpC,EACpB60B,EAAMsU,aAAUnpC,EAChB60B,EAAMuU,SAAW,KACjBvU,EAAMwU,oBAAiBrpC,EACvB60B,EAAM0T,cAAWvoC,EACjB60B,EAAMoV,eAAYjqC,EAClB60B,EAAM4T,gBAAazoC,GAQvBkyC,EAAAh3C,UAAA85C,WAAU,SAACngB,OACHmV,EAAYnV,EAAMmV,UAElBiL,EAAe,CAAI7E,GAAkBP,eAAgB7F,SACvC,iBAATA,GAETiL,EAAgB72C,MAAK,GAEhB62C,GAMT/C,EAAAh3C,UAAAg6C,YAAW,SAACrgB,QACL2d,aAAap0C,KAAItD,KAAMq6C,aAAatgB,KAO3Cqd,EAAAh3C,UAAAi6C,aAAY,SAACtgB,UAETub,GAAkBN,iBAClBjb,EAAMqU,YACNrU,EAAMoV,UAASnvC,KAAQ0jC,WACvB3J,EAAMsU,QACNtU,EAAM0T,SACN1T,EAAM4T,gBACDmK,gBAAgB/d,EAAMuU,UAC3BvU,EAAMwU,eAAcvuC,KAAQ0jC,aAQhC0T,EAAAh3C,UAAAk6C,gBAAe,SAACvgB,EAAOmgB,OACfhL,EAAYnV,EAAMmV,UACJ,iBAATA,GAA0BnV,EAAMwgB,kBAAoBrL,SAC3ChqC,IAAdgqC,GAAuBlvC,KACpB03C,aAAap0C,KAAK42C,EAAWr2C,KAAI7D,KAAO+5B,IAE/CA,EAAMwgB,iBAAmBrL,IAQ7BkI,EAAAh3C,UAAAo6C,kBAAiB,SAACzgB,EAAOqgB,OACjBhM,EAAcrU,EAAMqU,YACpBC,EAAUtU,EAAMsU,QAChBC,EAAWvU,EAAMuU,SACjBC,EAAiBxU,EAAMwU,eACvBd,EAAW1T,EAAM0T,SACjB0B,EAAYpV,EAAMoV,UAClBxB,EAAa5T,EAAM4T,YAEvB5T,EAAM0gB,oBAAsBrM,GAC5BrU,EAAM2gB,gBAAkBrM,GACvBC,GAAYvU,EAAM4gB,kBAChB54C,EAAOg4B,EAAM4gB,gBAAiBrM,IACjCvU,EAAM6gB,uBAAyBrM,GAC/BxU,EAAM8gB,iBAAmBpN,GACzB1T,EAAM+gB,kBAAoB3L,GAC1BpV,EAAMghB,mBAAqBpN,UAEPzoC,IAAhBkpC,GACFgM,EAAYv2C,KAAI7D,KAAO+5B,GAEzBA,EAAM0gB,mBAAqBrM,EAC3BrU,EAAM2gB,eAAiBrM,EACvBtU,EAAM4gB,gBAAkBrM,EACxBvU,EAAM6gB,sBAAwBrM,EAC9BxU,EAAM8gB,gBAAkBpN,EACxB1T,EAAM+gB,iBAAmB3L,EACzBpV,EAAMghB,kBAAoBpN,IAO9ByJ,EAAAh3C,UAAAi5C,YAAW,SAACpH,QACLsF,2BAA2B,GAACv3C,KAAS03C,aAAat2C,YAClDm2C,2BAA6B,UAC7BC,2BAA2B,GAACx3C,KAAS43C,yBAAyBx2C,YAC9Do2C,2BAA6B,SAC5BwD,EAAsB,CAAI1F,GAAkBV,aAAc3C,QAC3DyF,aAAap0C,KAAK03C,QAClBpD,yBAAyBt0C,KAAK03C,IAUrC5D,EAAAh3C,UAAA83C,qBAAoB,oBACRT,0BACHA,mBAAqBlpC,GAAKvO,KAAMq3C,gBAC5BC,aAAe,GAAC,KACjB3kC,EAAK3S,KAASoR,YAAUpR,KAASs3C,aAAe,GAAM,EAC5DjpC,GAAMrO,KAAMy3C,mBAAoB9kC,EAAK3S,KAAOy3C,gCAGpCA,oBAEhBL,EA1jBA,CAA4B7B,2gBCsO5B0F,GA/PA,SAAAx3C,GAMK,SACHy3C,EAAYv6B,EAAW02B,EAAWjmC,EAAYsyB,OAA9C9/B,EACEH,EAAAI,KAAA7D,KAAM2gB,EAAW02B,EAAWjmC,EAAYsyB,IAAU1jC,YAMlD4D,EAAKu3C,mBAAqB,KAM1Bv3C,EAAK0tC,OAAS,KAMd1tC,EAAKw3C,sBAAmBl2C,EAMxBtB,EAAKy3C,cAAWn2C,EAMhBtB,EAAK03C,cAAWp2C,EAMhBtB,EAAK23C,aAAUr2C,EAMftB,EAAK++B,cAAWz9B,EAMhBtB,EAAK43C,cAAWt2C,EAMhBtB,EAAK63C,cAAWv2C,EAMhBtB,EAAKg/B,qBAAkB19B,EAMvBtB,EAAKk/B,eAAY59B,EAMjBtB,EAAKm/B,YAAS79B,EAMdtB,EAAK+sC,YAASzrC,EAOdtB,EAAK83C,6BAA0Bx2C,WA7FFy2C,GAAAT,EAAAz3C,GAoG/By3C,EAAA96C,UAAAo2C,UAAS,SAACC,EAAexE,WACbX,aAGL2H,cAAcxC,EAAexE,OAC5BtiC,EAAkB8mC,EAAc/0B,qBAChC7R,EAAS4mC,EAAc90B,YACvBi6B,EAAO57C,KAAQiO,YAAY7M,OAC3Bg3C,EAAKp4C,KAAQi4C,2BAA2BtoC,EAAiBE,QAC1D6nC,aAAap0C,KAAI,CACpBgyC,GAAkBX,WAClBiH,EACAxD,OACK9G,YAEA+J,SAAQr7C,KAAQo7C,sBAChBE,SAAQt7C,KAAQo7C,iBACrBzxC,KAAK40B,KAAIv+B,KAAMu7C,QAAOv7C,KAAQo7C,uBACzBzY,cACA6Y,cACAC,cACA7Y,qBACAE,gBAEGC,OAAO,GAAC/iC,KAAS0jC,WAAU1jC,KAASo7C,sBACpCrY,OAAO,GAAC/iC,KAAS0jC,WAAU1jC,KAASo7C,kBAE5CzxC,KAAK40B,KAAIv+B,KAAM2wC,OAAM3wC,KAAQo7C,uBACxBM,+BAEF9D,yBAAyBt0C,KAAI,CAChCgyC,GAAkBX,WAClBiH,EACAxD,OACK+C,wBAEAE,cACAC,cACAC,aACA5Y,cACA6Y,cACAC,cACA7Y,qBACAE,eACAC,YACA4N,YACA+K,+BAEFrC,YAAYpH,KAOnBiJ,EAAA96C,UAAAg2C,eAAc,SAACC,EAAoBpE,WACvBX,aAGL2H,cAAc5C,EAAoBpE,OACjCtiC,EAAkB0mC,EAAmB30B,qBACrC7R,EAASwmC,EAAmB10B,YAC5Bi6B,EAAO57C,KAAQiO,YAAY7M,OAC3Bg3C,EAAKp4C,KAAQi4C,2BAA2BtoC,EAAiBE,QAC1D6nC,aAAap0C,KAAI,CACpBgyC,GAAkBX,WAClBiH,EACAxD,OACK9G,YAEA+J,SAAQr7C,KAAQo7C,sBAChBE,SAAQt7C,KAAQo7C,iBACrBzxC,KAAK40B,KAAIv+B,KAAMu7C,QAAOv7C,KAAQo7C,uBACzBzY,cACA6Y,cACAC,cACA7Y,qBACAE,gBAEGC,OAAO,GAAC/iC,KAAS0jC,WAAU1jC,KAASo7C,sBACpCrY,OAAO,GAAC/iC,KAAS0jC,WAAU1jC,KAASo7C,kBAE5CzxC,KAAK40B,KAAIv+B,KAAM2wC,OAAM3wC,KAAQo7C,uBACxBM,+BAEF9D,yBAAyBt0C,KAAI,CAChCgyC,GAAkBX,WAClBiH,EACAxD,OACK+C,wBAEAE,cACAC,cACAC,aACA5Y,cACA6Y,cACAC,cACA7Y,qBACAE,eACAC,YACA4N,YACA+K,+BAEFrC,YAAYpH,KAMnBiJ,EAAA96C,UAAAk5C,OAAM,uBACCC,uCAEA8B,cAAWn2C,OACXo2C,cAAWp2C,OACXi2C,mBAAqB,UACrB7J,OAAS,UACT8J,sBAAmBl2C,OACnBq2C,aAAUr2C,OACV69B,YAAS79B,OACTy9B,cAAWz9B,OACXs2C,cAAWt2C,OACXu2C,cAAWv2C,OACX09B,qBAAkB19B,OAClB49B,eAAY59B,OACZyrC,YAASzrC,EACPzB,EAAArD,UAAMk5C,OAAMz1C,KAAA7D,OAOrBk7C,EAAA96C,UAAA02C,cAAa,SAACC,EAAY8E,OAClBp+B,EAASs5B,EAAWvT,YACpBlyB,EAAOylC,EAAW/S,UAClB8X,EAAoB/E,EAAWpT,uBAC/B0J,EAAQ0J,EAAWtT,SAAQzjC,KAAM0jC,YACjCqY,EAAShF,EAAWhT,iBACrBqX,iBAAmBrE,EAAWnT,cAAa5jC,KAAM0jC,iBACjD2X,SAAW59B,EAAO,QAClB69B,SAAW79B,EAAO,QAClB09B,mBAAqBW,OACrBxK,OAASjE,OACTkO,QAAUjqC,EAAK,QACfqxB,SAAWoU,EAAW7c,kBACtBshB,SAAWO,EAAO,QAClBN,SAAWM,EAAO,QAClBnZ,gBAAkBmU,EAAW1T,yBAC7BP,UAAYiU,EAAW3T,mBACvBL,OAASgU,EAAWxT,qBACpBoN,OAASr/B,EAAK,QACdoqC,wBAA0BG,GAEnCX,EA7PA,CAAiCc,GAAA90C,ghBC4JjC+0C,GAxJA,SAAAx4C,GAMK,SACHy4C,EAAYv7B,EAAW02B,EAAWjmC,EAAYsyB,UAC5CjgC,EAAAI,KAAA7D,KAAM2gB,EAAW02B,EAAWjmC,EAAYsyB,IAAU1jC,YARhBm8C,GAAAD,EAAAz4C,GAmBpCy4C,EAAA97C,UAAAg8C,qBAAoB,SAACzsC,EAAiBC,EAAQpO,EAAKqO,OAC3C+rC,EAAO57C,KAAQiO,YAAY7M,OAC3Bg3C,EAAKp4C,KAAQq4C,0BACjB1oC,EACAC,EACApO,EACAqO,GACA,GACA,GAEIwsC,EAAuB,CAC3B/G,GAAkBR,gBAClB8G,EACAxD,eAEGV,aAAap0C,KAAK+4C,QAClBzE,yBAAyBt0C,KAAK+4C,GAC5B76C,GAOT06C,EAAA97C,UAAA41C,eAAc,SAACC,EAAoBhE,OAC3BlY,EAAK/5B,KAAQ+5B,MACbqU,EAAcrU,EAAMqU,YACpBe,EAAYpV,EAAMoV,kBACJjqC,IAAhBkpC,QAA2ClpC,IAAdiqC,QAG5BqL,kBAAkBzgB,EAAK/5B,KAAOo6C,kBAC9BnB,cAAchD,EAAoBhE,QAClC2F,yBAAyBt0C,KAAI,CAE9BgyC,GAAkBN,iBAClBjb,EAAMqU,YACNrU,EAAMoV,UACNpV,EAAMsU,QACNtU,EAAM0T,SACN1T,EAAM4T,WACN5F,GXwC6B,GWrC/BqN,QAEIzlC,EAAkBsmC,EAAmBv0B,qBACrC7R,EAASomC,EAAmBt0B,iBAC7By6B,qBACHzsC,EACA,EACAA,EAAgBvO,OAChByO,QAEG+nC,yBAAyBt0C,KAAK6xC,SAC9BkE,YAAYpH,KAOnBiK,EAAA97C,UAAA81C,oBAAmB,SAACC,EAAyBlE,OACrClY,EAAK/5B,KAAQ+5B,MACbqU,EAAcrU,EAAMqU,YACpBe,EAAYpV,EAAMoV,kBACJjqC,IAAhBkpC,QAA2ClpC,IAAdiqC,QAG5BqL,kBAAkBzgB,EAAK/5B,KAAOo6C,kBAC9BnB,cAAc9C,EAAyBlE,QACvC2F,yBAAyBt0C,KAAI,CAE9BgyC,GAAkBN,iBAClBjb,EAAMqU,YACNrU,EAAMoV,UACNpV,EAAMsU,QACNtU,EAAM0T,SACN1T,EAAM4T,WACN5T,EAAMuU,SACNvU,EAAMwU,gBAER6G,YAEIlyB,EAAOizB,EAAwB7nB,UAC/B3e,EAAkBwmC,EAAwBz0B,qBAC1C7R,EAASsmC,EAAwBx0B,YACnC/R,EAAS,EACJvO,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAC1CuO,EAAM5P,KAAQo8C,qBACZzsC,EACAC,EACuBsT,EAAK7hB,GAC5BwO,QAGC+nC,yBAAyBt0C,KAAK6xC,SAC9BkE,YAAYpH,KAMnBiK,EAAA97C,UAAAk5C,OAAM,eACEvf,EAAK/5B,KAAQ+5B,aAEG70B,MAApB60B,EAAMuiB,YACNviB,EAAMuiB,YAAUt8C,KAASiO,YAAY7M,QAAMpB,KAEtC03C,aAAap0C,KAAK6xC,SAEpBoE,uCACAxf,MAAQ,KACNt2B,EAAArD,UAAMk5C,OAAMz1C,KAAA7D,OAMrBk8C,EAAA97C,UAAAg6C,YAAW,SAACrgB,GAEY70B,MAApB60B,EAAMuiB,YACNviB,EAAMuiB,YAAUt8C,KAASiO,YAAY7M,cAEhCs2C,aAAap0C,KAAK6xC,IACvBpb,EAAMuiB,WAAUt8C,KAAQiO,YAAY7M,QAEtC24B,EAAMuiB,WAAa,EACnB74C,EAAArD,UAAMg6C,YAAWv2C,KAAA7D,KAAC+5B,QACb2d,aAAap0C,KAAK8xC,KAE3B8G,EAtJA,CAAsCF,GAAA90C,ghBCsPtCq1C,GAnPA,SAAA94C,GAMK,SACH+4C,EAAY77B,EAAW02B,EAAWjmC,EAAYsyB,UAC5CjgC,EAAAI,KAAA7D,KAAM2gB,EAAW02B,EAAWjmC,EAAYsyB,IAAU1jC,YARnBy8C,GAAAD,EAAA/4C,GAmBjC+4C,EAAAp8C,UAAAs8C,sBAAqB,SAAC/sC,EAAiBC,EAAQsT,EAAMrT,OAC7CkqB,EAAK/5B,KAAQ+5B,MACbmS,OAA2BhnC,IAApB60B,EAAMmV,UACbvC,OAA+BznC,IAAtB60B,EAAMqU,YACfuO,EAAUz5B,EAAK9hB,YAChBs2C,aAAap0C,KAAK8xC,SAClBwC,yBAAyBt0C,KAAK8xC,YAC1B/zC,EAAI,EAAGA,EAAIs7C,IAAWt7C,EAAC,KACxBG,EAAM0hB,EAAK7hB,GACXu6C,EAAO57C,KAAQiO,YAAY7M,OAC3Bg3C,EAAKp4C,KAAQq4C,0BACjB1oC,EACAC,EACApO,EACAqO,GACA,GACC88B,GAEG0P,EAAuB,CAC3B/G,GAAkBR,gBAClB8G,EACAxD,QAEGV,aAAap0C,KAAK+4C,QAClBzE,yBAAyBt0C,KAAK+4C,GAC/B1P,SAGG+K,aAAap0C,KAAK+xC,SAClBuC,yBAAyBt0C,KAAK+xC,KAErCzlC,EAASpO,SAEP0qC,SACGwL,aAAap0C,KAAK4xC,SAClB0C,yBAAyBt0C,KAAK4xC,KAEjCvI,SACG+K,aAAap0C,KAAK6xC,SAClByC,yBAAyBt0C,KAAK6xC,KAE9BvlC,GAOT4sC,EAAAp8C,UAAAu1C,WAAU,SAACC,EAAgB3D,OACnBlY,EAAK/5B,KAAQ+5B,MACbmV,EAAYnV,EAAMmV,UAClBd,EAAcrU,EAAMqU,oBACRlpC,IAAdgqC,QAA2ChqC,IAAhBkpC,QAG1BwO,4BACA3D,cAAcrD,EAAgB3D,QACX/sC,IAApB60B,EAAMmV,WAAuBlvC,KAC1B43C,yBAAyBt0C,KAAI,CAChCgyC,GAAkBP,eAClBlN,UAGsB3iC,IAAtB60B,EAAMqU,aAAyBpuC,KAC5B43C,yBAAyBt0C,KAAI,CAChCgyC,GAAkBN,iBAClBjb,EAAMqU,YACNrU,EAAMoV,UACNpV,EAAMsU,QACNtU,EAAM0T,SACN1T,EAAM4T,WACN5T,EAAMuU,SACNvU,EAAMwU,qBAGJ5+B,EAAkBimC,EAAel0B,qBACjC7R,EAAS+lC,EAAej0B,YACxBi6B,EAAO57C,KAAQiO,YAAY7M,YAC5Bi3C,0BACH1oC,EACA,EACAA,EAAgBvO,OAChByO,GACA,GACA,OAEIgtC,EAAiB,CAAIvH,GAAkBf,OAAQqH,QAChDlE,aAAap0C,KAAK8xC,GAAsByH,QACxCjF,yBAAyBt0C,KAAK8xC,GAAsByH,QACjC33C,IAApB60B,EAAMmV,iBACHwI,aAAap0C,KAAK4xC,SAClB0C,yBAAyBt0C,KAAK4xC,UAEXhwC,IAAtB60B,EAAMqU,mBACHsJ,aAAap0C,KAAK6xC,SAClByC,yBAAyBt0C,KAAK6xC,UAEhCkE,YAAYpH,KAOnBuK,EAAAp8C,UAAAs2C,YAAW,SAACC,EAAiB1E,OACrBlY,EAAK/5B,KAAQ+5B,MACbmV,EAAYnV,EAAMmV,UAClBd,EAAcrU,EAAMqU,oBACRlpC,IAAdgqC,QAA2ChqC,IAAhBkpC,QAG1BwO,4BACA3D,cAActC,EAAiB1E,QACZ/sC,IAApB60B,EAAMmV,WAAuBlvC,KAC1B43C,yBAAyBt0C,KAAI,CAChCgyC,GAAkBP,eAClBlN,UAGsB3iC,IAAtB60B,EAAMqU,aAAyBpuC,KAC5B43C,yBAAyBt0C,KAAI,CAChCgyC,GAAkBN,iBAClBjb,EAAMqU,YACNrU,EAAMoV,UACNpV,EAAMsU,QACNtU,EAAM0T,SACN1T,EAAM4T,WACN5T,EAAMuU,SACNvU,EAAMwU,qBAGJrrB,EAAOyzB,EAAgBroB,UACvB3e,EAAkBgnC,EAAgB9kB,6BAClChiB,EAAS8mC,EAAgBh1B,iBAC1B+6B,sBACH/sC,EACA,EAC8BuT,EAC9BrT,QAEGwpC,YAAYpH,KAOnBuK,EAAAp8C,UAAAk2C,iBAAgB,SAACC,EAAsBtE,OAC/BlY,EAAK/5B,KAAQ+5B,MACbmV,EAAYnV,EAAMmV,UAClBd,EAAcrU,EAAMqU,oBACRlpC,IAAdgqC,QAA2ChqC,IAAhBkpC,QAG1BwO,4BACA3D,cAAc1C,EAAsBtE,QACjB/sC,IAApB60B,EAAMmV,WAAuBlvC,KAC1B43C,yBAAyBt0C,KAAI,CAChCgyC,GAAkBP,eAClBlN,UAGsB3iC,IAAtB60B,EAAMqU,aAAyBpuC,KAC5B43C,yBAAyBt0C,KAAI,CAChCgyC,GAAkBN,iBAClBjb,EAAMqU,YACNrU,EAAMoV,UACNpV,EAAMsU,QACNtU,EAAM0T,SACN1T,EAAM4T,WACN5T,EAAMuU,SACNvU,EAAMwU,yBAGJpmB,EAAQouB,EAAqBtiB,WAC7BtkB,EAAkB4mC,EAAqB1kB,6BACvChiB,EAAS0mC,EAAqB50B,YAChC/R,EAAS,EACJvO,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAC3CuO,EAAM5P,KAAQ08C,sBACZ/sC,EACAC,EACAuY,EAAM9mB,GACNwO,QAGCwpC,YAAYpH,KAMnBuK,EAAAp8C,UAAAk5C,OAAM,gBACCC,uCACAxf,MAAQ,SAKPpZ,EAAS3gB,KAAQ2gB,aACL,IAAdA,UACI1S,EAAWjO,KAAQiO,YAChB5M,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAQC,EAAIuB,IAAMvB,EACjD4M,EAAY5M,GAAKimB,GAAKrZ,EAAY5M,GAAIsf,UAGnCld,EAAArD,UAAMk5C,OAAMz1C,KAAA7D,OAMrBw8C,EAAAp8C,UAAAw8C,qBAAoB,eACZ7iB,EAAK/5B,KAAQ+5B,WAED70B,IADA60B,EAAMmV,WACGlvC,KACpBs6C,gBAAgBvgB,EAAK/5B,KAAOk6C,iBAETh1C,IAAtB60B,EAAMqU,aAAyBpuC,KAC5Bw6C,kBAAkBzgB,EAAK/5B,KAAOo6C,cAGzCoC,EAjPA,CAAmCR,GAAA90C,4FCFnC41C,GAEM,gBCAUC,GAAcC,EAAUrtC,EAAiBC,EAAQpO,EAAKqO,OAM1DxO,EAAG47C,EAAKC,EAAKprC,EAAII,EAAIirC,EAAKC,EAAKC,EAAKC,EAL1CC,EAAa3tC,EACb4tC,EAAW5tC,EACX6tC,EAAS,EACTn0B,EAAI,EACJW,EAAQra,MAEPvO,EAAIuO,EAAQvO,EAAIG,EAAKH,GAAKwO,EAAM,KAC7BkC,EAAKpC,EAAgBtO,GACrB8Q,EAAKxC,EAAgBtO,EAAI,QACpB6D,IAAP4M,IACFurC,EAAMtrC,EAAKD,EACXwrC,EAAMnrC,EAAKD,EACXgrC,EAAMvzC,KAAKqP,KAAKqkC,EAAMA,EAAMC,EAAMA,QACtBp4C,IAARi4C,IACF7zB,GAAK2zB,EACEtzC,KAAK+zC,MAAMP,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IACvCF,IACL1zB,EAAIm0B,IACNA,EAASn0B,EACTi0B,EAAatzB,EACbuzB,EAAWn8C,GAEbioB,EAAI,EACJW,EAAQ5oB,EAAIwO,IAGhBotC,EAAMC,EACNC,EAAME,EACND,EAAME,GAERxrC,EAAKC,EACLG,EAAKC,SAEPmX,GAAK4zB,GACMO,EAAM,CAAIxzB,EAAO5oB,IAAMk8C,EAAYC,ieClBnCG,GAAU,MACb,MACD,SACG,SACD,QACA,MACF,SACG,WACC,cACG,eACC,UACL,GA6kBZC,GA1kBA,SAAAn6C,GAMK,SACHo6C,EAAYl9B,EAAW02B,EAAWjmC,EAAYsyB,OAA9C9/B,EACEH,EAAAI,KAAA7D,KAAM2gB,EAAW02B,EAAWjmC,EAAYsyB,IAAU1jC,YAMlD4D,EAAKk6C,QAAU,KAMfl6C,EAAK4tC,MAAK,GAMV5tC,EAAKm6C,aAAe,EAMpBn6C,EAAKo6C,aAAe,EAMpBp6C,EAAKq6C,yBAAsB/4C,EAM3BtB,EAAKs6C,cAAgB,EAMrBt6C,EAAKu6C,eAAiB,KAKtBv6C,EAAKw6C,WAAU,GAMfx6C,EAAKy6C,iBAAmB,KAKxBz6C,EAAK06C,aAAY,GAMjB16C,EAAK26C,WAAU,GAKf36C,EAAK46C,WAAU,GAMf56C,EAAK66C,SAAQ,GAMb76C,EAAK86C,SAAQ,GAMb96C,EAAK+6C,WAAU,GAOf/6C,EAAK83C,6BAA0Bx2C,WAtGH05C,GAAAf,EAAAp6C,GA4G9Bo6C,EAAAz9C,UAAAk5C,OAAM,eACE5B,EAAej0C,EAAArD,UAAMk5C,OAAMz1C,KAAA7D,aACjC03C,EAAa8G,WAAUx+C,KAAQw+C,WAC/B9G,EAAa0G,WAAUp+C,KAAQo+C,WAC/B1G,EAAa4G,aAAYt+C,KAAQs+C,aAC1B5G,GAOTmG,EAAAz9C,UAAAw2C,SAAQ,SAAC9xB,EAAUmtB,OACX4M,EAAS7+C,KAAQm+C,eACjBW,EAAW9+C,KAAQq+C,iBACnBU,EAAS/+C,KAAQu+C,cACT,UAAL/M,OAAiBuN,IAAeF,GAAcC,QAIjD7wC,EAAWjO,KAAQiO,YACrB1M,EAAQ0M,EAAY7M,OAElB49C,EAAel6B,EAASlE,UAC1BjR,EAAkB,KAClBE,EAASiV,EAASnD,eAGpBo9B,EAAUE,YAAcnC,IACvBkC,GAAgBp/C,GACfo/C,GAAgBp/C,GAChBo/C,GAAgBp/C,GAChBo/C,GAAgBp/C,OAuDds/C,EAAiBH,EAAUI,SAAW,KAAI,UACtCH,QACDp/C,OACAA,EACH+P,EAEImV,EACApD,gCAED9hB,EACH+P,EAEImV,EACA8G,6BAEDhsB,EACH+P,EAEImV,EACAjB,uBAEDjkB,EACH+P,EAEImV,EACA4J,mBACJ7e,EAAS,aAENjQ,EACH+P,EAEImV,EACAgN,uBACCitB,EAAUI,UACbD,EAAe57C,KAAKqM,EAAgB,GAAC3P,KAASoR,YAEhDvB,EAAS,aAENjQ,MACGw0B,EAEFtP,EACAoP,wBACJvkB,EAAe,OACNtO,EAAI,EAAGuB,EAAKwxB,EAAehzB,OAAQC,EAAIuB,EAAIvB,GAAK,EAClD09C,EAAUI,UACbD,EAAe57C,KAAK8wB,EAAe/yB,EAAI,GAACrB,KAASoR,YAEnDzB,EAAgBrM,KAAK8wB,EAAe/yB,GAAI+yB,EAAe/yB,EAAI,OAE9B,IAA3BsO,EAAgBvO,OAAY,OAGhCyO,EAAS,MAIPrO,EAAGxB,KAAQi4C,2BAA2BtoC,EAAiBE,MACjDtO,EAAK,UAIf29C,IACC19C,EAAMD,GAAS,GAAMoO,EAAgBvO,OAASyO,EAAM,KAEjDuvC,EAAM79C,EAAQ,EAClB29C,EAAiBA,EAAeG,QAAM,SAAEjU,EAAGhN,OACnCkhB,EACJrxC,EAAwB,GAAXmxC,EAAMhhB,MAAYzuB,EAAgByuB,EAAIvuB,IACnD5B,EAAwB,GAAXmxC,EAAMhhB,GAAS,KAAOzuB,EAAgByuB,EAAIvuB,EAAS,UAC7DyvC,KACDF,EAEGE,UAINC,mBAEDR,EAAUS,gBAAkBT,EAAUU,yBACnC5I,mBACHkI,EAAUS,eACVT,EAAUU,kBAERV,EAAUS,sBACPlF,gBAAet6C,KAAM+5B,MAAK/5B,KAAOk6C,iBACjCtC,yBAAyBt0C,KAAItD,KAAMk6C,WAAUl6C,KAAM+5B,SAEtDglB,EAAUU,wBACPjF,kBAAiBx6C,KAAM+5B,MAAK/5B,KAAOo6C,kBACnCxC,yBAAyBt0C,KAAItD,KAAMq6C,aAAYr6C,KAAM+5B,eAIzDkf,cAAcn0B,EAAUmtB,OAGzB1H,EAAUwU,EAAUxU,WAEtBA,GAAWnC,KACV2W,EAAUx+B,MAAM,GAAK,GAAKw+B,EAAUx+B,MAAM,GAAK,GAAC,KAE7Cm/B,EAAKX,EAAUxU,QAAQ,GACvB1I,EAAKkd,EAAUxU,QAAQ,GACvBoV,EAAKZ,EAAUxU,QAAQ,GACvBqV,EAAKb,EAAUxU,QAAQ,GACvBwU,EAAUx+B,MAAM,GAAK,IACvBshB,GAAMA,EACN+d,GAAMA,GAEJb,EAAUx+B,MAAM,GAAK,IACvBm/B,GAAMA,EACNC,GAAMA,GAERpV,EAAO,CAAImV,EAAI7d,EAAI8d,EAAIC,OAMnBC,EAAU7/C,KAAQ0jC,gBACnBgU,aAAap0C,KAAI,CACpBgyC,GAAkBX,WAClBpzC,EACAC,EACA,KACAye,IACAA,IACAA,IACA,EACA,EACA,OACKg+B,yBACAC,eACJ,EAAG,GACJj+B,SACKy7B,wBACLnR,GAAWnC,GACPA,GACAmC,EAAQxe,KAAG,SAAWoS,UACbA,EAAI0hB,OAEfd,EAAUS,iBACVT,EAAUU,sBACPjO,WACAiN,cACAE,gBACAD,cACAX,kBACAC,aACLkB,QAEI3+B,EAAQ,EAAIs/B,OACbjI,yBAAyBt0C,KAAI,CAChCgyC,GAAkBX,WAClBpzC,EACAC,EACA,KACAye,IACAA,IACAA,IACA,EACA,EACA,OACKg+B,yBACAC,eACJ39B,EAAOA,GACRN,SACKy7B,wBACLnR,IACEwU,EAAUS,iBACVT,EAAUU,sBACPjO,WACAiN,cACAE,gBACAD,cACAX,kBACAC,aACLkB,SAGG7F,YAAYpH,OA5O2B,KAEvC1/B,GAAUvS,KAAMk4C,uBAAwBpzB,EAASzQ,aAAS,WAG3D6O,OAAI,KACRvT,EAAkBmV,EAASpD,qBACvBs9B,GAAgBp/C,EAClBsjB,EAAI,CAAIvT,EAAgBvO,gBACf49C,GAAgBp/C,EACzBsjB,EACE4B,EACAwJ,kBACO0wB,GAAgBp/C,EACzBsjB,EAA+D4B,EAC5DwJ,UACA9f,MAAM,EAAG,WACHwwC,GAAgBp/C,EAA0B,KAC7CuoB,EAEFrD,EACAmP,WACJ/Q,EAAI,WACK7hB,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAC3C6hB,EAAK5f,KAAK6kB,EAAM9mB,GAAG,SAGlB43C,cAAcn0B,EAAUmtB,WACvB6N,EAAYf,EAAUe,UACxBC,EAAa,EACbC,OAAO,EACFx3B,EAAI,EAAGy3B,EAAK/8B,EAAK9hB,OAAQonB,EAAIy3B,IAAMz3B,EAAC,IAC1BtjB,MAAb46C,EAAsB,KAClBI,EAAQnD,GACZgC,EAAU/B,SACVrtC,EACAowC,EACA78B,EAAKsF,GACL3Y,GAEFkwC,EAAaG,EAAM,GACnBF,EAAUE,EAAM,QAEhBF,EAAU98B,EAAKsF,WAERnnB,EAAI0+C,EAAY1+C,EAAI2+C,EAAS3+C,GAAKwO,EACzC5B,EAAY3K,KAAKqM,EAAgBtO,GAAIsO,EAAgBtO,EAAI,QAErDG,EAAMyM,EAAY7M,OACxB2+C,EAAa78B,EAAKsF,QACb23B,WAAW5+C,EAAOC,GACvBD,EAAQC,OAEL63C,YAAYpH,MA8LrB4L,EAAAz9C,UAAAm/C,gBAAe,eACPT,EAAW9+C,KAAQq+C,iBACnBU,EAAS/+C,KAAQu+C,WACjBM,EAAS7+C,KAAQm+C,eAEjBiC,EAASpgD,KAAQ2+C,WACnBG,IACIsB,KAASpgD,KAASs+C,eAAYt+C,KAC7Bs+C,aAAa8B,GAAS,CACzBhS,YAAa0Q,EAAY1Q,YACzBC,QAASyQ,EAAYzQ,QACrBE,eAAgBuQ,EAAYvQ,eAC5BY,UAAW2P,EAAY3P,UACvB1B,SAAUqR,EAAYrR,SACtBE,WAAYmR,EAAYnR,WACxBW,SAAUwQ,EAAYxQ,gBAItB+R,EAAOrgD,KAAQy+C,SACf4B,KAAOrgD,KAASw+C,aAAUx+C,KACzBw+C,WAAW6B,GAAO,CACrBzW,KAAMmV,EAAUnV,KAChBkW,UAAWf,EAAUe,WAAa5X,GAClCoY,aAAcvB,EAAUuB,cAAgBnY,GACxC5nB,MAAOw+B,EAAUx+B,YAGfggC,EAAOvgD,KAAQ0+C,SACjBG,IACI0B,KAAOvgD,KAASo+C,aAAUp+C,KACzBo+C,WAAWmC,GAAO,CACrBrR,UAAW2P,EAAU3P,cAW7B2O,EAAAz9C,UAAA+/C,WAAU,SAAC5+C,EAAOC,OACVs9C,EAAW9+C,KAAQq+C,iBACnBU,EAAS/+C,KAAQu+C,WAEjB6B,EAASpgD,KAAQ2+C,WACjB0B,EAAOrgD,KAAQy+C,SACf8B,EAAOvgD,KAAQ0+C,cAChBa,sBAEC7b,EAAU1jC,KAAQ0jC,WAClB8c,EAAW7C,GAAWoB,EAAUuB,cAEhCG,EAAOzgD,KAAQg+C,aAAeta,EAC9BuF,EAAIjpC,KAAQwxC,MACZ9D,EAAcoR,EACfA,EAAY3P,UAAYxlC,KAAK8mB,IAAIsuB,EAAUx+B,MAAM,IAAO,EACzD,OAECm3B,aAAap0C,KAAI,CACpBgyC,GAAkBZ,WAClBnzC,EACAC,EACAg/C,EACAzB,EAAUI,SACVoB,EACAxB,EAAU/B,SACVtZ,EACA+c,EACAL,EACA1S,EAAchK,EACduF,EACAoX,EACA,SAEGzI,yBAAyBt0C,KAAI,CAChCgyC,GAAkBZ,WAClBnzC,EACAC,EACAg/C,EACAzB,EAAUI,SACVoB,EACAxB,EAAU/B,SACV,EACAyD,EACAL,EACA1S,EACAzE,EACAoX,EACA,EAAI3c,KAQRma,EAAAz9C,UAAA62C,aAAY,SAACC,EAAW2E,OAClBkD,EAAWF,EAAWC,KACrB5H,OAGGwJ,EAAgBxJ,EAAUlK,UAC3B0T,IAIH7B,EAAS7+C,KAAQm+C,kBAEfU,EAAS,QACJV,eAAiBU,GAExBA,EAAU3P,UAAYpJ,GACpB4a,EAAclS,YAAc3G,MAT9BgX,EAAY,UACPV,eAAiBU,OAYlB8B,EAAkBzJ,EAAU/J,eAC7BwT,IAIH7B,EAAW9+C,KAAQq+C,oBAEjBS,EAAW,QACNT,iBAAmBS,OAEpBxQ,EAAWqS,EAAgBjS,cAC3BH,EAAiBoS,EAAgBhS,oBACjCQ,EAAYwR,EAAgBlS,WAC5Bd,EAAagT,EAAgB7R,gBACnCgQ,EAAYzQ,QAAUsS,EAAgB9R,cAAgB/G,GACtDgX,EAAYxQ,SAAWA,EAAWA,EAAS9/B,QAAUu5B,GACrD+W,EAAYvQ,oBACSrpC,IAAnBqpC,Efrc2B,Eeqc4BA,EACzDuQ,EAAYrR,SAAWkT,EAAgB/R,eAAiB5G,GACxD8W,EAAY3P,eACIjqC,IAAdiqC,Ef9ZsB,Ee8ZuBA,EAC/C2P,EAAYnR,gBACKzoC,IAAfyoC,Ef9buB,Ge8bwBA,EACjDmR,EAAY1Q,YAActI,GACxB6a,EAAgBnS,YAAcvG,SAtBhC6W,EAAc,UACTT,iBAAmBS,EAyB1BC,EAAS/+C,KAAQu+C,eACX3U,EAAOsN,EAAU0J,WAAahZ,GACpCiB,GAAae,OACPiX,EAAY3J,EAAU3T,gBAC5Bwb,EAAUI,SAAWjI,EAAU4J,cAC/B/B,EAAUnV,KAAOA,EACjBmV,EAAU/B,SAAW9F,EAAU6J,cAC/BhC,EAAUE,UAAY/H,EAAU8J,eAChCjC,EAAUe,UAAY5I,EAAU+J,eAChClC,EAAUuB,aACRpJ,EAAUgK,mBAAqB/Y,GACjC4W,EAAUS,eAAiBtI,EAAUiK,oBACrCpC,EAAUU,iBAAmBvI,EAAUkK,sBACvCrC,EAAUxU,QAAU2M,EAAUmK,cAAgBjZ,GAC9C2W,EAAUx+B,WAAsBrb,IAAd27C,EAAuB,CAAI,EAAG,GAAKA,MAE/CS,EAAcpK,EAAUqK,aACxBC,EAActK,EAAUuK,aACxBC,EAAqBxK,EAAU7T,oBAC/Bse,EAAezK,EAAU9T,mBAC1BoO,MAAQ0F,EAAUxF,WAAO,QACzBqM,kBAA+B74C,IAAhBo8C,EAA4B,EAAIA,OAC/CtD,kBAA+B94C,IAAhBs8C,EAA4B,EAAIA,OAC/CvD,yBACoB/4C,IAAvBw8C,GAA2CA,OACxCxD,mBAAiCh5C,IAAjBy8C,EAA6B,EAAIA,OAEjDhD,WAAaG,GACiB,iBAAvBA,EAAY1Q,YAChB0Q,EAAY1Q,YACZ7mC,GAAOu3C,EAAY1Q,cACvB0Q,EAAYzQ,QACZyQ,EAAYvQ,eAAc,IAE1BuQ,EAAY3P,UACZ2P,EAAYrR,SACZqR,EAAYnR,WAAU,IAEtBmR,EAAYxQ,SAAS7gC,OAAI,IACtB,QAEFgxC,SACHM,EAAUnV,KACVmV,EAAUx+B,OACTw+B,EAAUe,WAAS,MACnBf,EAAUuB,cAAY,UACpB5B,SAAWG,EACc,iBAAnBA,EAAU3P,UACf2P,EAAU3P,UAAS,IACb3nC,GAAOs3C,EAAU3P,WAAS,QA/F1BlvC,KACPwxC,MAAK,QAiGPkK,wBAA0BG,GAEnCgC,EAxkBA,CAAgC7B,GAAA90C,SC/B1B06C,GAAkB,QACZC,GAAA36C,gBACC80C,GAAA90C,cACF46C,GAAA56C,mBACK66C,GAAA76C,gBACH26C,GAAA36C,aACH86C,GAAA96C,SAqFV+6C,GAlFA,WAMK,SACHC,EAAYvhC,EAAW02B,EAAWjmC,EAAYsyB,GAIzC1jC,KACEmiD,WAAaxhC,EAKf3gB,KACEoiD,WAAa/K,EAKfr3C,KACEqiD,YAAc3e,EAKhB1jC,KACEsiD,YAAclxC,EAKhBpR,KACEuiD,kBAAiB,UAMxBL,EAAA9hD,UAAAk5C,OAAM,eACEkJ,EAAmB,WACdC,KAAIziD,KAASuiD,kBAAiB,CACvCC,EAAoBC,GAAQD,EAAoBC,IAAI,OAC9CC,EAAQ1iD,KAAQuiD,kBAAkBE,WAC7BE,KAAcD,EAAQ,KACzBE,EAAqBF,EAASC,GAAYrJ,SAChDkJ,EAAoBC,GAAME,GAAcC,UAGrCJ,GAQTN,EAAA9hD,UAAAyiD,WAAU,SAAC1pB,EAAQ2pB,OACXC,OAAuB79C,IAAXi0B,EAAuBA,EAAOP,WAAQ,IACpDoqB,EAAOhjD,KAAQuiD,kBAAkBQ,QACrB79C,IAAZ89C,IACFA,EAAO,QACFT,kBAAkBQ,GAAaC,OAElCC,EAASD,EAAQF,QACN59C,IAAX+9C,IAEFA,EAAM,IAAOC,EADOtB,GAAmBkB,IACf9iD,KACjBmiD,WAAUniD,KACVoiD,WAAUpiD,KACVsiD,YAAWtiD,KACXqiD,aAEPW,EAAQF,GAAeG,UAElBA,GAEXf,EAhFA,ujBCwKAiB,GAlLA,SAAA1/C,GAGK,SACH2/C,EAAYppB,OAAZp2B,EACEH,EAAAI,KAAA7D,OAAAA,YAGA4D,EAAKy/C,wBAA0Bz/C,EAAK0/C,mBAAmB19C,KAAKhC,GAM5DA,EAAK2/C,OAASvpB,EAKdp2B,EAAK4/C,uBAAyB,cAnBNC,GAAAL,EAAA3/C,GA4B1B2/C,EAAAhjD,UAAAw8B,YAAW,SAAChQ,UACHxlB,MASTg8C,EAAAhjD,UAAA68B,aAAY,SAAChR,UACJ7kB,MAUTg8C,EAAAhjD,UAAA88B,YAAW,SAACjR,EAAY9rB,UACfiH,MASTg8C,EAAAhjD,UAAAsjD,mBAAkB,SAACC,EAAOhoB,EAAMioB,GACzBD,EAAMhoB,KACTgoB,EAAMhoB,GAAI,IAEZgoB,EAAMhoB,GAAMioB,EAAKC,UAAUjrB,YAAcgrB,GAa3CR,EAAAhjD,UAAA0jD,uBAAsB,SAAChhD,EAAQqX,EAAYwpC,UAOpC,SACOhoB,EAAMooB,OACR3zC,EAAQpQ,KAAQ0jD,mBAAmB99C,KAAI5F,KAAO2jD,EAAOhoB,UACpD74B,EAAOkhD,kBAAkB7pC,EAAYwhB,EAAMooB,EAAW3zC,IAC7DxK,KAAI5F,OAaVojD,EAAAhjD,UAAA6jD,2BAA0B,SACxB13C,EACA0f,EACAi4B,EACA9zC,EACA+zC,KAcFf,EAAAhjD,UAAAgkD,eAAc,SAACx3B,EAAOX,EAAYi4B,UACzB98C,MAMTg8C,EAAAhjD,UAAAikD,SAAQ,uBACMd,QAOdH,EAAAhjD,UAAAkkD,mBAAkB,aAOlBlB,EAAAhjD,UAAAkjD,mBAAkB,SAAC7+C,GAC2CA,EAAMtE,OACxDu8B,aAAe2F,IAAiBriC,KACnCukD,2BAWTnB,EAAAhjD,UAAAokD,UAAS,SAACnX,OACJoX,EAAapX,EAAM3Q,kBACnB+nB,GAAcpiB,IAAqBoiB,GAAcpiB,IACnDgL,EAAMlpC,iBAAiBqB,EAAgBxF,KAAOqjD,yBAE5CoB,GAAcpiB,KAChBgL,EAAM/N,OACNmlB,EAAapX,EAAM3Q,YAEd+nB,GAAcpiB,IAMvB+gB,EAAAhjD,UAAAmkD,wBAAuB,eACfvqB,EAAKh6B,KAAQqkD,WACfrqB,EAAMK,cAAgBL,EAAMI,kBAAoBmB,IAClDvB,EAAMpzB,WAGZw8C,EAhLA,CAA4Bl6C,EAAAhC,kDCVzB,8dAwCHw9C,GApCA,SAAAjhD,GAOK,SACHkhD,EAAY5kD,EAAM6kD,EAA2B54B,EAAgB64B,OAA7DjhD,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAQV4D,EAAKkhD,sBAAwBF,EAO7BhhD,EAAKqoB,WAAaD,EAQlBpoB,EAAKonC,QAAU6Z,WAhCOE,GAAAJ,EAAAlhD,GAkC1BkhD,EAlCA,CAA0B9kD,6dCgS1BmlD,GA9QA,SAAAvhD,GAGK,SACHwhD,EAAYjrB,OAAZp2B,EACEH,EAAAI,KAAA7D,KAAMg6B,IAAKh6B,YAMX4D,EAAKshD,UAAY,KAMjBthD,EAAKuhD,mBAQLvhD,EAAKwhD,e/EbC,EAAG,EAAG,EAAG,EAAG,EAAG,G+EqBrBxhD,EAAKyhD,gB/ErBC,EAAG,EAAG,EAAG,EAAG,EAAG,G+E6BrBzhD,EAAKkhD,uB/E7BC,EAAG,EAAG,EAAG,EAAG,EAAG,G+EkCrBlhD,EAAKonC,QAAU,KAKfpnC,EAAK0hD,iBAAkB,WAnDOC,GAAAN,EAAAxhD,GA4DhCwhD,EAAA7kD,UAAAolD,aAAY,SAACrlD,EAAQ8L,EAAWgtB,OAE1BisB,EAAWla,EADTya,EAAczlD,KAAQqkD,WAAWzqB,eAGrCz5B,GACoB,KAApBA,EAAO0N,MAAMorB,SACb94B,EAAOs5B,YAAcgsB,KAEfrf,EAASjmC,EAAOulD,6BACAC,oBACpB3a,EAAU5E,EAAOE,WAAU,YAI7B0E,GAC0B,IAAzBA,EAAQ5E,OAAOzzB,OACdq4B,EAAQ5E,OAAOv4B,MAAM5B,YAAcA,OAMvBq5C,uBAETJ,UAAY,UACZla,QAAU,UACVsa,iBAAkB,SAPlBJ,UAAY/kD,OACZ6qC,QAAUA,OACVsa,iBAAkB,SAOfJ,UAAS,EACjBA,EAAYv3C,SAASC,cAAa,QACxB6rB,UAAYgsB,MAClB53C,EAAQq3C,EAAUr3C,MACtBA,EAAM48B,SAAQ,WACd58B,EAAM8E,MAAK,OACX9E,EAAM+E,OAAM,WAENwzB,GADN4E,EAAUjF,MACaK,OACvB8e,EAAUpgB,YAAYsB,IACtBv4B,EAAQu4B,EAAOv4B,OACT48B,SAAQ,WACd58B,EAAM88B,KAAI,IACV98B,EAAM+3C,gBAAe,gBAChBV,UAAYA,OACZla,QAAUA,IAUnBia,EAAA7kD,UAAAylD,cAAa,SAAC7a,EAAS/e,EAAY/d,OAC3B43C,EAAUr1C,GAAWvC,GACrB63C,EAAWv1C,GAAYtC,GACvB83C,EAAcz1C,GAAerC,GAC7B+3C,EAAa31C,GAAcpC,GAEjC5B,GAAe2f,EAAWi6B,2BAA4BJ,GACtDx5C,GAAe2f,EAAWi6B,2BAA4BH,GACtDz5C,GAAe2f,EAAWi6B,2BAA4BF,GACtD15C,GAAe2f,EAAWi6B,2BAA4BD,OAEhDE,EAAQnmD,KAAQ8kD,sBACtBx4C,GAAe65C,EAAUL,GACzBx5C,GAAe65C,EAAUJ,GACzBz5C,GAAe65C,EAAUH,GACzB15C,GAAe65C,EAAUF,GAEzBjb,EAAQK,OACRL,EAAQob,YACRpb,EAAQqb,OAAO18C,KAAK4d,MAAMu+B,EAAQ,IAAKn8C,KAAK4d,MAAMu+B,EAAQ,KAC1D9a,EAAQ0E,OAAO/lC,KAAK4d,MAAMw+B,EAAS,IAAKp8C,KAAK4d,MAAMw+B,EAAS,KAC5D/a,EAAQ0E,OAAO/lC,KAAK4d,MAAMy+B,EAAY,IAAKr8C,KAAK4d,MAAMy+B,EAAY,KAClEhb,EAAQ0E,OAAO/lC,KAAK4d,MAAM0+B,EAAW,IAAKt8C,KAAK4d,MAAM0+B,EAAW,KAChEjb,EAAQsb,QASVrB,EAAA7kD,UAAAmmD,qBAAoB,SAACxmD,EAAMirC,EAAS/e,OAC5B+N,EAAKh6B,KAAQqkD,cACfrqB,EAAM70B,YAAYpF,GAAI,KAClB24B,EAAK,IAAO8tB,GAAAt/C,QAChBnH,EAAIC,KACC8kD,sBACL74B,EACA+e,GAEFhR,EAAMx1B,cAAck0B,KASxBusB,EAAA7kD,UAAAqmD,UAAS,SAACzb,EAAS/e,QACZs6B,qBAAqBjrB,GAA2B0P,EAAS/e,IAQhEg5B,EAAA7kD,UAAAsmD,WAAU,SAAC1b,EAAS/e,QACbs6B,qBAAqBjrB,GAA4B0P,EAAS/e,IAejEg5B,EAAA7kD,UAAAumD,mBAAkB,SAChBx1C,EACAC,EACAC,EACAqyB,EACA/wB,EACAC,EACAg0C,OAEMj6C,EAAMgG,EAAQ,EACd/F,EAAMgG,EAAS,EACf/F,EAAK62B,EAAatyB,EAClBtE,GAAMD,EACNG,GAAOmE,EAAO,GAAKy1C,EACnB35C,GAAOkE,EAAO,UACbzE,GAAgB1M,KAChBolD,cACLz4C,EACAC,EACAC,EACAC,GACCuE,EACDrE,EACAC,IAYJg4C,EAAA7kD,UAAAgkD,eAAc,SAACx3B,EAAOX,EAAYi4B,OAqB5BviD,EApBEklD,EAAcv6C,GAActM,KAC3B8kD,sBACLl4B,EAAMpe,SAEFw8B,EAAOhrC,KAAQgrC,QAGf8b,EADK9mD,KAAQqkD,WACOhwC,eACtByyC,IAOGl4C,GAAmBk4C,EANCx6C,GACvB2f,EAAW86B,2BACXn6B,EAAMpe,UAI6C,OAC5C,aAMHhC,EAAI7C,KAAK4d,MAAMs/B,EAAY,IAC3Bp6C,EAAI9C,KAAK4d,MAAMs/B,EAAY,IAC3BG,EAAYr5C,SAASC,cAAa,UAClCq5C,EAAaD,EAAU1gB,WAAU,MACvC0gB,EAAUr0C,MAAQ,EAClBq0C,EAAUp0C,OAAS,EACnBq0C,EAAWC,UAAU,EAAG,EAAG,EAAG,GAC9BD,EAAWtb,UAAUX,EAAQ5E,OAAQ55B,EAAGC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D9K,EAAOslD,EAAWE,aAAa,EAAG,EAAG,EAAG,GAAGxlD,WACpCylD,SACK,kBAARA,EAAI37C,SAEK47C,WAEN1lD,SAGO,IAAZA,EAAK,GACA,KAEFA,GAEXsjD,EA5QA,CAAkCqC,GAAApgD,SCjBlCqgD,GACQ,SADRA,GAES,UAFTA,GAGO,QAHPA,GAIa,aAJbA,GAKS,UALTA,GAMM,gBCSUC,GACd73C,EACAC,EACApO,EACAqO,EACAo5B,EACAwe,EACAzK,EACAz8B,EACAmnC,EACA9d,EACA1E,EACA7zB,OAEIU,EAAKpC,EAAgBC,GACrBuC,EAAKxC,EAAgBC,EAAS,GAC9BkC,EAAK,EACLI,EAAK,EACLse,EAAgB,EAChBm3B,EAAW,WAENC,IACP91C,EAAKC,EACLG,EAAKC,EAELJ,EAAKpC,EADLC,GAAUC,GAEVsC,EAAKxC,EAAgBC,EAAS,GAC9B+3C,GAAYn3B,EACZA,EAAgB7mB,KAAKqP,MAAMjH,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,OAGpE01C,UACOh4C,EAASpO,EAAMqO,GAAU83C,EAAWn3B,EAAgBi3B,WAEzDr5B,GAAeq5B,EAASE,GAAYn3B,EAClCq3B,EAASxxC,GAAKvE,EAAIC,EAAIqc,GACtB05B,EAASzxC,GAAKnE,EAAIC,EAAIic,GAEtB25B,EAAcn4C,EAASC,EACvBm4C,EAAcL,EACdM,EAAOR,EAASlnC,EAAQmnC,EAAyB9d,EAAMX,EAAM/D,GAC5Dt1B,EAASpO,EAAMqO,GAAU83C,EAAWn3B,EAAgBy3B,GACzDL,QAOEpO,EAJEjvB,EAAOlU,GAAKvE,EAAIC,EADtBqc,GAAe65B,EAAON,GAAYn3B,GAE5BhG,EAAOnU,GAAKnE,EAAIC,EAAIic,MAItB/c,EAAQ,KACJ62C,EAAI,CAAIL,EAAQC,EAAQv9B,EAAMC,GACpChN,GAAO0qC,EAAM,EAAG,EAAG,EAAG72C,EAAU62C,EAAMA,GACtC1O,EAAU0O,EAAK,GAAKA,EAAK,QAEzB1O,EAAUqO,EAASt9B,MA2BjB49B,EAxBEv+C,EAAKD,KAAKC,GACVw+C,EAAM,GACNC,EAAgBN,EAAcl4C,IAAWD,KAG/C4gB,EAAgB,EAChBm3B,EAAWK,EACXj2C,EAAKpC,EAHLC,EAASm4C,GAIT51C,EAAKxC,EAAgBC,EAAS,GAG1By4C,EAAa,CACfT,QAEIU,EAAgB3+C,KAAKoP,MAAM5G,EAAKD,EAAIH,EAAKD,GACzC0nC,IACF8O,GAAiBA,EAAgB,GAAK1+C,EAAKA,OAEvC4C,GAAK+d,EAAOs9B,GAAU,EACtBp7C,GAAK+d,EAAOs9B,GAAU,SAC5BM,EAAO,GAAC,CAAK57C,EAAGC,GAAIw7C,EAAOR,GAAU,EAAGa,EAAerf,GAChDmf,UAIA/mD,EAAI,EAAGuB,EAAKqmC,EAAK7nC,OAAQC,EAAIuB,GAAE,CACtCglD,QACI76C,EAAQpD,KAAKoP,MAAM5G,EAAKD,EAAIH,EAAKD,MACjC0nC,IACFzsC,GAASA,EAAQ,GAAKnD,EAAKA,QAEP1E,IAAlBijD,EAA2B,KACzBzkC,EAAQ3W,EAAQo7C,KACpBzkC,GAASA,EAAQ9Z,GAAK,EAAKA,EAAK8Z,GAAS9Z,EAAK,EAAIA,EAAK,EACnDD,KAAK8mB,IAAI/M,GAASs5B,EAAQ,OACrB,KAGXmL,EAAgBp7C,UAEVw7C,EAASlnD,EACXmnD,EAAa,EACVnnD,EAAIuB,IAAMvB,EAAC,KAEVyF,EAAMyZ,EAAQmnC,EAAyB9d,EAAMX,EADrCuQ,EAAU52C,EAAKvB,EAAI,EAAIA,GAC2B6jC,MAE9Dt1B,EAASC,EAASrO,GAClBmmD,EAAWn3B,EAAgBi3B,EAASe,EAAa1hD,EAAM,EAAC,MAI1D0hD,GAAc1hD,KAEZzF,IAAMknD,OAGJE,EAAQjP,EACVvQ,EAAKyf,UAAU9lD,EAAK2lD,EAAQ3lD,EAAKvB,GACjC4nC,EAAKyf,UAAUH,EAAQlnD,GAErBmL,EAAI6J,GAAKvE,EAAIC,EADnBqc,GAAeq5B,EAASe,EAAa,EAAIb,GAAYn3B,GAE/C/jB,EAAI4J,GAAKnE,EAAIC,EAAIic,GACvBg6B,EAAO9kD,KAAI,CAAEkJ,EAAGC,EAAG+7C,EAAa,EAAGz7C,EAAO07C,IAC1ChB,GAAUe,UAELJ,ECnFN,IACGO,I/EoIIp5C,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,G+EjIjCq5C,GAAE,GAEFC,GAAE,GAEFC,GAAE,GAEFC,GAAE,GAKL,SACMC,GAAgBC,UAChBA,EAAuB,GAAGC,iBAG7BC,GAAQ,IAAOjiB,OACmB,IAEpCx/B,OAAO0hD,aAAa,MAAO,IAAU1hD,OAAO0hD,aAAa,MACzD1hD,OAAO0hD,aAAa,OAAO,IAAU1hD,OAAO0hD,aAAa,OACzD1hD,OAAO0hD,aAAa,OAAO,IAAU1hD,OAAO0hD,aAAa,OACzD1hD,OAAO0hD,aAAa,OAAO,IAAU1hD,OAAO0hD,aAAa,OACzD1hD,OAAO0hD,aAAa,QAAO,IAAU1hD,OAAO0hD,aAAa,QAAO,KASjE,SACMC,GAAoBpgB,EAAMqgB,SACvB,UAALA,GAA0B,QAALA,GAAqBH,GAASI,KAAKtgB,KAC3DqgB,EAAa,UAALA,EAAiB,OAAS,SAE7BtH,GAAAwH,WAAWF,OAwlCpBG,GArlCA,WAMK,SACHC,EAAYt4C,EAAYsyB,EAAYimB,EAAUjS,GAIzC13C,KACE2pD,SAAWA,EAKb3pD,KACE0jC,WAAaA,EAMf1jC,KACEoR,WAAaA,EAKfpR,KACE4pD,WAKF5pD,KACE03C,aAAeA,EAAaA,aAK9B13C,KACEiO,YAAcypC,EAAazpC,YAK7BjO,KACE6pD,iBAAgB,GAKlB7pD,KACE8pD,oBlF7HC,EAAG,EAAG,EAAG,EAAG,EAAG,GkFkIlB9pD,KACE43C,yBAA2BF,EAAaE,yBAK1C53C,KACE+pD,kBAAoB,KAKtB/pD,KACEgqD,cAAgB,EAIlBhqD,KACEo+C,WAAa1G,EAAa0G,YAAU,GAItCp+C,KACEs+C,aAAe5G,EAAa4G,cAAY,GAI1Ct+C,KACEw+C,WAAa9G,EAAa8G,YAAU,GAKtCx+C,KACEiqD,QAAO,GAKTjqD,KACE89C,QAAO,UAUd4L,EAAAtpD,UAAA8pD,YAAW,SAACjhB,EAAMoX,EAASE,EAASH,OAC5Br9C,EAAMkmC,EAAOoX,EAAUE,EAAUH,UAC9BtC,QAAQ/6C,GAAG,OAAA/C,KACN89C,QAAQ/6C,OAEhB+7C,EAAcsB,EAASpgD,KAAQs+C,aAAa8B,GAAa,KACzDvB,EAAY0B,EAAOvgD,KAAQo+C,WAAWmC,GAAW,KACjDxB,EAAS/+C,KAAQw+C,WAAW6B,GAC5B3c,EAAU1jC,KAAQ0jC,WAClBnjB,EAAK,CACTw+B,EAAUx+B,MAAM,GAAKmjB,EACrBqb,EAAUx+B,MAAM,GAAKmjB,GAEjB4lB,EAAQD,GACZpgB,EACA8V,EAAUe,WAAa5X,IAEnBwF,EACJ0S,GAAatB,EAAY3P,UAAY2P,EAAY3P,UAAY,EAEzDgb,EAAQlhB,EAAKz9B,MAAK,MAClB4+C,EAAWD,EAAM/oD,OACjBipD,EAAM,GACN13C,WtBwIwBi3B,EAAMugB,EAAOE,WACvCD,EAAWD,EAAM/oD,OACnBuR,EAAQ,EACHtR,EAAI,EAAGA,EAAI+oD,IAAY/oD,EAAC,KACzBipD,EAAe9gB,GAAiBI,EAAMugB,EAAM9oD,IAClDsR,EAAQhJ,KAAKuG,IAAIyC,EAAO23C,GACxBD,EAAO/mD,KAAKgnD,UAEP33C,EsBhJS43C,CAAkBxL,EAAUnV,KAAMugB,EAAOE,GACjD9iB,EAAawC,GAAkBgV,EAAUnV,MAEzC4gB,EAAc73C,EAAQ+6B,EACtBlC,EAAmB,GAEnBJ,GAAKof,EAAc,GAAKjqC,EAAM,GAC9Bod,GALS4J,EAAa6iB,EAKR1c,GAAentB,EAAM,GAEnCkrB,EAAK,CACT94B,MAAOy4B,EAAI,EAAIzhC,KAAK+Q,MAAM0wB,GAAKzhC,KAAK40B,KAAK6M,GACzCx4B,OAAQ+qB,EAAI,EAAIh0B,KAAK+Q,MAAMijB,GAAKh0B,KAAK40B,KAAKZ,GAC1C6N,oBAAqBA,IAEP,GAAZjrB,EAAM,IAAuB,GAAZA,EAAM,IACzBirB,EAAoBloC,KAAI,QAAUid,GAEpCirB,EAAoBloC,KAAI,OAASy7C,EAAUnV,MACvCwW,KACF5U,EAAoBloC,KAAI,cAAgBw7C,EAAY1Q,aACpD5C,EAAoBloC,KAAI,YAAcoqC,GACtClC,EAAoBloC,KAAI,UAAYw7C,EAAYzQ,SAChD7C,EAAoBloC,KAAI,WAAaw7C,EAAYrR,UACjDjC,EAAoBloC,KAAI,aAAew7C,EAAYnR,aAEnCpjC,GAA0BkgD,kCAAoCC,0BAClEtqD,UAAUgvC,cACpB5D,EAAoBloC,KAAI,cAAc,CAAGw7C,EAAYxQ,WACrD9C,EAAoBloC,KAAI,iBAAmBw7C,EAAYvQ,kBAGvDgS,GACF/U,EAAoBloC,KAAI,YAAcu7C,EAAU3P,WAElD1D,EAAoBloC,KAAI,eAAe,UACvCkoC,EAAoBloC,KAAI,YAAY,cAGhCjC,EAFEspD,EAAY,GAAMrB,EAClB98C,EAAI88C,EAAQkB,EAAcG,EAAYjd,KAExC0S,EAAS,IACN/+C,EAAI,EAAGA,EAAI+oD,IAAY/oD,EAC1BmqC,EAAoBloC,KAAI,aAAa,CACnC6mD,EAAM9oD,GACNmL,EAAIm+C,EAAYN,EAAOhpD,GACvB,IAAOqsC,EAAcnG,GAAclmC,EAAIkmC,OAIzCgZ,EAAO,IACJl/C,EAAI,EAAGA,EAAI+oD,IAAY/oD,EAC1BmqC,EAAoBloC,KAAI,WAAW,CACjC6mD,EAAM9oD,GACNmL,EAAIm+C,EAAYN,EAAOhpD,GACvB,IAAOqsC,EAAcnG,GAAclmC,EAAIkmC,gBAIxCuW,QAAQ/6C,GAAO0oC,EACbA,GAYTie,EAAAtpD,UAAAwqD,sBAAqB,SACnB5f,EACAnJ,EACA8d,EACAC,EACAiL,EACA1Q,EACA2Q,GAEA9f,EAAQob,YACRpb,EAAQqb,OAAOvgD,MAAMklC,EAASnJ,GAC9BmJ,EAAQ0E,OAAO5pC,MAAMklC,EAAS2U,GAC9B3U,EAAQ0E,OAAO5pC,MAAMklC,EAAS4U,GAC9B5U,EAAQ0E,OAAO5pC,MAAMklC,EAAS6f,GAC9B7f,EAAQ0E,OAAO5pC,MAAMklC,EAASnJ,GAC1BsY,SACGyP,WAAqCzP,EAAgB,QACrDlO,MAAMjB,IAET8f,SACGC,gBACH/f,EACyB8f,GAE3B9f,EAAQ2B,WAwBZ+c,EAAAtpD,UAAA4qD,iCAAgC,SAC9BC,EACAC,EACAC,EACAC,EACAz4C,EACAC,EACA8K,EACAC,EACAutB,EACAC,EACA95B,EACAkP,EACA8qC,EACA9gB,EACA+gB,EACArZ,OAyBIhmC,EArBAO,EAAI2+C,GAFRztC,GAAW6C,EAAM,IAGb9T,EAAI2+C,GAFRztC,GAAW4C,EAAM,IAIX6qB,EAAIz4B,EAAQu4B,EAAU+f,EAAaA,EAAa/f,EAAUv4B,EAC1DgrB,EAAI/qB,EAASu4B,EAAU+f,EAAcA,EAAc/f,EAAUv4B,EAC7D24C,EAAOhhB,EAAQ,GAAKa,EAAI7qB,EAAM,GAAKgqB,EAAQ,GAC3CihB,EAAOjhB,EAAQ,GAAK5M,EAAIpd,EAAM,GAAKgqB,EAAQ,GAC3CkhB,EAAOj/C,EAAI+9B,EAAQ,GACnBmhB,EAAOj/C,EAAI89B,EAAQ,UAErB+gB,GAA2B,IAAbj6C,KAChBu3C,GAAG,GAAK6C,EACR1C,GAAG,GAAK0C,EACR7C,GAAG,GAAK8C,EACR7C,GAAG,GAAK6C,EACR7C,GAAG,GAAK4C,EAAOF,EACfzC,GAAG,GAAKD,GAAG,GACXC,GAAG,GAAK4C,EAAOF,EACfzC,GAAG,GAAKD,GAAG,IAII,IAAbz3C,GAYF/E,GAXAL,EAAYS,IlF5WR,EAAG,EAAG,EAAG,EAAG,EAAG,GkF8WjBy+C,EACAC,EACA,EACA,EACA/5C,GACC85C,GACAC,GAGuBxC,IAC1Bt8C,GAAeL,EAAW48C,IAC1Bv8C,GAAeL,EAAW68C,IAC1Bx8C,GAAeL,EAAW88C,IAC1Bv5C,GACE7F,KAAKsG,IAAI24C,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCp/C,KAAKsG,IAAI24C,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCp/C,KAAKuG,IAAI04C,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCp/C,KAAKuG,IAAI04C,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCJ,KAGFn5C,GACE7F,KAAKsG,IAAIw7C,EAAMA,EAAOF,GACtB5hD,KAAKsG,IAAIy7C,EAAMA,EAAOF,GACtB7hD,KAAKuG,IAAIu7C,EAAMA,EAAOF,GACtB5hD,KAAKuG,IAAIw7C,EAAMA,EAAOF,GACtB7C,IAGA0C,IACF7+C,EAAI7C,KAAK4d,MAAM/a,GACfC,EAAI9C,KAAK4d,MAAM9a,KAGfk/C,WAAYn/C,EACZo/C,WAAYn/C,EACZo/C,WAAYzgB,EACZ0gB,WAAYnuB,EACZuN,QAASA,EACTC,QAASA,EACT+d,aAAY,CACVh6C,KAAMy5C,GAAU,GAChBx5C,KAAMw5C,GAAU,GAChBv5C,KAAMu5C,GAAU,GAChBt5C,KAAMs5C,GAAU,GAChBrgD,MAAO2pC,GAET8Z,gBAAiB9/C,EACjBsU,MAAOA,IAeXmpC,EAAAtpD,UAAA4rD,oBAAmB,SACjBhhB,EACAihB,EACAC,EACAC,EACAlzB,EACAkhB,EACA2Q,OAEMQ,KAAgBnR,IAAmB2Q,GAEnCsB,EAAMD,EAAWjD,aACjB9iB,EAAS4E,EAAQ5E,OACjBimB,EAAgBvB,EACjBA,EAAkB,GAAKqB,EAAW5rC,MAAM,GAAM,EAC/C,SAEF6rC,EAAIl9C,KAAOm9C,GAAiBjmB,EAAOzzB,MAAQs5C,GAC3CG,EAAIh9C,KAAOi9C,GAAiB,GAC5BD,EAAIj9C,KAAOk9C,GAAiBjmB,EAAOxzB,OAASq5C,GAC5CG,EAAI/8C,KAAOg9C,GAAiB,IAGxBf,GAAUtrD,KACP4qD,sBACH5f,EACA4d,GACAC,GACAC,GACAC,GACyB5O,EACA2Q,GAG7B/f,GACEC,EACAmhB,EAAWJ,gBACX9yB,EACAizB,EACAC,EAAWjhB,QACXihB,EAAWhhB,QACXghB,EAAWN,WACXM,EAAWL,WACXK,EAAWR,WACXQ,EAAWP,WACXO,EAAW5rC,SAGR,GAOTmpC,EAAAtpD,UAAA6rC,MAAK,SAACjB,WACK4e,WAAU,KACX0C,EAAShgD,GAActM,KAAM8pD,mBAAkB,CAAG,EAAG,IACrDyC,EAAa,IAAGvsD,KAAQ0jC,WAC9BsH,EAAQK,OACRL,EAAQlqB,UAAUwrC,EAAO,GAAKC,EAAYD,EAAO,GAAKC,GACtDvhB,EAAQ1qB,OAAMtgB,KAAMgqD,eAEtBhf,EAAQkB,YACC0d,YACP5e,EAAQY,WASZ8d,EAAAtpD,UAAA2qD,gBAAe,SAAC/f,EAASyO,GACvBzO,EAAqB,YACoCyO,EAAY,GACrEzO,EAAQmE,UAAmCsK,EAAY,GACvDzO,EAAQqD,QAAwCoL,EAAY,GAC5DzO,EAAQyC,SAA0CgM,EAAY,GAC9DzO,EAAQ2C,WAAoC8L,EAAY,GACpDzO,EAAQoE,cACVpE,EAAQuD,eAAwCkL,EAAY,GAC5DzO,EAAQoE,YAA0CqK,EAAY,MAYlEiQ,EAAAtpD,UAAAosD,6BAA4B,SAACvjB,EAAMoX,EAASD,EAAWG,OAC/CxB,EAAS/+C,KAAQw+C,WAAW6B,GAE5B5U,EAAKzrC,KAAQkqD,YAAYjhB,EAAMoX,EAASE,EAASH,GAEjDtB,EAAW9+C,KAAQs+C,aAAa8B,GAChC1c,EAAU1jC,KAAQ0jC,WAClB4lB,EAAQD,GACZpgB,EACA8V,EAAUe,WAAa5X,IAEnBsY,EAAWwB,GAAAwH,WAAWzK,EAAUuB,cAAgBnY,IAChDuF,EACJoR,GAAeA,EAAY3P,UAAY2P,EAAY3P,UAAY,SAU/D1D,MAAOA,EACP/tB,QAPc4rC,GADF7d,EAAM94B,MAAQ+wB,EAAa,EAAIqb,EAAUx+B,MAAM,IAC7B,GAAK,GAAM+oC,GAAS5b,EAQlD/vB,QANC6iC,EAAW/U,EAAM74B,OAAU8wB,EAC5B,GAAK,GAAM8c,GAAY9S,IAuB3Bgc,EAAAtpD,UAAAqsD,SAAQ,SACNzhB,EACAihB,EACAhgD,EACAyrC,EACA2T,EACAqB,EACAC,EACAC,GAE4B,IACxBC,ElF5fqBC,EAAYC,OkF6f5BhD,mBAAqBhoD,EAAOkK,EAASjM,KAAO8pD,oBACnD+C,EAAgB7sD,KAAQ+pD,wBAEdA,oBAAiB/pD,KACpB+pD,kBAAiB,IAExB8C,EAAmBzvC,GAAWpd,KACvBiO,YACL,EAACjO,KACIiO,YAAY7M,OACjB,EACA6K,EAASjM,KACJ+pD,mBlFzgBgB+C,EkF2gBF9sD,KAAM8pD,mBlF3gBQiD,EkF2gBY9gD,ElF1gBnD6gD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,YkF0gBrB/e,EACAtwB,EACFC,EACAqvC,EACAC,EACAC,EACAC,EACA9f,EACApE,EACAoX,EACAD,EACAG,EAqBwDtO,EACtDzlC,EAAGC,EAAG2gD,EApCN/rD,EAAI,EACFuB,EAAK80C,EAAat2C,OACpB+K,EAAI,EAaJkhD,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KACtBC,EAAeztD,KAAQ6pD,iBACvB6D,EAAY1tD,KAAQgqD,cACpB2D,EACJhkD,KAAK4d,MAAgD,KAA1C5d,KAAKoP,OAAO9M,EAAU,GAAIA,EAAU,KAAc,KAEzD8tB,EAAK,CACTiR,QAASA,EACTtH,WAAU1jC,KAAO0jC,WACjBtyB,WAAUpR,KAAOoR,WACjBC,SAAUq8C,GAKNE,EAAS5tD,KACR03C,cAAgBA,GAAY13C,KAAS2pD,SAAW,EAAI,IAGpDtoD,EAAIuB,GAAE,KACL62C,EAAc/B,EAAar2C,UAE/Bo4C,EAAY,SAGPnE,GAAkBjB,eACrBpC,EACEwH,EAAY,GAEd2T,EAAkB3T,EAAY,GACzBxH,EAAQ7sB,mBAGOlgB,IAAlBynD,GACCp6C,GAAWo6C,EAAeS,EAAgB/4C,eAIzChT,EAFFA,EAA2Bo4C,EAAY,GAAM,EAL7Cp4C,EAA2Bo4C,EAAY,cAUtCnE,GAAkBhB,WACjB+Y,EAAcO,SACX3hB,MAAMjB,GACXqiB,EAAc,GAEZC,EAAgBM,IAClB5iB,EAAQ2B,SACR2gB,EAAgB,GAEbD,GAAgBC,IACnBtiB,EAAQob,YACR4G,EAAQ/sC,IACRgtC,EAAQhtC,OAER5e,aAECi0C,GAAkBf,WAEfziC,EAAK+6C,EADX1gD,EAA2BstC,EAAY,IAEjCvnC,EAAK26C,EAAiB1gD,EAAI,GAG1BuC,EAFKm+C,EAAiB1gD,EAAI,GAEhB2F,EACVnD,EAFKk+C,EAAiB1gD,EAAI,GAEhB+F,EACVkE,EAAIzM,KAAKqP,KAAKtK,EAAKA,EAAKC,EAAKA,GACnCq8B,EAAQqb,OAAOv0C,EAAKsE,EAAGlE,GACvB84B,EAAQsE,IAAIx9B,EAAII,EAAIkE,EAAG,EAAG,EAAIzM,KAAKC,IAAI,KACrCvI,aAECi0C,GAAkBd,WACrBxJ,EAAQ2E,cACNtuC,aAECi0C,GAAkBb,OACrBtoC,EAA2BstC,EAAY,GACvCzL,EAAKyL,EAAY,OACX30B,EAEF20B,EAAY,GAEVlI,EAAWkI,EAAY,GACvBj7B,EAA2B,GAAtBi7B,EAAYr4C,OAAcq4C,EAAY,QAAKv0C,EACtD60B,EAAMjV,SAAWA,EACjBiV,EAAMkY,QAAUA,EACV5wC,KAAKosD,IACTA,EAAgBpsD,GAAC,QAEbwsD,EAASJ,EAAgBpsD,GAC3Bmd,EACFA,EAAGquC,EAAkB1gD,EAAG6hC,EAAI,EAAG6f,IAE/BA,EAAO,GAAKhB,EAAiB1gD,GAC7B0hD,EAAO,GAAKhB,EAAiB1gD,EAAI,GACjC0hD,EAAOzsD,OAAS,GAElBmwC,EAASsc,EAAQ9zB,KACf14B,aAECi0C,GAAkBX,WACrBxoC,EAA2BstC,EAAY,GACvCzL,EAA4ByL,EAAY,GACxCpM,EAEIoM,EAAY,GAIhB/7B,EAAiC+7B,EAAY,GAC7C97B,EAAiC87B,EAAY,OACzC7mC,EAAgC6mC,EAAY,GAC1CxgB,EAAiCwgB,EAAY,GAC7CvO,EAAiCuO,EAAY,GAC7CtO,EAAiCsO,EAAY,GAC7C5W,GAAyC4W,EAAY,IACvDpoC,GAAkCooC,EAAY,IAC5Cl5B,GACJk5B,EAAY,IAEV9mC,GAA+B8mC,EAAY,IACzCqU,GAEFrU,EAAY,QAGXpM,GAASoM,EAAYr4C,QAAU,GAAE,CAEpC6nC,EAA8BwQ,EAAY,IAC1C4G,EAAiC5G,EAAY,IAC7C2G,EAAmC3G,EAAY,IAC/C8G,EAAiC9G,EAAY,QACvCsU,GAAe/tD,KAAQwsD,6BAC3BvjB,EACAoX,EACAD,EACAG,GAEFlT,EAAQ0gB,GAAgBtiB,MACxBgO,EAAY,GAAKpM,MACXiU,GAAqC7H,EAAY,IACvD/7B,GAAWqwC,GAAgBrwC,QAAU4jC,IAAWthD,KAAS0jC,WACzD+V,EAAY,GAAK/7B,MACX8jC,GAAqC/H,EAAY,IACvD97B,GAAWowC,GAAgBpwC,QAAU6jC,IAAWxhD,KAAS0jC,WACzD+V,EAAY,GAAK97B,EACjB/K,EAASy6B,EAAMz6B,OACf6mC,EAAY,GAAK7mC,EACjBD,GAAQ06B,EAAM16B,MACd8mC,EAAY,IAAM9mC,OAGhBusC,QAAc,EACdzF,EAAYr4C,OAAS,KACvB89C,GAAwCzF,EAAY,SAGlDlP,QAAO,EAAEiV,QAAc,EAAEC,QAAgB,EACzChG,EAAYr4C,OAAS,IACvBmpC,GAAwCkP,EAAY,IACpD+F,GAAyC/F,EAAY,IACrDgG,GAA2ChG,EAAY,MAEvDlP,GAAUnC,GACVoX,IAAiB,EACjBC,IAAmB,GAGjB5c,IAAkB8qB,EAEpBt8C,IAAYq8C,EACF7qB,IAAmB8qB,IAE7Bt8C,IAAYq8C,WAEVM,GAAa,EACV7hD,EAAI6hC,EAAI7hC,GAAK,OAEhB+yC,IACAA,GAAe8O,MAAgBr7C,GAAK3S,KAAQ0jC,iBAuBxCuqB,GAAI,CACRjjB,EACAihB,EACA5e,EAtBI8e,GAAUnsD,KAAQgrD,iCACtB3d,EAAM16B,MACN06B,EAAMz6B,OACNi6C,EAAiB1gD,GACjB0gD,EAAiB1gD,EAAI,GACrBwG,GACAC,EACA8K,EACAC,EACAutB,EACAC,EACA95B,GACAkP,GACA8qC,EACA9gB,GACAiV,IAAkBC,GAClBxN,GAQAhZ,EACAumB,GAC6B+N,EACzB,KACJ9N,GAC6B+N,EACzB,MAEFU,QAAS,EACTC,QAAiB,KACjBvB,GAAqBkB,GAAsB,KACvCxoD,GAAQ0oC,EAAK7hC,MACd2hD,GAAuBxoD,IAAK,CAE/BwoD,GAAuBxoD,IAAS2oD,eAIlCC,GAAYJ,GAAuBxoD,WAC5BwoD,GAAuBxoD,IAC9B6oD,GAAoBnF,GAAgBkF,IAChCtB,EAAkBxtB,SAAS+uB,IAAiB,SAKhDvB,GACAA,EAAkBxtB,SAAS+sB,GAAWjD,gBAIpCgF,KAEEtB,GACFA,EAAkBrtB,OAAO4uB,SAGtBnC,oBAAoBlmD,MAAK9F,KAAOkuD,KAEnCtB,GACFA,EAAkBrtB,OAAO4sB,GAAWjD,mBAEjC8C,oBAAoBlmD,MAAK9F,KAAOiuD,OAErC5sD,aAECi0C,GAAkBZ,eACfnzC,GAA+Bk4C,EAAY,GAC3Cj4C,GAA6Bi4C,EAAY,GACzC+G,GAAkC/G,EAAY,GAC9C0F,GAAkC1F,EAAY,GACpD8G,EAAiC9G,EAAY,OACvCuD,GAAkCvD,EAAY,GAC9C2U,GAA2C3U,EAAY,GACvDgH,GAAiChH,EAAY,GACnD2G,EAAmC3G,EAAY,OACzC/L,GAAqC+L,EAAY,IACvDxQ,EAA8BwQ,EAAY,IAC1C4G,EAAiC5G,EAAY,QACvC4U,GAAe,CACI5U,EAAY,IACZA,EAAY,KAG/BsF,GAAS/+C,KAAQw+C,WAAW6B,GAC5BzW,GAAOmV,GAAUnV,KACjBiX,GAAS,CACb9B,GAAUx+B,MAAM,GAAK6tC,GACrBrP,GAAUx+B,MAAM,GAAK6tC,IAGnBE,QAAY,EACZ1kB,MAAI5pC,KAASiqD,QACfqE,GAAYtuD,KAAQiqD,QAAQrgB,KAE5B0kB,GAAY,QACPrE,QAAQrgB,IAAQ0kB,QAGjBC,GAAa1jC,GAAiBgiC,EAAkBtrD,GAAOC,GAAK,GAC5DgtD,GACJ7kD,KAAK8mB,IAAIowB,GAAU,IACnB/V,GAAyBlB,GAAMX,EAAMqlB,OACnCnP,IAAYqP,IAAcD,GAAU,KAChCzO,GAAS9/C,KAAQw+C,WAAW6B,GAASP,UAErC2O,GAAQjH,GACZqF,EACAtrD,GACAC,GACA,EACAynC,GANcslB,GAAaC,IAAcxM,GAAAwH,WAAW1J,IAQpD9C,GACArzC,KAAK8mB,IAAIowB,GAAU,IACnB/V,GACAlB,GACA0kB,GACAX,EAA4B,EAAC3tD,KAAQgqD,eAEvC0E,EAAS,GAAMD,GAAK,CAC0B,IACtCxF,GAAsB,GACxB/8C,QAAC,EAAEyiD,QAAE,EAAElG,QAAK,EAAEhd,QAAK,EAAEmjB,QAAI,KACzBxO,EAAS,IACNl0C,GAAI,EAAGyiD,GAAKF,GAAMrtD,OAAQ8K,GAAIyiD,KAAMziD,GAAC,CAExCu8C,IADAmG,GAAOH,GAAMviD,KACuB,GACpCu/B,GAAKzrC,KAAQkqD,YAAYzB,GAAOpI,EAAO,GAAMD,GAC7C1iC,EACyBkxC,GAAK,IAC3B/N,GAAU,GAAK,GAAKnT,GAAcA,IACrC/vB,EACE6iC,GAAW/U,GAAM74B,OACG,GAAlB,GAAM4tC,IAAgB9S,GAAcmT,GAAU,GAC9CA,GAAU,GACZJ,OACI0L,GAAUnsD,KAAQgrD,iCACtBvf,GAAM94B,MACN84B,GAAM74B,OACNg8C,GAAK,GACLA,GAAK,GACLnjB,GAAM94B,MACN84B,GAAM74B,OACN8K,EACAC,EACA,EACA,EACAixC,GAAK,GACLP,IACA,EACAjmB,IACA,EACA6J,MAGA2a,GACAA,EAAkBxtB,SAAS+sB,GAAWjD,cAAY,MAE5CwF,EAERzF,GAAuB3lD,KAAI,CACzB0nC,EACAihB,EACAxgB,GACA0gB,GACA,EACA,KACA,UAIF5L,EAAO,IACJr0C,GAAI,EAAGyiD,GAAKF,GAAMrtD,OAAQ8K,GAAIyiD,KAAMziD,GAAC,CAExCu8C,IADAmG,GAAOH,GAAMviD,KACuB,GACpCu/B,GAAKzrC,KAAQkqD,YAAYzB,GAAOpI,EAASE,EAAO,IAChD7iC,EAAiCkxC,GAAK,GACtCjxC,EAAU6iC,GAAW/U,GAAM74B,OAAS6tC,GAC9B0L,GAAUnsD,KAAQgrD,iCACtBvf,GAAM94B,MACN84B,GAAM74B,OACNg8C,GAAK,GACLA,GAAK,GACLnjB,GAAM94B,MACN84B,GAAM74B,OACN8K,EACAC,EACA,EACA,EACAixC,GAAK,GACLP,IACA,EACAjmB,IACA,EACA6J,MAGA2a,GACAA,EAAkBxtB,SAAS+sB,GAAWjD,cAAY,MAE5CwF,EAERzF,GAAuB3lD,KAAI,CACzB0nC,EACAihB,EACAxgB,GACA0gB,GACA,EACA,KACA,OAIFS,GACFA,EAAkBttB,KAChB2pB,GAAuBl9B,IAAIi9B,aAGtB6F,GAAI,EAAGC,GAAK7F,GAAuB7nD,OAAQytD,GAAIC,KAAMD,GAAC7uD,KACxDgsD,oBAAoBlmD,MAAK9F,KAAOipD,GAAuB4F,QAIhExtD,aAECi0C,GAAkBV,qBACO1vC,IAAxBwnD,EAAiC,KAI7BtE,GAASsE,EAHfza,EACEwH,EAAY,GAE8B2T,MACxChF,GAAM,OACDA,KAGT/mD,aAECi0C,GAAkBT,KACjB+Y,EACFP,SAEKphB,MAAMjB,KAEX3pC,aAECi0C,GAAkBR,oBACrB3oC,EAA2BstC,EAAY,GACvCzL,EAA4ByL,EAAY,GACxCjtC,EAAIqgD,EAAiB1gD,GAGrBghD,GAFA1gD,EAAIogD,EAAiB1gD,EAAI,IAEX,GAAO,GADrB+gD,EAAU1gD,EAAI,GAAO,KAENwgD,GAASG,IAAWF,IACjCjiB,EAAQqb,OAAO75C,EAAGC,GAClBugD,EAAQE,EACRD,EAAQE,GAELhhD,GAAK,EAAGA,EAAI6hC,EAAI7hC,GAAK,EAGxB+gD,GAFA1gD,EAAIqgD,EAAiB1gD,IAEP,GAAO,EACrBghD,GAFA1gD,EAAIogD,EAAiB1gD,EAAI,IAEX,GAAO,EACjBA,GAAK6hC,EAAK,GAAKkf,IAAWF,GAASG,IAAWF,IAChDjiB,EAAQ0E,OAAOljC,EAAGC,GAClBugD,EAAQE,EACRD,EAAQE,KAGV9rD,aAECi0C,GAAkBP,eACrBwY,EAAsB9T,OACjBmQ,WAAanQ,EAAY,GAE1B4T,SACGphB,MAAMjB,GACXqiB,EAAc,EACVC,IACFtiB,EAAQ2B,SACR2gB,EAAgB,IAIpBtiB,EAAQkE,UAEJuK,EAAY,KAEdp4C,aAECi0C,GAAkBN,iBACrBwY,EAAwB/T,EACpB6T,IACFtiB,EAAQ2B,SACR2gB,EAAgB,QAEbvC,gBAAgB/f,EAAkCyO,KACrDp4C,aAECi0C,GAAkBL,OACjB2Y,EACFN,IAEAtiB,EAAQ2B,WAERtrC,kBAGAA,GAIJgsD,GAAWrtD,KACRisC,MAAMjB,GAETsiB,GACFtiB,EAAQ2B,UAaZ+c,EAAAtpD,UAAA2uD,QAAO,SACL/jB,EACAihB,EACAhgD,EACAyhD,EACArC,EACAuB,QAEK5C,cAAgB0D,OAChBjB,SACHzhB,EACAihB,EACAhgD,EAASjM,KACJ03C,aACL2T,OACAnmD,OACAA,EACA0nD,IAcJlD,EAAAtpD,UAAA4uD,oBAAmB,SACjBhkB,EACA/+B,EACAyhD,EACAhB,EACAC,eAEK3C,cAAgB0D,OACTjB,SACVzhB,EACA,EACA/+B,EAASjM,KACJ43C,0BACL,EACA8U,EACAC,IAGNjD,EAnlCA,GCtFMuF,GAAK,CACT1H,GACAA,GACAA,GACAA,GACAA,GACAA,IAGF2H,GAAA,WAYK,SACHC,EACE9X,EACAjmC,EACAsyB,EACAimB,EACAyF,EACAC,GAKGrvD,KACEoiD,WAAa/K,EAKfr3C,KACEsvD,UAAY3F,EAKd3pD,KACEqiD,YAAc3e,EAKhB1jC,KACEsiD,YAAclxC,EAKhBpR,KACEmzC,cAAgBkc,EAKlBrvD,KACEuvD,mBAAkB,GAKpBvvD,KACEwvD,qBAAuB,KAKzBxvD,KACEyvD,wBnF5DC,EAAG,EAAG,EAAG,EAAG,EAAG,QmF8DhBC,iBAAiBN,UAOxBD,EAAA/uD,UAAAkmD,KAAI,SAACtb,EAAS/+B,OACN0jD,EAAc3vD,KAAQ4vD,cAAc3jD,GAC1C++B,EAAQob,YACRpb,EAAQqb,OAAOsJ,EAAe,GAAIA,EAAe,IACjD3kB,EAAQ0E,OAAOigB,EAAe,GAAIA,EAAe,IACjD3kB,EAAQ0E,OAAOigB,EAAe,GAAIA,EAAe,IACjD3kB,EAAQ0E,OAAOigB,EAAe,GAAIA,EAAe,IACjD3kB,EAAQsb,QAQV6I,EAAA/uD,UAAAsvD,iBAAgB,SAACN,WACJj2B,KAAUi2B,EAAe,KAC9BS,EAAS7vD,KAAQuvD,mBAAmBp2B,QACtBj0B,IAAd2qD,IACFA,EAAS,QACJN,mBAAmBp2B,GAAU02B,OAE9BC,EAAsBV,EAAgBj2B,WACjC2pB,KAAegN,EAAmB,KACrCpY,EAAeoY,EAAoBhN,GACzC+M,EAAU/M,GAAW,IAAQ2G,GAAQzpD,KAC9BsiD,YAAWtiD,KACXqiD,YAAWriD,KACXsvD,UACL5X,MAURyX,EAAA/uD,UAAA2vD,aAAY,SAACF,WACA12B,KAAMn5B,KAASuvD,2BAClBS,EAAUhwD,KAAQuvD,mBAAmBp2B,GAClC93B,EAAI,EAAGuB,EAAKitD,EAAUzuD,OAAQC,EAAIuB,IAAMvB,KAC3CwuD,EAAUxuD,KAAM2uD,EAAU,OACrB,SAIN,GAaTb,EAAA/uD,UAAA6jD,2BAA0B,SACxB13C,EACA6E,EACAC,EACA6yC,EACA9zC,EACA6/C,OAGMC,EAA6B,GADnChM,EAAev6C,KAAK4d,MAAM28B,IACa,EACjCj4C,EAAYS,GAAgB1M,KAC3ByvD,uBACLvL,EAAe,GACfA,EAAe,GACf,EAAI9yC,GACJ,EAAKA,GACJC,GACA9E,EAAW,IACXA,EAAW,IAGR06C,GAAUjnD,KAASwvD,qBACrBvI,IAAUjnD,KACPwvD,qBAAuBzpB,GAC1BmqB,EACAA,QAkBAC,EAfEnlB,EAAOhrC,KAAQwvD,qBAGnBxkB,EAAQ5E,OAAOzzB,QAAUu9C,GACzBllB,EAAQ5E,OAAOxzB,SAAWs9C,GAE1BllB,EAAQ5E,OAAOzzB,MAAQu9C,EACvBllB,EAAQ5E,OAAOxzB,OAASs9C,GACdjJ,GACVjc,EAAQkc,UAAU,EAAG,EAAGgJ,EAAaA,QAOZhrD,SAAlBiuC,gBAEP/kC,GADA+hD,GhFhBI5gD,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,GgFiBLhD,GAC5B8B,GACE8hD,EACA/+C,GAAUpR,KAASmzC,cAAgB+Q,GACnCiM,QAMArN,EAFEsN,WAuKyB13C,WACUxT,IAAvCmrD,GAA2B33C,GAAqB,OAC3C23C,GAA2B33C,WAG9BpH,EAAgB,EAAToH,EAAa,EACpB43C,EAAgB53C,EAASA,EACzB63C,EAAS,IAAO1uD,MAAMyuD,EAAgB,GACnCjvD,EAAI,EAAGA,GAAKqX,IAAUrX,EAAC,IAAA,IACrBkc,EAAI,EAAGA,GAAK7E,IAAU6E,EAAC,KACxBizC,EAAanvD,EAAIA,EAAIkc,EAAIA,KAC3BizC,EAAaF,EAAa,UAG1Bp3C,EAAWq3C,EAAUC,GACpBt3C,IACHA,EAAQ,GACRq3C,EAAUC,GAAct3C,GAE1BA,EAAS5V,KAA4C,IAArCoV,EAASrX,GAAKiQ,GAAQoH,EAAS6E,IAAU,GACrDlc,EAAI,GACN6X,EAAS5V,KAA4C,IAArCoV,EAASrX,GAAKiQ,GAAQoH,EAAS6E,IAAU,GAEvDA,EAAI,IACNrE,EAAS5V,KAA4C,IAArCoV,EAASrX,GAAKiQ,GAAQoH,EAAS6E,IAAU,GACrDlc,EAAI,GACN6X,EAAS5V,KAA4C,IAArCoV,EAASrX,GAAKiQ,GAAQoH,EAAS6E,IAAU,YAM3DkzC,EAAU,GACA7tD,GAAPvB,EAAI,EAAQkvD,EAAUnvD,QAAQC,EAAIuB,IAAMvB,EAC3CkvD,EAAUlvD,IACZovD,EAAWntD,KAAIwC,MAAf2qD,EAAmBF,EAAUlvD,WAIjCgvD,GAA2B33C,GAAU+3C,EAC9BA,EA/MWC,CAAmBxM,GAQhC,SACMyM,EAAgB1e,EAASntB,WAC1B8rC,EAAY5lB,EAAQmc,aACxB,EACA,EACA+I,EACAA,GACAvuD,KACOktD,EAAI,EAAGjsD,EAAKwtD,EAAQhvD,OAAQytD,EAAIjsD,EAAIisD,IAAC,GACxC+B,EAAUR,EAAQvB,IAAM,EAAC,KAExBoB,GACAnN,IAAgByE,IACfzE,IAAgByE,KACuB,IAAzC0I,EAAoB1rD,QAAQ0tC,GAAe,KAErC4e,GAAOT,EAAQvB,GAAK,GAAK,EACzBriD,EAAI03C,EAAgB2M,EAAMX,EAC1BzjD,EAAIy3C,GAAiB2M,EAAMX,EAAe,GAC1CY,EAAS1gD,EAAS6hC,EAASntB,EAAUtY,EAAIA,EAAIC,EAAIA,MACnDqkD,EAAM,OACDA,EAGX9lB,EAAQkc,UAAU,EAAG,EAAGgJ,EAAaA,UAOf,IAIxB7uD,EAAGkc,EAAGsyC,EAAWkB,EAAU3I,EAHzB4I,EAAKzuD,OAAO8C,KAAIrF,KAAMuvD,oBAAoBxjC,IAAI4Z,YACpDqrB,EAAGzgC,KAAK1vB,GAGHQ,EAAI2vD,EAAG5vD,OAAS,EAAGC,GAAK,IAAKA,EAAC,KAC3B0hD,EAAYiO,EAAG3vD,GAAGu3B,eACxBi3B,EAAS7vD,KAAQuvD,mBAAmBxM,GAC/BxlC,EAAI0xC,GAAM7tD,OAAS,EAAGmc,GAAK,IAAKA,UAGlBrY,KADjB6rD,EAAWlB,EADX/M,EAAcmM,GAAM1xC,OAGlB6qC,EAAS2I,EAAS/B,oBAChBhkB,EACA/+B,EACAoF,EACAs/C,EACAR,IAEQ,OACD/H,IAYjB+G,EAAA/uD,UAAAwvD,cAAa,SAAC3jD,OACNorC,EAASr3C,KAAQoiD,eAClB/K,EAAS,OACL,SAEHnoC,EAAOmoC,EAAU,GACjBloC,EAAOkoC,EAAU,GACjBjoC,EAAOioC,EAAU,GACjBhoC,EAAOgoC,EAAU,GACjBsY,EAAc,CAAIzgD,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,UAClEiO,GAAYuyC,EAAgB,EAAG,EAAG,EAAG1jD,EAAW0jD,GACzCA,GAMTR,EAAA/uD,UAAA6wD,QAAO,kBACE1tD,EAAOvD,KAAMuvD,qBAatBJ,EAAA/uD,UAAA2uD,QAAO,SACL/jB,EACAihB,EACAhgD,EACAyhD,EACArC,EACA6F,EACAtE,GAE4B,IACtBoE,EAAKzuD,OAAO8C,KAAIrF,KAAMuvD,oBAAoBxjC,IAAI4Z,QACpDqrB,EAAGzgC,KAAK1vB,QAICuhD,aACPpX,EAAQK,YACHib,KAAKtb,EAAS/+B,QAIjB5K,EAAGuB,EAAI2a,EAAG4F,EAAI6/B,EAASC,EADrBkO,EAAeD,GAAsCjC,OAEvDrC,GACFoE,EAAGxX,UAEAn4C,EAAI,EAAGuB,EAAKouD,EAAG5vD,OAAQC,EAAIuB,IAAMvB,EAAC,KAC/B0hD,EAAYiO,EAAG3vD,GAAGu3B,eACxBoqB,EAAOhjD,KAAQuvD,mBAAmBxM,GAC7BxlC,EAAI,EAAG4F,EAAKguC,EAAa/vD,OAAQmc,EAAI4F,IAAM5F,EAAC,MAGhCrY,KADf+9C,EAASD,EADWmO,EAAa5zC,MAG/B0lC,EAAO8L,QACL/jB,EACAihB,EACAhgD,EACAyhD,EACArC,EACAuB,SAMCxK,YACPpX,EAAQY,WAGdujB,EArVA,GA6VMkB,GAA0B,OAoDhCe,GAAelC,GCvafmC,GACa,EADbA,GAEe,ygBCmoCfC,GAnmCA,SAAA7tD,GASK,SACH8tD,EACEvmB,EACAtH,EACAx1B,EACAjC,EACAyhD,EACA8D,EACAC,OAPF7tD,EASEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAK8tD,SAAW1mB,EAMhBpnC,EAAKy+C,YAAc3e,EAMnB9/B,EAAK0P,QAAUpF,EAMftK,EAAK+tD,WAAa1lD,EAMlBrI,EAAKomD,cAAgB0D,EAMrB9pD,EAAKguD,kBAAoBJ,EAMzB5tD,EAAKiuD,eAAiBJ,EAMtB7tD,EAAKkuD,kBAAoB,KAMzBluD,EAAKmuD,oBAAsB,KAM3BnuD,EAAKouD,kBAAoB,KAMzBpuD,EAAKquD,WAAa,KAMlBruD,EAAKsuD,aAAe,KAMpBtuD,EAAK0tC,OAAS,KAMd1tC,EAAKuuD,cAAgB,EAMrBvuD,EAAKwuD,cAAgB,EAMrBxuD,EAAKyuD,aAAe,EAMpBzuD,EAAK0uD,cAAgB,EAMrB1uD,EAAK2uD,cAAgB,EAMrB3uD,EAAK4uD,cAAgB,EAMrB5uD,EAAK6uD,sBAAuB,EAM5B7uD,EAAK8uD,eAAiB,EAMtB9uD,EAAK+uD,YAAW,CAAI,EAAG,GAMvB/uD,EAAKgvD,YAAc,EAMnBhvD,EAAK4tC,MAAK,GAMV5tC,EAAKm6C,aAAe,EAMpBn6C,EAAKo6C,aAAe,EAMpBp6C,EAAKq6C,qBAAsB,EAM3Br6C,EAAKs6C,cAAgB,EAMrBt6C,EAAKivD,WAAU,CAAI,EAAG,GAMtBjvD,EAAKu6C,eAAiB,KAMtBv6C,EAAKy6C,iBAAmB,KAMxBz6C,EAAK26C,WAAa,KAMlB36C,EAAKmmD,kBAAiB,GAMtBnmD,EAAKkvD,oBrFpOC,EAAG,EAAG,EAAG,EAAG,EAAG,YqFKaC,GAAAxB,EAAA9tD,GAyOpC8tD,EAAAnxD,UAAA4yD,YAAW,SAACrjD,EAAiBC,EAAQpO,EAAKqO,WAC9ByhC,YAGJub,EAAmBzvC,GACvBzN,EACAC,EACApO,EACAqO,EAAM7P,KACD2xD,WAAU3xD,KACV+pD,mBAED/e,EAAOhrC,KAAQ0xD,SACfuB,EAAcjzD,KAAQ8yD,mBACtBllB,EAAQ5C,EAAQM,YACI,QAAjBgnB,gBACPtnB,EAAQM,YAAcsC,EAAK5tC,KAAQsyD,mBAEjCjhD,EAAQrR,KAAQ0yD,oBACXD,uBACPphD,GAAQrR,KAASgqD,uBAEV3oD,EAAI,EAAGuB,EAAKiqD,EAAiBzrD,OAAQC,EAAIuB,EAAIvB,GAAK,EAAC,KACpDmL,EAAIqgD,EAAiBxrD,GAACrB,KAASmyD,cAC/B1lD,EAAIogD,EAAiBxrD,EAAI,GAACrB,KAASoyD,iBAE1B,IAAb/gD,GACuB,GADTrR,KACT2yD,YAAY,IACM,GADC3yD,KACnB2yD,YAAY,GAAO,KAElBxH,EAAU3+C,EAACxM,KAAQmyD,cACnB/G,EAAU3+C,EAACzM,KAAQoyD,cACzB1lD,GACEumD,EACA9H,EACAC,EACA,EACA,EACA/5C,GACC85C,GACAC,GAEHpgB,EAAQO,aAAazlC,MAAMklC,EAASioB,GACpCjoB,EAAQlqB,UAAUqqC,EAASC,GAC3BpgB,EAAQzqB,MAAKvgB,KAAM2yD,YAAY,GAAC3yD,KAAQ2yD,YAAY,IACpD3nB,EAAQW,UAAS3rC,KACVsxC,OAAMtxC,KACNuyD,cAAavyD,KACbwyD,cAAaxyD,KACb4yD,YAAW5yD,KACXqyD,cAAYryD,KACXmyD,eAAanyD,KACboyD,cAAapyD,KACd4yD,YAAW5yD,KACXqyD,cAEPrnB,EAAQO,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpCP,EAAQW,UAAS3rC,KACVsxC,OAAMtxC,KACNuyD,cAAavyD,KACbwyD,cAAaxyD,KACb4yD,YAAW5yD,KACXqyD,aACL7lD,EACAC,EAACzM,KACI4yD,YAAW5yD,KACXqyD,cAIe,QAAjBC,gBACPtnB,EAAQM,YAAcsC,KAW1B2jB,EAAAnxD,UAAA8yD,UAAS,SAACvjD,EAAiBC,EAAQpO,EAAKqO,WAC5B0uC,YAAwB,KAAdv+C,KAASwxC,YAGpB2M,gBAAcn+C,KAChBmzD,qBAAoBnzD,KAAMm+C,qBAExBE,kBAAgBr+C,KAClBozD,uBAAsBpzD,KAAMq+C,uBAE9BgV,qBAAoBrzD,KAAMu+C,gBACzBsO,EAAmBzvC,GACvBzN,EACAC,EACApO,EACAqO,EAAM7P,KACD2xD,WAAU3xD,KACV+pD,mBAED/e,EAAOhrC,KAAQ0xD,SACjBrgD,EAAQrR,KAAQk+C,uBACXD,sBACP5sC,GAAQrR,KAASgqD,eAEZp6C,EAASpO,EAAKoO,GAAUC,EAAM,KAC7BrD,EAAIqgD,EAAiBj9C,GAAM5P,KAAS+9C,aACpCtxC,EAAIogD,EAAiBj9C,EAAS,GAAC5P,KAASg+C,gBAE/B,IAAb3sC,GACsB,GADRrR,KACT6yD,WAAW,IACM,GADC7yD,KAClB6yD,WAAW,GAAO,KAEjBI,EAAiBvmD,GAAgB1M,KAChC8yD,mBACLtmD,EACAC,EACA,EACA,EACA4E,GACC7E,GACAC,GAEHu+B,EAAQO,aAAazlC,MAAMklC,EAASioB,GACpCjoB,EAAQlqB,UAAUtU,EAAGC,GACrBu+B,EAAQzqB,MAAKvgB,KAAM6yD,WAAW,GAAC7yD,KAAQ6yD,WAAW,SACzCxU,kBACPrT,EAAQsoB,WAAUtzD,KAAMwxC,MAAO,EAAG,QAE3B2M,gBACPnT,EAAQuoB,SAAQvzD,KAAMwxC,MAAO,EAAG,GAElCxG,EAAQO,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,aAE3B8S,kBACPrT,EAAQsoB,WAAUtzD,KAAMwxC,MAAOhlC,EAAGC,QAE3B0xC,gBACPnT,EAAQuoB,SAAQvzD,KAAMwxC,MAAOhlC,EAAGC,MAexC8kD,EAAAnxD,UAAAozD,cAAa,SAAC7jD,EAAiBC,EAAQpO,EAAKqO,EAAQ4jD,OAC5CzoB,EAAOhrC,KAAQ0xD,SACf7E,EAAmBzvC,GACvBzN,EACAC,EACApO,EACAqO,EAAM7P,KACD2xD,WAAU3xD,KACV+pD,mBAEP/e,EAAQqb,OAAOwG,EAAiB,GAAIA,EAAiB,QACjDzrD,EAASyrD,EAAiBzrD,OAC1BqyD,IACFryD,GAAU,WAEHC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/B2pC,EAAQ0E,OAAOmd,EAAiBxrD,GAAIwrD,EAAiBxrD,EAAI,WAEvDoyD,GACFzoB,EAAQ2E,YAEHnuC,GAWT+vD,EAAAnxD,UAAAszD,WAAU,SAAC/jD,EAAiBC,EAAQsT,EAAMrT,WAC/BxO,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAC1CuO,EAAM5P,KAAQwzD,cACZ7jD,EACAC,EACAsT,EAAK7hB,GACLwO,GACA,UAGGD,GAUT2hD,EAAAnxD,UAAAu1C,WAAU,SAAC7wB,MACJvS,GAAUvS,KAAMsT,QAASwR,EAASzQ,sBAG9B49C,YAAUjyD,KAASkyD,aAAY,MAC7BD,YAAUjyD,KACZmzD,qBAAoBnzD,KAAMiyD,iBAExBC,cAAYlyD,KACdozD,uBAAsBpzD,KAAMkyD,kBAE7BrF,EAAmB7oC,EAAA2vC,gBACvB7uC,EAAQ9kB,KACH2xD,WAAU3xD,KACV+pD,mBAEDr7C,EAAKm+C,EAAiB,GAAKA,EAAiB,GAC5Cl+C,EAAKk+C,EAAiB,GAAKA,EAAiB,GAC5Cn0C,EAAS/O,KAAKqP,KAAKtK,EAAKA,EAAKC,EAAKA,GAClCq8B,EAAOhrC,KAAQ0xD,SACrB1mB,EAAQob,YACRpb,EAAQsE,IACNud,EAAiB,GACjBA,EAAiB,GACjBn0C,EACA,EACA,EAAI/O,KAAKC,SAEFqoD,YACPjnB,EAAQkB,YAEDgmB,cACPlnB,EAAQ2B,SAGE,UAAL6E,OAAKxxC,KACPkzD,UAAUpuC,EAASjB,YAAa,EAAG,EAAG,KAW/C0tC,EAAAnxD,UAAAklB,SAAQ,SAACzX,QACFgpC,mBAAmBhpC,EAAMm/B,UAAWn/B,EAAMs/B,kBAC1C2J,cAAcjpC,EAAM41B,iBACpBwT,aAAappC,EAAM6jC,YAM1B6f,EAAAnxD,UAAAmrC,aAAY,SAACt/B,QACN0lD,WAAa1lD,GAUpBslD,EAAAnxD,UAAAs1C,aAAY,SAAC5wB,UACEA,EAASlE,gBAEfhhB,OACE42C,UACmD1xB,cAGrDllB,OACEo2C,eACwDlxB,cAG1DllB,OACE82C,YACqD5xB,cAGvDllB,OACEw2C,eACwDtxB,cAG1DllB,OACEs2C,oBAEDpxB,cAIDllB,OACE02C,iBAC0DxxB,cAG5DllB,OACEk2C,uBAEDhxB,cAIDllB,OACE+1C,WACoD7wB,KAiB/DysC,EAAAnxD,UAAAy1C,YAAW,SAAC5D,EAASpkC,OACbiX,EAAWjX,EAAM+jC,qBAAN/jC,CAA4BokC,GACxCntB,GAAavS,GAAUvS,KAAMsT,QAASwR,EAASzQ,oBAG/CiR,SAASzX,QACT6nC,aAAa5wB,KASpBysC,EAAAnxD,UAAA01C,uBAAsB,SAAChxB,WACf8uC,EAAa9uC,EAAS+uC,qBACnBxyD,EAAI,EAAGuB,EAAKgxD,EAAWxyD,OAAQC,EAAIuB,IAAMvB,EAACrB,KAC5C01C,aAAake,EAAWvyD,KAUjCkwD,EAAAnxD,UAAAo2C,UAAS,SAAC1xB,QACC8sC,oBACP9sC,EACEA,EAASrF,oBAAmBzf,KACrB4xD,kBAAiB5xD,KACjB6xD,qBAILliD,EAAkBmV,EAASpD,qBAC3B7R,EAASiV,EAASnD,iBACf2vB,QAAMtxC,KACRgzD,YAAYrjD,EAAiB,EAAGA,EAAgBvO,OAAQyO,GAEjD,UAAL2hC,OAAKxxC,KACPkzD,UAAUvjD,EAAiB,EAAGA,EAAgBvO,OAAQyO,IAU/D0hD,EAAAnxD,UAAAg2C,eAAc,SAACtxB,QACJ8sC,oBACP9sC,EACEA,EAASrF,oBAAmBzf,KACrB4xD,kBAAiB5xD,KACjB6xD,qBAILliD,EAAkBmV,EAASpD,qBAC3B7R,EAASiV,EAASnD,iBACf2vB,QAAMtxC,KACRgzD,YAAYrjD,EAAiB,EAAGA,EAAgBvO,OAAQyO,GAEjD,UAAL2hC,OAAKxxC,KACPkzD,UAAUvjD,EAAiB,EAAGA,EAAgBvO,OAAQyO,IAU/D0hD,EAAAnxD,UAAA41C,eAAc,SAAClxB,WACJ8sC,oBACP9sC,EACEA,EAASrF,oBAAmBzf,KACrB4xD,kBAAiB5xD,KACjB6xD,iBAINt/C,GAAUvS,KAAMsT,QAASwR,EAASzQ,sBAG9B69C,aAAY,MACdkB,uBAAsBpzD,KAAMkyD,kBAC3BlnB,EAAOhrC,KAAQ0xD,SACf/hD,EAAkBmV,EAASpD,qBACjCspB,EAAQob,iBACHoN,cACH7jD,EACA,EACAA,EAAgBvO,OAChB0jB,EAASnD,aACT,GAEFqpB,EAAQ2B,YAEI,UAAL6E,MAAK,KACNsiB,EAAehvC,EAAS8G,uBACzBsnC,UAAUY,EAAc,EAAG,EAAG,MAUvCvC,EAAAnxD,UAAA81C,oBAAmB,SAACpxB,QACT8sC,oBACP9sC,EAEIA,EAASrF,oBAAmBzf,KACrB4xD,kBAAiB5xD,KACjB6xD,qBAIPkC,EAAiBjvC,EAASzQ,eAC3B9B,GAAUvS,KAAMsT,QAASygD,YAGrB7B,aAAY,MACdkB,uBAAsBpzD,KAAMkyD,kBAC3BlnB,EAAOhrC,KAAQ0xD,SACf/hD,EAAkBmV,EAASpD,qBAC7B9R,EAAS,EACPsT,EAAqC4B,EAASwJ,UAC9Cze,EAASiV,EAASnD,YACxBqpB,EAAQob,oBACC/kD,EAAI,EAAGuB,EAAKsgB,EAAK9hB,OAAQC,EAAIuB,IAAMvB,EAC1CuO,EAAM5P,KAAQwzD,cACZ7jD,EACAC,EACAsT,EAAK7hB,GACLwO,GACA,GAGJm7B,EAAQ2B,YAEI,UAAL6E,MAAK,KACNwiB,EAAgBlvC,EAAS4J,wBAC1BwkC,UAAUc,EAAe,EAAGA,EAAc5yD,OAAQ,MAU3DmwD,EAAAnxD,UAAAs2C,YAAW,SAAC5xB,WACD8sC,oBACP9sC,EACEA,EAASrF,oBAAmBzf,KACrB4xD,kBAAiB5xD,KACjB6xD,iBAINt/C,GAAUvS,KAAMsT,QAASwR,EAASzQ,sBAG9B69C,cAAYlyD,KAASiyD,WAAU,MAC7BA,YAAUjyD,KACZmzD,qBAAoBnzD,KAAMiyD,iBAExBC,cAAYlyD,KACdozD,uBAAsBpzD,KAAMkyD,kBAE7BlnB,EAAOhrC,KAAQ0xD,SACrB1mB,EAAQob,iBACHsN,WACH5uC,EAAS+M,6BACT,EAC8B/M,EAASwJ,UACvCxJ,EAASnD,kBAEFswC,YACPjnB,EAAQkB,YAEDgmB,cACPlnB,EAAQ2B,YAGE,UAAL6E,MAAK,KACNyiB,EAAoBnvC,EAASgN,4BAC9BohC,UAAUe,EAAmB,EAAG,EAAG,MAS5C1C,EAAAnxD,UAAAk2C,iBAAgB,SAACxxB,WACN8sC,oBACP9sC,EACEA,EAASrF,oBAAmBzf,KACrB4xD,kBAAiB5xD,KACjB6xD,iBAINt/C,GAAUvS,KAAMsT,QAASwR,EAASzQ,sBAG9B69C,cAAYlyD,KAASiyD,WAAU,MAC7BA,YAAUjyD,KACZmzD,qBAAoBnzD,KAAMiyD,iBAExBC,cAAYlyD,KACdozD,uBAAsBpzD,KAAMkyD,kBAE7BlnB,EAAOhrC,KAAQ0xD,SACf/hD,EAAkBmV,EAAS+M,6BAC7BjiB,EAAS,EACPuY,EAAQrD,EAASmP,WACjBpkB,EAASiV,EAASnD,YACxBqpB,EAAQob,oBACC/kD,EAAI,EAAGuB,EAAKulB,EAAM/mB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC6hB,EAAOiF,EAAM9mB,GACnBuO,EAAM5P,KAAQ0zD,WAAW/jD,EAAiBC,EAAQsT,EAAMrT,QAEjDoiD,YACPjnB,EAAQkB,YAEDgmB,cACPlnB,EAAQ2B,YAGE,UAAL6E,MAAK,KACN0iB,EAAqBpvC,EAASoP,6BAC/Bg/B,UAAUgB,EAAoB,EAAGA,EAAmB9yD,OAAQ,MAQrEmwD,EAAAnxD,UAAA+yD,qBAAoB,SAACtU,OACb7T,EAAOhrC,KAAQ0xD,SACfyC,EAAgBn0D,KAAQ8xD,kBACzBqC,EAMCA,EAAiBjlB,WAAa2P,EAAU3P,YAC1CilB,EAAiBjlB,UAAY2P,EAAU3P,UACvClE,EAAQkE,UAAY2P,EAAU3P,YAPhClE,EAAQkE,UAAY2P,EAAU3P,eACzB4iB,kBAAiB,CACpB5iB,UAAW2P,EAAU3P,aAc3BqiB,EAAAnxD,UAAAgzD,uBAAsB,SAACtU,OACf9T,EAAOhrC,KAAQ0xD,SACf0C,EAAkBp0D,KAAQ+xD,oBAC3BqC,GAoBCA,EAAmB/lB,SAAWyQ,EAAYzQ,UAC5C+lB,EAAmB/lB,QAAUyQ,EAAYzQ,QACzCrD,EAAQqD,QAAUyQ,EAAYzQ,SAE5BrD,EAAQoE,cACLrtC,EAAOqyD,EAAmB9lB,SAAUwQ,EAAYxQ,WACnDtD,EAAQoE,YACLglB,EAAmB9lB,SAAWwQ,EAAYxQ,UAG3C8lB,EAAmB7lB,gBAAkBuQ,EAAYvQ,iBACnD6lB,EAAmB7lB,eAAiBuQ,EAAYvQ,eAChDvD,EAAQuD,eAAiBuQ,EAAYvQ,iBAGrC6lB,EAAmB3mB,UAAYqR,EAAYrR,WAC7C2mB,EAAmB3mB,SAAWqR,EAAYrR,SAC1CzC,EAAQyC,SAAWqR,EAAYrR,UAE7B2mB,EAAmBjlB,WAAa2P,EAAY3P,YAC9CilB,EAAmBjlB,UAAY2P,EAAY3P,UAC3CnE,EAAQmE,UAAY2P,EAAY3P,WAE9BilB,EAAmBzmB,YAAcmR,EAAYnR,aAC/CymB,EAAmBzmB,WAAamR,EAAYnR,WAC5C3C,EAAQ2C,WAAamR,EAAYnR,YAE/BymB,EAAmBhmB,aAAe0Q,EAAY1Q,cAChDgmB,EAAmBhmB,YAAc0Q,EAAY1Q,YAC7CpD,EAAQoD,YAAc0Q,EAAY1Q,eAhDpCpD,EAAQqD,QAAUyQ,EAAYzQ,QAC1BrD,EAAQoE,cACVpE,EAAQoE,YAAY0P,EAAYxQ,UAChCtD,EAAQuD,eAAiBuQ,EAAYvQ,gBAEvCvD,EAAQyC,SAAWqR,EAAYrR,SAC/BzC,EAAQmE,UAAY2P,EAAY3P,UAChCnE,EAAQ2C,WAAamR,EAAYnR,WACjC3C,EAAQoD,YAAc0Q,EAAY1Q,iBAC7B2jB,oBAAmB,CACtB1jB,QAASyQ,EAAYzQ,QACrBC,SAAUwQ,EAAYxQ,SACtBC,eAAgBuQ,EAAYvQ,eAC5Bd,SAAUqR,EAAYrR,SACtB0B,UAAW2P,EAAY3P,UACvBxB,WAAYmR,EAAYnR,WACxBS,YAAa0Q,EAAY1Q,eAyC/BmjB,EAAAnxD,UAAAizD,qBAAoB,SAACtU,OACb/T,EAAOhrC,KAAQ0xD,SACf2C,EAAgBr0D,KAAQgyD,kBACxBlS,EAAYf,EAAUe,UACxBf,EAAUe,UACV5X,GACCmsB,GAYCA,EAAiBzqB,MAAQmV,EAAUnV,OACrCyqB,EAAiBzqB,KAAOmV,EAAUnV,KAClCoB,EAAQpB,KAAOmV,EAAUnV,MAEvByqB,EAAiBvU,WAAaA,IAChCuU,EAAiBvU,UAA4CA,EAC7D9U,EAAQ8U,UAA4CA,GAElDuU,EAAiB/T,cAAgBvB,EAAUuB,eAC7C+T,EAAiB/T,aACfvB,EAAUuB,aAEZtV,EAAQsV,aACNvB,EAAUuB,gBAxBdtV,EAAQpB,KAAOmV,EAAUnV,KACzBoB,EAAQ8U,UAA4CA,EACpD9U,EAAQsV,aACNvB,EAAUuB,kBAEP0R,kBAAiB,CACpBpoB,KAAMmV,EAAUnV,KAChBkW,UAAWA,EACXQ,aAAcvB,EAAUuB,gBA6B9BiR,EAAAnxD,UAAAy2C,mBAAkB,SAAC3H,EAAWd,OAA9BxqC,EAAA5D,QACOkvC,OAGGwK,EAAiBxK,EAAUV,gBAC5ByjB,WAAU,CACb/iB,UAAWpJ,GACT4T,GAAkC7R,UAN1B7nC,KACPiyD,WAAa,QASf7jB,OAGGuL,EAAmBvL,EAAYI,WAC/BoL,EAAqBxL,EAAYS,aACjCgL,EAAsBzL,EAAYM,cAClCoL,EAA4B1L,EAAYO,oBACxCoL,EAAsB3L,EAAYQ,cAClCoL,EAAmB5L,EAAYK,WAC/BwL,EAAwB7L,EAAYU,gBACpCR,EAAWuL,GAEb9R,QACCmqB,aAAY,CACf7jB,aACyBnpC,IAAvB00C,EACIA,EACA9R,GACNwG,SACuB,IADftuC,KACDqiD,YACD/T,EACAA,EAASviB,KAAG,SAAE5qB,UAAMA,EAAIyC,EAAKy+C,eACnC9T,gBACGuL,GzB94B0B,GyBg5BF95C,KAASqiD,YACpC5U,cAC0BvoC,IAAxB60C,EACIA,EACA/R,GACNmH,gBACwBjqC,IAArB80C,EACGA,EzB72BkB,GyB82BFh6C,KAASqiD,YAC/B1U,gBAC4BzoC,IAA1B+0C,EACIA,EzB/4BmB,GyBi5BzB7L,YAAatI,GACX6T,GAAsC1R,UAvC5BjoC,KACTkyD,aAAe,MAkDxBX,EAAAnxD,UAAA02C,cAAa,SAACC,OACRud,KACCvd,IAAgBud,EAAYvd,EAAW/S,gBAItCuwB,EAAcxd,EAAWvT,YACzBgxB,EAAczd,EAAWhT,iBAC1BuN,OAASyF,EAAWtT,SAAQzjC,KAAMqiD,kBAClC8P,cAAgBoC,EAAY,GAACv0D,KAASqiD,iBACtC+P,cAAgBmC,EAAY,GAACv0D,KAASqiD,iBACtCgQ,aAAeiC,EAAU,GAACt0D,KAASqiD,iBACnCiQ,cAAgBvb,EAAW7c,kBAC3Bq4B,cAAgBiC,EAAY,QAC5BhC,cAAgBgC,EAAY,QAC5B/B,qBAAuB1b,EAAW1T,yBAClCqvB,eAAiB3b,EAAW3T,mBAC5BuvB,YAAc5b,EAAWxT,qBACzBqvB,YAAc0B,EAAU,GAACt0D,KAASqiD,sBAfhC/Q,OAAS,MAwBlBigB,EAAAnxD,UAAA62C,aAAY,SAACC,MACNA,OAGGwJ,EAAgBxJ,EAAUlK,aAC3B0T,OAGG+T,EAAqB/T,EAAclS,gBACpC2P,eAAc,CACjBjP,UAAWpJ,GACT2uB,GAA0C5sB,UAN9B7nC,KACXm+C,eAAiB,SASlBwC,EAAkBzJ,EAAU/J,eAC7BwT,OAGG+T,EAAuB/T,EAAgBnS,WACvCmmB,EAAyBhU,EAAgB9R,aACzC+lB,EAA0BjU,EAAgBjS,cAC1CmmB,EACJlU,EAAgBhS,oBACZmmB,EAA0BnU,EAAgB/R,cAC1CmmB,EAAuBpU,EAAgBlS,WACvCumB,EAA4BrU,EAAgB7R,qBAC7CuP,iBAAgB,CACnBhQ,aAC6BnpC,IAA3ByvD,EACIA,EACA7sB,GACNwG,SAAUsmB,GAEN7sB,GACJwG,eAAgBsmB,GzBx+BW,EyB2+B3BpnB,cAC8BvoC,IAA5B4vD,EACIA,EACA9sB,GACNmH,eAC2BjqC,IAAzB6vD,EACIA,EzBv8BgB,EyBy8BtBpnB,gBACgCzoC,IAA9B8vD,EACIA,EzBz+BiB,GyB2+BvB5mB,YAAatI,GACX4uB,GAA8CzsB,UAnChCjoC,KACbq+C,iBAAmB,SAsCpB4W,EAAW/d,EAAU0J,UACrBU,EAAcpK,EAAUqK,aACxBC,EAActK,EAAUuK,aACxBC,EAAqBxK,EAAU7T,oBAC/Bse,EAAezK,EAAU9T,cACzByd,EAAY3J,EAAU3T,gBACtB2xB,EAAWhe,EAAUxF,UACrByjB,EAAgBje,EAAU+J,eAC1BmU,EAAmBle,EAAUgK,uBAC9B3C,WAAU,CACb3U,UAAmB1kC,IAAb+vD,EAAyBA,EAAWrtB,GAC1CkY,eACoB56C,IAAlBiwD,EAA8BA,EAAgBjtB,GAChDoY,kBACuBp7C,IAArBkwD,EACIA,EACAjtB,SAEHqJ,WAAqBtsC,IAAbgwD,EAAyBA,EAAQ,QACzCnX,kBACa74C,IAAhBo8C,EAAyBthD,KAAQqiD,YAAcf,EAAc,OAC1DtD,kBACa94C,IAAhBs8C,EAAyBxhD,KAAQqiD,YAAcb,EAAc,OAC1DvD,yBACoB/4C,IAAvBw8C,GAAmCA,OAChCxD,mBAAiCh5C,IAAjBy8C,EAA6BA,EAAe,OAC5DkR,WAAU,MACRxQ,YAAcxB,EAAU,QACxBwB,YAAcxB,EAAU,SAlFnB7gD,KACPwxC,MAAK,IAqFhB+f,EAjmCA,CAAsChc,ICjCtC8f,GAKU,WALVA,GAUQ,sDCVRC,GAKa,cALbA,GAUc,eAVdA,GAeU,WAfVA,GAoBW,iDCpBR,IACHC,GAAA,oBACEC,IAIKx1D,KACEy1D,OAAM,GAKRz1D,KACE01D,WAAa,EAKf11D,KACE21D,cAAgB,UAMvBH,EAAAp1D,UAAAo+B,MAAK,gBACEi3B,OAAM,QACNC,WAAa,GAMpBF,EAAAp1D,UAAAw1D,eAAc,uBACAF,WAAU11D,KAAQ21D,eAMhCH,EAAAp1D,UAAAy1D,OAAM,mBACKD,iBAAc,KACjBv0D,EAAI,UACG0B,KAAG/C,KAASy1D,OAAM,KACrBK,EAAS91D,KAAQy1D,OAAO1yD,GACZ,IAAP,EAAN1B,MAAmBy0D,EAAU3wD,4BACpBswD,OAAO1yD,UACZ2yD,eAYfF,EAAAp1D,UAAAiI,IAAG,SAAC0tD,EAAKC,EAAavxB,OACd1hC,EAAMkzD,GAAOF,EAAKC,EAAavxB,UAC9B1hC,KAAG/C,KAASy1D,OAAMz1D,KAAQy1D,OAAO1yD,GAAO,MASjDyyD,EAAAp1D,UAAA0I,IAAG,SAACitD,EAAKC,EAAavxB,EAAOqxB,OACrB/yD,EAAMkzD,GAAOF,EAAKC,EAAavxB,QAChCgxB,OAAO1yD,GAAO+yD,SACZJ,YAUTF,EAAAp1D,UAAAkoC,QAAO,SAAC4tB,QACDP,cAAgBO,OAChBL,UAETL,EAtFA,GA6FG,SACMS,GAAOF,EAAKC,EAAavxB,UAEzBuxB,EAAW,IAASD,EAAG,KADVtxB,EAAQD,GAASC,GAAK,YAW/B0xB,GAAM,IAAOZ,2jBClB1Ba,GAvFA,SAAA3yD,GAMK,SACH4yD,EAAYnoD,EAAQkD,EAAYsyB,EAAY3J,OAA5Cn2B,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKsK,OAASA,EAMdtK,EAAKy+C,YAAc3e,EAMnB9/B,EAAKwN,WAAaA,EAMlBxN,EAAKm2B,MAAQA,WAhCOu8B,GAAAD,EAAA5yD,GAsCtB4yD,EAAAj2D,UAAAwG,QAAO,gBACApC,cAAcgB,IAMrB6wD,EAAAj2D,UAAAiU,UAAS,uBACKnG,QAOdmoD,EAAAj2D,UAAAqjC,SAAQ,kBACCr8B,MAMTivD,EAAAj2D,UAAAwjC,cAAa,uBACCye,aAMdgU,EAAAj2D,UAAAm2D,cAAa,uBACwBnlD,YAMrCilD,EAAAj2D,UAAAs8B,SAAQ,uBACM3C,OAOds8B,EAAAj2D,UAAAk/B,KAAI,WACFl4B,MAEJivD,EArFA,CAAwBpvD,EAAAC,4eCsJRsvD,GAAYnpB,EAAOopB,EAAaC,OACxCC,EAAuCtpB,KAEzCspB,EAAIZ,KAAOprD,GAAY,KACnBisD,EAAUD,EAAI9rD,SAChBgsD,GAAY,SAIhBD,EACGE,MAAI,WACCD,GACFJ,OAGHM,OAAK,SAAW5rD,GACX0rD,IAIU,kBAAV1rD,EAAMM,MACO,wBAAbN,EAAMI,QAENkrD,IAEAC,QAnBM,WACZG,GAAY,OAyBVG,EAAY,CAChBhxD,EAAW2wD,EAAKnxD,EAAgBixD,GAChCzwD,EAAW2wD,EAAKnxD,EAAiBkxD,sBAGjCM,EAAar7C,QAAQ1V,KAzKzB,SAAAxC,GAQK,SACHwzD,EACE/oD,EACAkD,EACAsyB,EACAqyB,EACAC,EACAkB,OANFtzD,EAQEH,EAAAI,KAAA7D,KAAMkO,EAAQkD,EAAYsyB,EAAYrB,KAAeriC,YAMrD4D,EAAKuzD,KAAOpB,EAMZnyD,EAAK0tC,OAAM,IAAO1mC,MACE,OAAhBorD,IACFpyD,EAAK0tC,OAAO0kB,YAAcA,GAO5BpyD,EAAKwzD,UAAY,KAMjBxzD,EAAKm2B,MAAQsI,GAMbz+B,EAAKyzD,mBAAqBH,IAlDHI,GAAAL,EAAAxzD,GAyDzBwzD,EAAA72D,UAAAqjC,SAAQ,uBACM6N,QAQd2lB,EAAA72D,UAAAm3D,kBAAiB,gBACVx9B,MAAQsI,QACRm1B,sBACA5wD,WAQPqwD,EAAA72D,UAAAq3D,iBAAgB,gBACUvyD,SAAfkM,aAAwBpR,KAC1BoR,WAAaN,GAAS9Q,KAAMkO,QAAMlO,KAASsxC,OAAO1+B,aAEpDmnB,MAAQsI,QACRm1B,sBACA5wD,WASPqwD,EAAA72D,UAAAk/B,KAAI,gBACOvF,OAASsI,IAAeriC,KAAS+5B,OAASsI,UAC5CtI,MAAQsI,QACRz7B,eACAywD,mBAAkBr3D,KAAAA,KAAYm3D,WAC9BC,UAAYZ,GAAWx2D,KACrBsxC,OAAMtxC,KACNy3D,iBAAiB7xD,KAAI5F,MAAAA,KACrBu3D,kBAAkB3xD,KAAI5F,SAQjCi3D,EAAA72D,UAAA0xC,SAAQ,SAACzE,QACFiE,OAASjE,OACTj8B,WAAaN,GAAS9Q,KAAMkO,QAAMlO,KAASsxC,OAAO1+B,QAQzDqkD,EAAA72D,UAAAo3D,eAAc,gBACHJ,iBACFA,iBACAA,UAAY,OAzHvB,CAA2BM,GAAAxwD,ueCbvBywD,GAAqB,KAEzBC,GAAA,SAAAn0D,GAQK,SACHo0D,EAAYxqB,EAAO0oB,EAAKzkD,EAAM0kD,EAAavR,EAAYhgB,OAAvD7gC,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKu3C,mBAAqB,KAM1Bv3C,EAAK0tC,OAAUjE,GAAK,IAAOziC,MAEP,OAAhBorD,IAC+BpyD,EAAW,OAAEoyD,YAAcA,GAO9DpyD,EAAKmoC,QAAO,GAMZnoC,EAAKssC,OAASzL,EAMd7gC,EAAKwzD,UAAY,KAMjBxzD,EAAKk0D,YAAcrT,EAMnB7gD,EAAKipC,MAAQv7B,EAMb1N,EAAKuzD,KAAOpB,EAKZnyD,EAAKm0D,kBAnEeC,GAAAH,EAAAp0D,GA0EtBo0D,EAAAz3D,UAAA63D,WAAU,mBACc/yD,SAAb6yD,UAAsB/3D,KAAS83D,cAAgBz1B,GAAiB,CAClEs1B,KACHA,GAAqB5xB,GAAsB,EAAG,IAEhD4xB,GAAmBhsB,UAAS3rC,KAAMsxC,OAAQ,EAAG,OAE3CqmB,GAAmBxQ,aAAa,EAAG,EAAG,EAAG,QACpC4Q,UAAW,QACT3rD,GACPurD,GAAqB,UAChBI,UAAW,UAGK,SAAbA,UAMdF,EAAAz3D,UAAA83D,qBAAoB,gBACb1zD,cAAcgB,IAMrBqyD,EAAAz3D,UAAAm3D,kBAAiB,gBACVO,YAAcz1B,QACdm1B,sBACAU,wBAMPL,EAAAz3D,UAAAq3D,iBAAgB,gBACTK,YAAcz1B,QACVwK,YACFyE,OAAO3+B,MAAK3S,KAAQ6sC,MAAM,QAC1ByE,OAAO1+B,OAAM5S,KAAQ6sC,MAAM,SAE3BA,MAAK,MAASyE,OAAO3+B,WAAY2+B,OAAO1+B,aAE1C4kD,sBACAU,wBAOPL,EAAAz3D,UAAAqjC,SAAQ,SAACC,eACFy0B,cAAcz0B,QACPqI,QAAQrI,GAAU1jC,KAAS+rC,QAAQrI,GAAU1jC,KAASsxC,QAOpEumB,EAAAz3D,UAAAwjC,cAAa,SAACF,eACPy0B,cAAcz0B,QACPqI,QAAQrI,GAAcA,EAAa,GAMjDm0B,EAAAz3D,UAAAyjC,cAAa,uBACCi0B,aAMdD,EAAAz3D,UAAAujC,qBAAoB,oBACRwX,2BACC8c,aAAU,KACXtlD,EAAK3S,KAAQ6sC,MAAM,GACnBj6B,EAAM5S,KAAQ6sC,MAAM,GACpB7B,EAAUjF,GAAsBpzB,EAAOC,GAC7Co4B,EAAQotB,SAAS,EAAG,EAAGzlD,EAAOC,QACzBuoC,mBAAqBnQ,EAAQ5E,iBAE7B+U,mBAAkBn7C,KAAQsxC,mBAGvB6J,oBAOd0c,EAAAz3D,UAAA4jC,QAAO,uBACO6I,OAMdgrB,EAAAz3D,UAAAi4D,OAAM,uBACQlB,MAMdU,EAAAz3D,UAAAk/B,KAAI,mBACOw4B,aAAez1B,GAAe,MAChCy1B,YAAcz1B,OAEcriC,KAAa,OAAE+1D,IAAG/1D,KAAQm3D,WAClD/qD,QACFmrD,yBAEFH,UAAYkB,GAAAC,YAAWv4D,KACrBsxC,OAAMtxC,KACNy3D,iBAAiB7xD,KAAI5F,MAAAA,KACrBu3D,kBAAkB3xD,KAAI5F,SASjC63D,EAAAz3D,UAAA+3D,cAAa,SAACz0B,WACFwM,SAAMlwC,KAAS+rC,QAAQrI,QAI3B0C,EAASz4B,SAASC,cAAa,eAChCm+B,QAAQrI,GAAc0C,EAE3BA,EAAOzzB,MAAQhJ,KAAK40B,KAAIv+B,KAAMsxC,OAAO3+B,MAAQ+wB,GAC7C0C,EAAOxzB,OAASjJ,KAAK40B,KAAIv+B,KAAMsxC,OAAO1+B,OAAS8wB,OAEzC80B,EAAMpyB,EAAOE,WAAU,SAC7BkyB,EAAIj4C,MAAMmjB,EAAYA,GACtB80B,EAAI7sB,UAAS3rC,KAAMsxC,OAAQ,EAAG,GAE9BknB,EAAIC,yBAAwB,WAII,aAA5BD,EAAIC,0BAAuCz4D,KAASi4D,aACtDO,EAAItpB,UAAY1K,GAAQxkC,KAAMkwC,QAC9BsoB,EAAIJ,SAAS,EAAG,EAAGhyB,EAAOzzB,MAAQ+wB,EAAY0C,EAAOxzB,OAAS8wB,GAE9D80B,EAAIC,yBAAwB,iBAC5BD,EAAI7sB,UAAS3rC,KAAMsxC,OAAQ,EAAG,gBAExBonB,EAAUF,EAAIrR,aAAa,EAAG,EAAG/gB,EAAOzzB,MAAOyzB,EAAOxzB,QACtDjR,EAAO+2D,EAAQ/2D,KACfyU,EAACpW,KAAQkwC,OAAO,GAAK,IACrB7K,EAACrlC,KAAQkwC,OAAO,GAAK,IACrBnvC,EAACf,KAAQkwC,OAAO,GAAK,IACrBpvC,EAACd,KAAQkwC,OAAO,GAEb7uC,EAAI,EAAGuB,EAAKjB,EAAKP,OAAQC,EAAIuB,EAAIvB,GAAK,EAC7CM,EAAKN,IAAM+U,EACXzU,EAAKN,EAAI,IAAMgkC,EACf1jC,EAAKN,EAAI,IAAMN,EACfY,EAAKN,EAAI,IAAMP,EAEjB03D,EAAIG,aAAaD,EAAS,EAAG,MASjCb,EAAAz3D,UAAAo3D,eAAc,gBACHJ,iBACFA,iBACAA,UAAY,OAGvBS,EAjQA,CAAwB5wD,EAAAC,kBA4QR0xD,GAAIvrB,EAAO0oB,EAAKzkD,EAAM0kD,EAAavR,EAAYhgB,OACzDqxB,EAAYK,GAAe9tD,IAAI0tD,EAAKC,EAAavxB,UAChDqxB,IACHA,EAAS,IAAO8B,GAAUvqB,EAAO0oB,EAAKzkD,EAAM0kD,EAAavR,EAAYhgB,GACrE0xB,GAAertD,IAAIitD,EAAKC,EAAavxB,EAAOqxB,IAEvCA,geCiJT+C,GA/XA,SAAAp1D,GAGK,SACHq1D,EAAYliC,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAW,GAKrBqC,OAA8B/zB,IAApB8F,EAAQiuB,QAAwBjuB,EAAQiuB,QAAU,EAK5D5nB,OAAgCnM,IAArB8F,EAAQqG,SAAyBrG,EAAQqG,SAAW,EAK/DkP,OAA0Brb,IAAlB8F,EAAQuV,MAAsBvV,EAAQuV,MAAQ,EAKtDsiB,OACuB39B,IAA3B8F,EAAQ63B,gBAA+B73B,EAAQ63B,gBAEjDj/B,EAAAH,EAAAI,KAAA7D,KAAA,CACEi5B,QAASA,EACT5nB,SAAUA,EACVkP,MAAOA,EACP2iB,kBAC2Bh+B,IAAzB8F,EAAQk4B,aAA6Bl4B,EAAQk4B,aAAY,CAAI,EAAG,GAClEL,eAAgBA,WAOb+J,aAA6B1nC,IAAnB8F,EAAQyS,OAAuBzS,EAAQyS,OAAM,CAAI,GAAK,IAMrE7Z,EAAKm1D,kBAAoB,KAMzBn1D,EAAKo1D,mBACsB9zD,IAAzB8F,EAAQiuD,aACJjuD,EAAQiuD,aACR3D,GAMN1xD,EAAKs1D,mBACsBh0D,IAAzB8F,EAAQmuD,aACJnuD,EAAQmuD,aACR9D,GAMNzxD,EAAKw1D,mBACsBl0D,IAAzB8F,EAAQquD,aACJruD,EAAQquD,aACRhE,GAMNzxD,EAAK01D,kBACqBp0D,IAAxB8F,EAAQgrD,YAA4BhrD,EAAQgrD,YAAc,KAIzD,IACG3oB,OAAwBnoC,IAAhB8F,EAAQ2rD,IAAoB3rD,EAAQ2rD,IAAM,KAKlD4C,OAA8Br0D,IAApB8F,EAAQuuD,QAAwBvuD,EAAQuuD,QAAU,KAK9DxD,EAAM/qD,EAAQ+qD,IAElBpqD,UAAiBzG,IAAR6wD,GAAqB1oB,GAAQ,GACtC1hC,IAAQ0hC,GAAUA,GAASksB,EAAU,QAExBr0D,IAAR6wD,GAAoC,IAAfA,EAAI30D,SAAiBisC,IAC7C0oB,EAAuC1oB,EAAO0oB,KAAOxuD,GAAO8lC,IAE9D1hC,QAAezG,IAAR6wD,GAAqBA,EAAI30D,OAAS,EAAG,GAIzC,IACGqjD,OACYv/C,IAAhB8F,EAAQ+qD,IAAoB1zB,GAAkBA,UAMhDz+B,EAAKssC,YAA2BhrC,IAAlB8F,EAAQy5B,MAAsBoB,GAAQ76B,EAAQy5B,OAAS,KAMrE7gC,EAAK41D,WAAaC,GAAApxD,IAChBglC,EACuB0oB,EACvBwD,EACA31D,EAAK01D,aACL7U,EACA7gD,EAAKssC,QAOPtsC,EAAK81D,aAA6Bx0D,IAAnB8F,EAAQ4E,OAAuB5E,EAAQ4E,OAAM,CAAI,EAAG,GAKnEhM,EAAK+1D,mBACsBz0D,IAAzB8F,EAAQ4uD,aACJ5uD,EAAQ4uD,aACRtE,GAMN1xD,EAAKuoC,QAAU,KAMfvoC,EAAKipC,WAAyB3nC,IAAjB8F,EAAQsG,KAAqBtG,EAAQsG,KAAO,cA3J1CuoD,GAAAf,EAAAr1D,GAmKjBq1D,EAAA14D,UAAAif,MAAK,eACGkB,EAAKvgB,KAAQmjC,sBACR21B,EAAI,CACbr7C,OAAMzd,KAAO4sC,QAAQp+B,QACrByqD,aAAYj5D,KAAOg5D,cACnBG,aAAYn5D,KAAOk5D,cACnBG,aAAYr5D,KAAOo5D,cACnBpD,YAAWh2D,KAAOs5D,aAClB70B,MAAKzkC,KACEkwC,QAAMlwC,KAASkwC,OAAO1hC,MAAKxO,KACvBkwC,OAAO1hC,QAAKxO,KACZkwC,aAAUhrC,EACrB6wD,IAAG/1D,KAAOq4D,SACVzoD,OAAM5P,KAAO05D,QAAQlrD,QACrBorD,aAAY55D,KAAO25D,cACnBroD,KAAqB,OAAjBtR,KAAO6sC,MAAc7sC,KAAQ6sC,MAAMr+B,aAAUtJ,EACjD+zB,QAAOj5B,KAAOk6B,aACd3Z,MAAO1e,MAAMC,QAAQye,GAASA,EAAM/R,QAAU+R,EAC9ClP,SAAQrR,KAAOojC,cACfP,eAAc7iC,KAAOqjC,uBAUzBy1B,EAAA14D,UAAAojC,UAAS,mBACEu1B,kBAAiB,OAAA/4D,KACZ+4D,sBAEVt7C,EAAMzd,KAAQ4sC,QACZt7B,EAAItR,KAAQgkC,kBAEXk1B,eAAiB7D,IAAwBr1D,KACzCo5D,eAAiB/D,GAAwB,KAEzC/jD,EAAI,OACA,KAETmM,EAAMzd,KAAQ4sC,QAAQp+B,aACb0qD,eAAiB7D,KACxB53C,EAAO,IAAMnM,EAAK,SAEX8nD,eAAiB/D,KACxB53C,EAAO,IAAMnM,EAAK,YAIb0nD,eAAiB1D,GAAmB,KACtChkD,EAAI,OACA,KAELmM,IAAMzd,KAAU4sC,UAClBnvB,EAAMzd,KAAQ4sC,QAAQp+B,cAGjBwqD,eAAiB1D,IAAoBt1D,KACrCg5D,eAAiB1D,KAEtB73C,EAAO,IAAMA,EAAO,GAAKnM,EAAK,SAGzB0nD,eAAiB1D,IAAsBt1D,KACvCg5D,eAAiB1D,KAEtB73C,EAAO,IAAMA,EAAO,GAAKnM,EAAK,QAG5B4xB,EAAYljC,KAAQsjC,yBAC1B7lB,EAAO,IAAMylB,EAAa,GAC1BzlB,EAAO,IAAMylB,EAAa,QAErB61B,kBAAoBt7C,OACbs7C,mBAUdD,EAAA14D,UAAA05D,UAAS,SAACr8C,QACHmvB,QAAUnvB,OACVs7C,kBAAoB,MAQ3BD,EAAA14D,UAAAouC,SAAQ,uBACM0B,QASd4oB,EAAA14D,UAAAqjC,SAAQ,SAACC,eACK81B,WAAW/1B,SAASC,IASlCo1B,EAAA14D,UAAAwjC,cAAa,SAACF,eACA81B,WAAW51B,cAAcF,IAMvCo1B,EAAA14D,UAAA0jC,aAAY,uBACE01B,WAAWx1B,WAMzB80B,EAAA14D,UAAAyjC,cAAa,uBACC21B,WAAW31B,iBAMzBi1B,EAAA14D,UAAAujC,qBAAoB,uBACN61B,WAAW71B,wBAQzBm1B,EAAA14D,UAAA2jC,UAAS,mBACEoI,QAAO,OAAAnsC,KACFmsC,YAEVv8B,EAAM5P,KAAQ05D,gBAETC,eAAiBrE,GAAmB,KACrChkD,EAAItR,KAAQgkC,UACZ+1B,EAAa/5D,KAAQw5D,WAAWx1B,cACjC1yB,IAASyoD,EAAa,OAClB,KAETnqD,EAASA,EAAOpB,aAETmrD,eAAiBrE,IAAoBt1D,KACrC25D,eAAiBrE,KAEtB1lD,EAAO,GAAKmqD,EAAc,GAAKzoD,EAAK,GAAK1B,EAAO,SAG3C+pD,eAAiBrE,IAAsBt1D,KACvC25D,eAAiBrE,KAEtB1lD,EAAO,GAAKmqD,EAAc,GAAKzoD,EAAK,GAAK1B,EAAO,gBAG/Cu8B,QAAUv8B,OACHu8B,SAQd2sB,EAAA14D,UAAAi4D,OAAM,uBACQmB,WAAWnB,UAQzBS,EAAA14D,UAAA4jC,QAAO,uBACQ6I,MAA+B7sC,KAAU6sC,MAApC7sC,KAAQw5D,WAAWx1B,WAMvC80B,EAAA14D,UAAAgkC,kBAAiB,SAAChgC,QACXo1D,WAAWr1D,iBAAiBqB,EAAkBpB,IAUrD00D,EAAA14D,UAAAk/B,KAAI,gBACGk6B,WAAWl6B,QAMlBw5B,EAAA14D,UAAAikC,oBAAmB,SAACjgC,QACbo1D,WAAWx0D,oBAAoBQ,EAAkBpB,IAE1D00D,EA7XA,CAAmBr2B,ICxCNu3B,GAAwB,GCQlC,IASGC,GAAkB,OAiUrB,SAEDC,EACAp1C,EACAjX,EACAokC,EACAkoB,OAKIrM,EAHE/W,EAAalpC,EAAM41B,WACnByT,EAAYrpC,EAAM6jC,UAGpByoB,IACFD,EAAeC,EACfrM,EACE/W,GAAcG,GAAaA,EAAUxF,UAAO,QAAUxsC,MAEtD6xC,EAAU,IACRA,EAAWlT,iBAAmBxB,GAAiB,WAG7C+3B,EAAcF,EAAarX,WAC/Bh1C,EAAMuW,YACNmjC,IAEF6S,EAAYtjB,cAAcC,EAAY+W,GACtCsM,EAAY5jB,UAAU1xB,EAAUmtB,MAE9BiF,GAAaA,EAAUxF,UAAO,KAC1B2oB,EAAaH,EAAarX,WAC9Bh1C,EAAMuW,YACNmjC,IAEF8S,EAAWpjB,aAAaC,EAAW4W,GACnCuM,EAAWzjB,SAAS9xB,EAAUmtB,gBAzI/B,SAEDioB,EACAp1C,EACAjX,EACAokC,EACAkoB,OAEM/rB,EAAcvgC,EAAMs/B,eACtBiB,EAAW,KACPksB,EAAmBJ,EAAarX,WACpCh1C,EAAMuW,YACNmjC,IAEF+S,EAAiBzjB,mBAAmB,KAAMzI,GAC1CksB,EAAiBtkB,eAAelxB,EAAUmtB,OAEtCiF,EAAYrpC,EAAM6jC,aACpBwF,GAAaA,EAAUxF,UAAO,KAC1B2oB,GAAcF,GAA6BD,GAAcrX,WAC7Dh1C,EAAMuW,YACNmjC,IAEF8S,EAAWpjB,aAAaC,GACxBmjB,EAAWzjB,SAAS9xB,EAAUmtB,aAuK/B,SAEDioB,EACAp1C,EACAjX,EACAokC,EACAkoB,OAEMjrB,EAAYrhC,EAAMm/B,UAClBoB,EAAcvgC,EAAMs/B,eACtB+B,GAAad,EAAW,KACpBmsB,EAAgBL,EAAarX,WACjCh1C,EAAMuW,YACNmjC,IAEFgT,EAAc1jB,mBAAmB3H,EAAWd,GAC5CmsB,EAAc7jB,YAAY5xB,EAAUmtB,OAEhCiF,EAAYrpC,EAAM6jC,aACpBwF,GAAaA,EAAUxF,UAAO,KAC1B2oB,GAAcF,GAA6BD,GAAcrX,WAC7Dh1C,EAAMuW,YACNmjC,IAEF8S,EAAWpjB,aAAaC,GACxBmjB,EAAWzjB,SAAS9xB,EAAUmtB,gBArE/B,SAEDioB,EACAp1C,EACAjX,EACAokC,EACAkoB,OAKIrM,EAHE/W,EAAalpC,EAAM41B,WACnByT,EAAYrpC,EAAM6jC,UAGpByoB,IACFD,EAAeC,EACfrM,EACE/W,GAAcG,GAAaA,EAAUxF,UAAO,QAAUxsC,MAEtD6xC,EAAU,IACRA,EAAWlT,iBAAmBxB,GAAiB,WAG7C+3B,EAAcF,EAAarX,WAC/Bh1C,EAAMuW,YACNmjC,IAEF6S,EAAYtjB,cAAcC,EAAY+W,GACtCsM,EAAYhkB,eAAetxB,EAAUmtB,MAEnCiF,GAAaA,EAAUxF,UAAO,KAC1B2oB,GAAcF,GAA6BD,GAAcrX,WAC7Dh1C,EAAMuW,YACNmjC,IAEF8S,EAAWpjB,aAAaC,EAAW4W,GACnCuM,EAAWzjB,SAAS9xB,EAAUmtB,qBAnJ/B,SAEDioB,EACAp1C,EACAjX,EACAokC,EACAkoB,OAEM/rB,EAAcvgC,EAAMs/B,eACtBiB,EAAW,KACPksB,EAAmBJ,EAAarX,WACpCh1C,EAAMuW,YACNmjC,IAEF+S,EAAiBzjB,mBAAmB,KAAMzI,GAC1CksB,EAAiBpkB,oBAAoBpxB,EAAUmtB,OAE3CiF,EAAYrpC,EAAM6jC,aACpBwF,GAAaA,EAAUxF,UAAO,KAC1B2oB,GAAcF,GAA6BD,GAAcrX,WAC7Dh1C,EAAMuW,YACNmjC,IAEF8S,EAAWpjB,aAAaC,GACxBmjB,EAAWzjB,SAAS9xB,EAAUmtB,kBAU/B,SAEDioB,EACAp1C,EACAjX,EACAokC,EACAkoB,OAEMjrB,EAAYrhC,EAAMm/B,UAClBoB,EAAcvgC,EAAMs/B,eACtBiB,GAAec,EAAS,KACpBqrB,EAAgBL,EAAarX,WACjCh1C,EAAMuW,YACNmjC,IAEFgT,EAAc1jB,mBAAmB3H,EAAWd,GAC5CmsB,EAAcjkB,iBAAiBxxB,EAAUmtB,OAErCiF,EAAYrpC,EAAM6jC,aACpBwF,GAAaA,EAAUxF,UAAO,KAC1B2oB,GAAcF,GAA6BD,GAAcrX,WAC7Dh1C,EAAMuW,YACNmjC,IAEF8S,EAAWpjB,aAAaC,GACxBmjB,EAAWzjB,SAAS9xB,EAAUmtB,wBAzH/B,SAEDuoB,EACA11C,EACAjX,EACAokC,EACAkoB,OAGI94D,EAAGuB,EADDgxD,EAAa9uC,EAAS+uC,yBAEvBxyD,EAAI,EAAGuB,EAAKgxD,EAAWxyD,OAAQC,EAAIuB,IAAMvB,EAAC,EAE7Co5D,EADyBR,GAAmBrG,EAAWvyD,GAAGuf,YAExD45C,EACA5G,EAAWvyD,GACXwM,EACAokC,EACAkoB,YAlKH,SAEDD,EACAp1C,EACAjX,EACAokC,EACAkoB,OAEMjrB,EAAYrhC,EAAMm/B,UAClBoB,EAAcvgC,EAAMs/B,eACtB+B,GAAad,EAAW,KACpBssB,EAAeR,EAAarX,WAChCh1C,EAAMuW,YACNmjC,IAEFmT,EAAa7jB,mBAAmB3H,EAAWd,GAC3CssB,EAAa/kB,WAAW7wB,EAAUmtB,OAE9BiF,EAAYrpC,EAAM6jC,aACpBwF,GAAaA,EAAUxF,UAAO,KAC1B2oB,GAAcF,GAA6BD,GAAcrX,WAC7Dh1C,EAAMuW,YACNmjC,IAEF8S,EAAWpjB,aAAaC,GACxBmjB,EAAWzjB,SAAS9xB,EAAUmtB,eAtDlB0oB,GAAaC,EAAUC,UAC9Br1B,SAASj+B,GAAOqzD,GAAW,IAAMp1B,SAASj+B,GAAOszD,GAAW,aAkBrDC,GAAa1pD,EAAYsyB,SA3Cd,GA4CItyB,EAAcsyB,WAgD7Bq3B,GACdP,EACAvoB,EACApkC,EACAqR,EACA9a,EACA+a,EACAg7C,OAEIa,GAAU,EACRjkB,EAAalpC,EAAM41B,cACrBsT,EAAU,KACR0N,EAAa1N,EAAWlT,gBACxB4gB,GAAcpiB,IAAqBoiB,GAAcpiB,GACnD0U,EAAW1S,oBAAoBjgC,IAE3BqgD,GAAcpiB,IAChB0U,EAAWzX,OAEbmlB,EAAa1N,EAAWlT,gBACxBkT,EAAW3S,kBAAkBhgC,GAC7B42D,GAAU,UAsBb,SAEDR,EACAvoB,EACApkC,EACAqR,EACAC,EACAg7C,OAEMr1C,EAAWjX,EAAM+jC,qBAAN/jC,CAA4BokC,OACxCntB,EAAQ,WAGP3C,EAAqB2C,EAASrF,oBAClCP,EACAC,MAEetR,EAAMmvB,cAErBi+B,GAAeT,EAAar4C,EAAoBtU,EAAOokC,SAGvDwoB,EADyBR,GAAmB93C,EAAmBvB,YAE7D45C,EACAr4C,EACAtU,EACAokC,EACAkoB,IA9CJe,CACEV,EACAvoB,EACApkC,EACAqR,EACAC,EACAg7C,GAGKa,EA+CN,SACMC,GAAeT,EAAa11C,EAAUjX,EAAOokC,MAChDntB,EAASlE,WAAahhB,EAUX46D,EAAY3X,WAAWh1C,EAAMuW,YAAamjC,IAClD9R,WACuD3wB,EAC5DmtB,EACApkC,EAAMmvB,4BAbA42B,EAEF9uC,EACAq2C,gBACK95D,EAAI,EAAGuB,EAAKgxD,EAAWxyD,OAAQC,EAAIuB,IAAMvB,EAChD45D,GAAeT,EAAa5G,EAAWvyD,GAAIwM,EAAOokC,ieCikBxDmpB,GA5tBA,SAAA33D,GAGK,SACH43D,EAAYC,OAAZ13D,EACEH,EAAAI,KAAA7D,KAAMs7D,IAAWt7D,YAGjB4D,EAAK23D,6BAA+B33D,EAAK43D,wBAAwB51D,KAAKhC,GAKtEA,EAAK63D,wBAML73D,EAAK83D,QAAS,EAKd93D,EAAK+3D,uBAAyB,KAK9B/3D,EAAKg4D,kBAAoB,KAMzBh4D,EAAKi4D,mBAAoB,EAMzBj4D,EAAKk4D,oBAAsB77C,IAM3Brc,EAAKm4D,iB5FqGCxsD,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,G4F/FnC3L,EAAKo4D,wB5F+FCzsD,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,G4FzFnC3L,EAAKq4D,kBAMLr4D,EAAKs4D,gBAAkB,KAMvBt4D,EAAKu4D,oBAAsB,KAM3Bv4D,EAAKw4D,qBAAuB,KAM5Bx4D,EAAKy4D,aAAe,KAMpBz4D,EAAK04D,oBAAqB,EAK1B14D,EAAK4/C,uBAAyB,KAM9B5/C,EAAK24D,UAAW,WApGoBC,GAAAnB,EAAA53D,GA6GtC43D,EAAAj7D,UAAAolD,aAAY,SAACrlD,EAAQ8L,EAAWgtB,GAC1BA,EAAU,IACZ94B,EAAS,MAEXsD,EAAArD,UAAMolD,aAAY3hD,KAAA7D,KAACG,EAAQ8L,EAAWgtB,IAQxCoiC,EAAAj7D,UAAAq8D,aAAY,SAACC,EAAezwC,EAAY2gC,OAChC1+C,EAAS+d,EAAW/d,OACpBwtB,EAAYzP,EAAWyP,UACvBvqB,EAASuqB,EAAUvqB,OACnBC,EAAasqB,EAAUtqB,WACvB+I,EAAauhB,EAAUvhB,WACvB9I,EAAWqqB,EAAUrqB,SACrBmJ,EAAmBL,EAAW9F,YAC9BsoD,EAAY38D,KAAQqkD,WAAW5nB,YAC/BiH,EAAazX,EAAWyX,WACxBk5B,EAAY3wC,EAAW2wC,UACvBvR,IACJuR,EAAUvL,KAAuBuL,EAAUvL,KAEvCrmB,EAAOhrC,KAAQgrC,QACfr4B,EAAQhJ,KAAK4d,MAAM0E,EAAW3a,KAAK,GAAKoyB,GACxC9wB,EAASjJ,KAAK4d,MAAM0E,EAAW3a,KAAK,GAAKoyB,GAEzCm5B,EAAaF,EAAaG,YAAc3iD,EAAWhG,WACnDiG,EAAayiD,EAAahsD,GAAS2J,GAAoB,KACvDuiD,EAAWF,EACblzD,KAAK40B,MAAMrwB,EAAO,GAAKsM,EAAiB,IAAMJ,GAAc,EAC5D,EACA4iD,EAAQH,EACRlzD,KAAK+Q,OAAOxM,EAAO,GAAKsM,EAAiB,IAAMJ,GAC/C,SAEInO,EAASjM,KAAQ2mD,mBACrBx1C,EACAC,EACAC,EACAqyB,EACA/wB,EACAC,EACAoqD,EAAQ5iD,GAEVsiD,EAAc3N,QACZ/jB,EACA,EACA/+B,EACAoF,EACAg6C,OACAnmD,EACA0nD,WAEOoQ,EAAQD,IAOrB1B,EAAAj7D,UAAAwzC,gBAAe,SAAC3nB,QACLu3B,wBAAsBxjD,KACxBy8D,aAAYz8D,KACVwjD,uBACLv3B,EACAA,EAAW4nB,gBAWjBwnB,EAAAj7D,UAAA88B,YAAW,SAACjR,EAAY9rB,OAChBujC,EAAazX,EAAWyX,WACxBjI,EAAaxP,EAAWkR,iBAAiBlR,EAAWgxC,sB/F3EpC98D,EAAQqM,EAAGC,GAC5BT,GAAI7L,EAAQqM,EAAG,EAAG,EAAGC,EAAG,EAAG,G+F6EhCywD,CAASl9D,KAAMqlD,eAAgB,EAAI3hB,EAAY,EAAIA,GACnDt2B,GAAWpN,KAAM8kD,sBAAqB9kD,KAAOqlD,oBAEvC0G,EAAkBx+C,GAAiBvN,KAAMqlD,qBAE1CG,aAAarlD,EAAQ4rD,EAAiBtwB,EAAWxC,aAChD+R,EAAOhrC,KAAQgrC,QACf5E,EAAS4E,EAAQ5E,OAEjBo0B,EAAWx6D,KAAQq8D,aACnB7Y,EAAsBxjD,KAAQwjD,4BAEhCgX,GAAeA,EAAYvJ,cAC3BzN,GAA0BA,EAAuByN,uBAEzC3L,iBAAmBlf,EAAOzzB,MAAQ,IAC1CyzB,EAAOzzB,MAAQ,QAELuyC,cAIRvyC,EAAQhJ,KAAK4d,MAAM0E,EAAW3a,KAAK,GAAKoyB,GACxC9wB,EAASjJ,KAAK4d,MAAM0E,EAAW3a,KAAK,GAAKoyB,GAC3C0C,EAAOzzB,OAASA,GAASyzB,EAAOxzB,QAAUA,GAC5CwzB,EAAOzzB,MAAQA,EACfyzB,EAAOxzB,OAASA,EACZwzB,EAAOv4B,MAAM5B,YAAc8/C,IAC7B3lB,EAAOv4B,MAAM5B,UAAY8/C,SAEZzG,iBACfta,EAAQkc,UAAU,EAAG,EAAGv0C,EAAOC,QAG5B6zC,UAAUzb,EAAS/e,OAElByP,EAAYzP,EAAWyP,UACvBvhB,EAAauhB,EAAUvhB,WAGzBgjD,GAAU,EACVhhC,GAAS,KACTV,EAAWvtB,QAAMlO,KAASu8D,SAAQ,KAC9BzV,EAAc3pC,GAAese,EAAWvtB,OAAQiM,IAEtDgjD,GADAhhC,EAAS5pB,GAAiBu0C,EAAa76B,EAAW/d,WAC7BY,GAAeg4C,EAAa76B,EAAW/d,UACjDlO,KACJ6lD,cAAc7a,EAAS/e,EAAY66B,GAIxC3qB,GAAMn8B,KACHy8D,aAAajC,EAAavuC,GAG7BkxC,GACFnyB,EAAQY,eAGL8a,WAAW1b,EAAS/e,OAEnBgN,EAAUwC,EAAWxC,QACrBisB,EAASllD,KAAQklD,iBACnBjsB,IAAYmkC,WAAWlY,EAAUr3C,MAAMorB,WACzCisB,EAAUr3C,MAAMorB,QAAsB,IAAZA,EAAa,GAAQvxB,OAAOuxB,SAG/CgjC,oBAAsBvgC,EAAUrqB,gBAClC4qD,kBAAoBvgC,EAAUrqB,cAC9BsqD,uBAAyB,WAEpBzW,WAQdmW,EAAAj7D,UAAAw8B,YAAW,SAAChQ,cACCiQ,QAIN,SACOC,YACE6+B,yBAAsB37D,KAAUy7D,wBAAuB,KACzDnqD,EAAI,MAAS05B,QAAQ5E,OAAOzzB,WAAYq4B,QAAQ5E,OAAOxzB,QAC7DtG,GAAKtM,KAAMqlD,eAAgB/zC,OACrBH,EAAMnR,KAAQk8D,gBACd9qD,EAAUpR,KAAQ87D,oBAClBzqD,EAAQrR,KAAQi8D,kBAChB9hD,EAAUna,KAAQm8D,oBAClBjuD,EAAMlO,KAAQg8D,uBACdhiC,EAAKh6B,KAAQqkD,WACbgZ,EAAU,GACV1qD,EAAQrB,EAAK,GAAK0oD,GAClBpnD,EAAStB,EAAK,GAAK0oD,GACzBqD,EAAW/5D,KAAItD,KACR2mD,mBACHx1C,EACAC,EACAC,EACA2oD,GACArnD,EACAC,EACA,GACApE,aAEE1L,EAASk3B,EAAMyC,YACfjiB,EAAmBL,EAAW9F,eAElCvR,EAAOg6D,YACP3iD,EAAWhG,aACVrF,GAAe0L,EAAkBtM,GAAM,SAEpCmc,EAASnc,EAAO,GACdkM,EAAavJ,GAAS2J,GACxBwiD,EAAQ,EACRpW,OAAO,EACJv8B,EAAS7P,EAAiB,IAE/BosC,EAAUxsC,IADR4iD,EAEFK,EAAW/5D,KAAItD,KACR2mD,mBACHx1C,EACAC,EACAC,EACA2oD,GACArnD,EACAC,EACAg0C,GACAp4C,SAEJ6b,GAAUjQ,MAEZ4iD,EAAQ,EACR3yC,EAASnc,EAAO,GACTmc,EAAS7P,EAAiB,IAE/BosC,EAAUxsC,IADR4iD,EAEFK,EAAW/5D,KAAItD,KACR2mD,mBACHx1C,EACAC,EACAC,EACA2oD,GACArnD,EACAC,EACAg0C,GACAp4C,SAEJ6b,GAAUjQ,OAITuhD,gCF/WbrqD,EACA+rD,EACAC,EACArpB,EACA/lC,EACAkD,EACAC,OAIM25B,EAAUjF,GAFFz0B,EAAK,GAAK0oD,GACT1oD,EAAK,GAAK0oD,IAEzBhvB,EAAQuyB,uBAAwB,UAC1Bn3B,EAAS4E,EAAQ5E,OACjBmL,EAAQ,IAAOisB,GAAAt2D,QACnB8jC,EACAgvB,GACA9rD,EACA,KACAmD,GAEIosD,EAAeH,EAASl8D,OAExBs8D,EAAc/zD,KAAK+Q,MAAO,SAAuB+iD,GACjDE,EAAgB,GACbt8D,EAAI,EAAGA,GAAKo8D,IAAgBp8D,EAAC,KAC9B4wC,EAAUqrB,EAASj8D,EAAI,GACvBu8D,EAAuB3rB,EAAQzsB,oBAAsByuB,KACtDA,OAGD3B,EAASsrB,EAAqB3rB,EAAS7gC,MACtCkhC,GAGAzwC,MAAMC,QAAQwwC,KACjBA,EAAM,CAAIA,YAGN7N,EAAK,KAAM,UADHpjC,EAAIq8D,GACoB9kC,SAAS,KAAKpqB,OAAM,GACjD+O,EAAI,EAAG4F,EAAKmvB,EAAOlxC,OAAQmc,EAAI4F,IAAM5F,EAAC,KACvCsgD,EAAgBvrB,EAAO/0B,GACvBuH,EAAW+4C,EAAcjsB,qBAAdisB,CAAoC5rB,MAChDntB,GAAavS,GAAWrE,EAAQ4W,EAASzQ,kBAGxCxG,EAAQgwD,EAAcx+C,QACtB6sB,EAAOr+B,EAAMm/B,UACfd,GACFA,EAAKiE,SAAS1L,OAEVkI,EAAS9+B,EAAMs/B,YACjBR,IACFA,EAAOwD,SAAS1L,GAChBkI,EAAOyC,YAAY,OAErBvhC,EAAMmkC,aAAQ9sC,OACRmoC,EAAQwwB,EAAcp6B,cACxB4J,GAAgC,IAAvBA,EAAMnT,aAAkB,KAC7Bq/B,EAAUlsB,EAAMvJ,mBACjBy1B,EAAO,aAINuE,EAAa/3B,GACjBwzB,EAAQ,GACRA,EAAQ,QACRr0D,EAAS,CACR0oC,OAAO,IAEJ+oB,EAAMmH,EAAW13B,OACvB03B,EAAW5uB,UAAYzK,EACvBq5B,EAAW1F,SAAS,EAAG,EAAGzB,EAAIhkD,MAAOgkD,EAAI/jD,QACzC/E,EAAMikC,SAAQ,IACRisB,GAAA72D,QAAI,CACNyvD,IAAKA,EACL4C,QAASA,EACT97C,OAAQ4vB,EAAM7J,YACd21B,aAAc9D,GACdgE,aAAchE,GACdzlD,OAAQy9B,EAAMtJ,YACd9K,QAAS,EACT3nB,KAAM+7B,EAAMrJ,UACZzjB,MAAO8sB,EAAMlK,WACb9xB,SAAUg8B,EAAMjK,cAChBP,eAAgBwK,EAAMhK,2BAItBlK,EAAStrB,EAAMuW,aAAe,GAChC45C,EAAiBL,EAAiBxkC,MAEpC6kC,EAAc,GACdL,EAAiBxkC,GAAU6kC,EAC3BA,EAAep+D,GAAoB,GACnCo+D,EAAep+D,GAAmB,GAClCo+D,EAAep+D,GAAwB,GACvCo+D,EAAep+D,GAAkB,IAEnCo+D,EAAel5C,EAASlE,UAAU3F,QAAO,QAAQ,KAAO3X,KACtDwhB,EACAjX,eAKAowD,EAAa17D,OAAO8C,KAAKs4D,GAC5B5xC,IAAI4Z,QACJpV,KAAK1vB,GACQ+B,GAAPvB,EAAI,EAAQ48D,EAAW78D,QAAQC,EAAIuB,IAAMvB,EAAC,KAC3C28D,EAAiBL,EAAiBM,EAAW58D,YACxCtB,KAAQi+D,OACXE,EAAeF,EAAej+D,OAC3Bwd,EAAI,EAAG4F,EAAK+6C,EAAa98D,OAAQmc,EAAI4F,EAAI5F,GAAK,EAAC,CACtDg0B,EAASjsB,SAAS44C,EAAa3gD,EAAI,YAC1BO,EAAI,EAAGqgD,EAAKd,EAAWj8D,OAAQ0c,EAAIqgD,IAAMrgD,EAChDyzB,EAAShG,aAAa8xB,EAAWv/C,IACjCyzB,EAASmE,aAAawoB,EAAa3gD,aAKpCytB,EAAQmc,aAAa,EAAG,EAAG/gB,EAAOzzB,MAAOyzB,EAAOxzB,QEsPjBwrD,CAC5B9sD,EACA+rD,EAAUr9D,KACL47D,kBACL5hC,EAAMxU,mBACNtX,EACAkD,EACAC,GAGJyrB,WFpPkBlQ,EAAO0wC,EAAU1M,OACnCyN,EAAc,MAChBzN,EAAS,KACLpkD,EAAI7C,KAAK+Q,MAAM/Q,KAAK4d,MAAMqF,EAAM,IAAMotC,IACtCvtD,EAAI9C,KAAK+Q,MAAM/Q,KAAK4d,MAAMqF,EAAM,IAAMotC,IAItC10D,EAGJ,GAFC8P,GAAM5I,EAAG,EAAGokD,EAAUj+C,MAAQ,GAC7ByC,GAAM3I,EAAG,EAAGmkD,EAAUh+C,OAAS,GAAKg+C,EAAUj+C,OAE5CyD,EAAIw6C,EAAUjvD,KAAK2D,GACnB+/B,EAAIurB,EAAUjvD,KAAK2D,EAAQ,GAE3BjE,EADIuvD,EAAUjvD,KAAK2D,EAAQ,GACnB,KAAO+/B,EAAI,IAAMjvB,GACzBsnD,EAAc/zD,KAAK+Q,MAAO,SAAuB4iD,EAASl8D,QAC5DC,GAAKA,EAAIq8D,GAAgB,GAC3BW,EAAe/6D,KAAKg6D,EAASj8D,EAAIq8D,EAAc,WAG5CW,EEgOCC,CAAU1xC,EAAK5sB,KAAO47D,kBAAiB57D,KAAO27D,0BAEhD/1D,KAAI5F,QAaVq7D,EAAAj7D,UAAA6jD,2BAA0B,SACxB13C,EACA0f,EACAi4B,EACA9zC,EACA+zC,OALFvgD,EAAA5D,aAOYq8D,kBA6CNjU,EA1CEh3C,EAAa6a,EAAWyP,UAAUtqB,WAClCC,EAAW4a,EAAWyP,UAAUrqB,SAChC2oB,EAAKh6B,KAAQqkD,WAGbiZ,EAAQ,GAQR3M,EAAe,SAAa1e,EAASntB,EAAU0rC,OAC7CztD,EAAMwE,GAAO0qC,GACb3K,EAAQg2B,EAASv6D,MAClBukC,OAcgB,IAAVA,GAAkBkpB,EAAalpB,EAAMkpB,WAAU,IACrC,IAAfA,SACF8M,EAASv6D,IAAO,EAChBohD,EAAQ5+C,OAAO4+C,EAAQoa,YAAYj3B,GAAQ,GACpCl3B,EAAS6hC,EAASjY,EAAOlV,GAElCwiB,EAAMxiB,SAAWA,EACjBwiB,EAAMkpB,WAAaA,OArBX,IACW,IAAfA,SACF8M,EAASv6D,IAAO,EACTqN,EAAS6hC,EAASjY,EAAOlV,GAElCq/B,EAAQ7gD,KACLg6D,EAASv6D,GAAG,CACXkvC,QAASA,EACTjY,MAAOA,EACPlV,SAAUA,EACV0rC,WAAYA,EACZpgD,SAAUA,MAgBZouD,EAAc,MAASnC,0BACpB7Y,wBACPgb,EAAel7D,KAAItD,KAAMwjD,wBAE3Bgb,EAAephC,MAAI,SAAEs/B,UACXtU,EAASsU,EAAczY,2BAC7B13C,EACA6E,EACAC,EACA6yC,EACAyM,EACA+L,IAAkB94D,EAAK4/C,uBACnBv3B,EAAW4nB,cAAc9U,MAAMhT,KAAG,SAAE0yC,UAASA,EAAKn2D,SAClD,SAID8/C,IAMTiT,EAAAj7D,UAAAkkD,mBAAkB,eACVtqB,EAAKh6B,KAAQqkD,WACfrqB,EAAMK,cAAUr6B,KAAWq8D,cAC7BriC,EAAMpzB,WASVy0D,EAAAj7D,UAAAo7D,wBAAuB,SAAC/2D,QACjB8/C,2BAQP8W,EAAAj7D,UAAA68B,aAAY,SAAChR,OACLqvC,EAAWt7D,KAAQqkD,WACnBsY,EAAerB,EAAY7+B,gBAC5BkgC,EAAY,OACR,MAGH+B,EAAYzyC,EAAW2wC,UAAUvL,IACjCsN,EAAc1yC,EAAW2wC,UAAUvL,IACnCte,EAAuBuoB,EAAY5nB,0BACnCV,EAAyBsoB,EAAY3nB,qCAGlC+nB,SAAW3oB,GAAwB2rB,IACxC1rB,GAA0B2rB,cAEvBlD,yBAA0B,GACxB,OAEJA,yBAA0B,MAEzBmD,EAAmB3yC,EAAW/d,OAC9BwtB,EAAYzP,EAAWyP,UACvBvhB,EAAauhB,EAAUvhB,WACvB/I,EAAasqB,EAAUtqB,WACvBsyB,EAAazX,EAAWyX,WACxBm7B,EAAsBvD,EAAYz0D,cAClCi4D,EAA0BxD,EAAY9nB,kBACxCurB,EAAyBzD,EAAY7nB,sBAEVvuC,IAA3B65D,IACFA,EAAyBpE,QAGrBxpD,EAASuqB,EAAUvqB,OAAO3C,QAC1BN,EAASG,GACbuwD,EACAE,EAA0B1tD,GAEtB4tD,EAAiB9wD,EAAOM,QACxBywD,EAAW,CAAI/wD,EAAOM,SACtBgM,EAAmBL,EAAW9F,eAGlCsoD,EAAaG,YACb3iD,EAAWhG,aACVrF,GAAe0L,EAAkByR,EAAW/d,QAAM,KAO7CkM,EAAavJ,GAAS2J,GACtB0kD,EAASv1D,KAAKuG,IAAIW,GAAS3C,GAAU,EAAGkM,GAC9ClM,EAAO,GAAKsM,EAAiB,GAAK0kD,EAClChxD,EAAO,GAAKsM,EAAiB,GAAK0kD,EAClChlD,GAAgB/I,EAAQgJ,OAClBglD,W5FyQUjxD,EAAQiM,OACtBK,EAAmBL,EAAW9F,YAC9BlD,EAASJ,GAAU7C,MAEvBiM,EAAWhG,aACVhD,EAAO,GAAKqJ,EAAiB,IAAMrJ,EAAO,IAAMqJ,EAAiB,IAAC,KAE7DJ,EAAavJ,GAAS2J,GAItB5K,EAHajG,KAAK+Q,OACrBvJ,EAAO,GAAKqJ,EAAiB,IAAMJ,GAEVA,EAC5BlM,EAAO,IAAM0B,EACb1B,EAAO,IAAM0B,SAER1B,E4FxRgBkxD,CAAYH,EAAY,GAAI9kD,GAG7CglD,EAAW,GAAK3kD,EAAiB,IACjC2kD,EAAW,GAAK3kD,EAAiB,GAEjCykD,EAAY37D,KAAI,CACd67D,EAAW,GAAK/kD,EAChB+kD,EAAW,GACXA,EAAW,GAAK/kD,EAChB+kD,EAAW,KAGbA,EAAW,GAAK3kD,EAAiB,IACjC2kD,EAAW,GAAK3kD,EAAiB,IAEjCykD,EAAY37D,KAAI,CACd67D,EAAW,GAAK/kD,EAChB+kD,EAAW,GACXA,EAAW,GAAK/kD,EAChB+kD,EAAW,cAMTzD,QAAM17D,KACP87D,qBAAuB1qD,GAAUpR,KACjC67D,mBAAqBgD,GAAmB7+D,KACxCo8D,sBAAwB2C,GAC7BjwD,GAAc9O,KAAMg8D,uBAAwB9tD,UAEvCnM,EAAM/B,KAAM+7D,gBAAiBiD,UAC3BrD,uBAAyB,UACzBI,gBAAkBiD,QAEpB9C,gBAAkB/qD,OAClBmrD,oBAAqB,GACnB,OAGJD,aAAe,UAEfX,QAAS,MASV2D,EAPE7E,EAAW,IAAOvY,GACtB6Y,GAAmB1pD,EAAYsyB,GAC/Bx1B,EACAkD,EACAsyB,QAIO2gB,WAAW9Q,iBAClB8rB,EAAqB,IAAOpd,GAC1B6Y,GAAmB1pD,EAAYsyB,GAC/Bx1B,EACAkD,EACAsyB,QAKA47B,EADEC,EAAiBziD,QAEnByiD,EAAc,SACPl+D,EAAI,EAAGuB,EAAKq8D,EAAY79D,OAAQC,EAAIuB,IAAMvB,EACjDs7D,EAAa6C,aACXtiD,GAAa+hD,EAAY59D,GAAI8Y,GAC7B/I,EACAmuD,GAGJD,EAAgB/jD,GAA4BgkD,EAAgBplD,YAEnD9Y,EAAI,EAAGuB,EAAKq8D,EAAY79D,OAAQC,EAAIuB,IAAMvB,EACjDs7D,EAAa6C,aAAaP,EAAY59D,GAAI+P,EAAY+I,OAIpD+E,WD1lB0B9N,EAAYsyB,OACxC/iB,EAAYm6C,GAAa1pD,EAAYsyB,UACpC/iB,EAAYA,ECwlBQ8+C,CAA0BruD,EAAYsyB,GAEzDvH,EAID,SACO8V,OACJK,EACE2B,EACJhC,EAAQzsB,oBAAsB81C,EAAY91C,sBACxCyuB,IACF3B,EAAS2B,EAAchC,EAAS7gC,IAE9BkhC,EAAM,KACFotB,EAAK1/D,KAAQ2/D,cACjB1tB,EACA/yB,EACAozB,EACAkoB,EACA8E,EACAD,QAEG3D,OAAM17D,KAAQ07D,QAAUgE,IAE/B95D,KAAI5F,MAEF4/D,EAAa1iD,GAAahP,EAAQiM,GAElCmjD,EAAWX,EAAakD,oBAAoBD,GAC9Cb,GACFzB,EAAS/sC,KAAKwuC,OAEP19D,EAAI,EAAGuB,EAAK06D,EAASl8D,OAAQC,EAAIuB,IAAMvB,EAC9C86B,EAAOmhC,EAASj8D,SAEbu6D,kBAAoB0B,MAEnBwC,EAA0BtF,EAAYlhB,SACtCojB,EAAa,IAAOtL,GACxBljD,EACAkD,EACAsyB,EACAi5B,EAAaoD,cACbD,EACAxE,EAAY9nB,0BAGV6rB,IAAqBr/D,KAClBwjD,uBAAsB,IAAO4N,GAChCljD,EACAkD,EACAsyB,EACAi5B,EAAaoD,cACbV,EAAsB/lB,SACtBgiB,EAAY9nB,yBAIXsoB,oBAAsB1qD,OACtByqD,kBAAoBgD,OACpBzC,qBAAuB2C,OACvBhD,gBAAkBiD,OAClBhD,uBAAyB9tD,OACzBguD,gBAAkB/qD,OAClBgrD,oBAAsBhiD,OACtBkiD,aAAeK,OACff,uBAAyB,UAEzBW,oBAAqB,GACnB,GAYTjB,EAAAj7D,UAAAu/D,cAAa,SACX1tB,EACA/yB,EACAozB,EACA4nB,EACA/6C,EACAg7C,OAEK7nB,EAAM,OACF,MAEL0oB,GAAU,KACVn5D,MAAMC,QAAQwwC,GAAM,IAAA,IACbjxC,EAAI,EAAGuB,EAAK0vC,EAAOlxC,OAAQC,EAAIuB,IAAMvB,EAC5C25D,EACED,GACEb,EACAjoB,EACAK,EAAOjxC,GACP6d,EAAgBlf,KACXu7D,6BACLp8C,EACAg7C,IACGa,OAGTA,EAAUD,GACRb,EACAjoB,EACAK,EACApzB,EAAgBlf,KACXu7D,6BACLp8C,EACAg7C,UAGGa,GAEXK,EA1tBA,CAAwC2E,GAAA94D,meCbxC+4D,GAjBA,SAAAx8D,GAGK,SACHy8D,EAAYtpC,UACVnzB,EAAAI,KAAA7D,KAAM42B,IAAW52B,YALKmgE,GAAAD,EAAAz8D,GAYxBy8D,EAAA9/D,UAAAk9B,eAAc,sBACD8iC,GAAAl5D,QAAyBlH,OAExCkgE,EAfA,CAA0BG,GAAAn5D,2LCV1Bo5D,GAMK,MANLA,GAYQ,meCPFC,GACE,SAQRC,GAAA,SAAA/8D,GAKK,SACHg9D,EAAY1gE,EAAM2gE,EAAaC,OAA/B/8D,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKg9D,QAAUF,EAOf98D,EAAK0B,MAAQq7D,WArBoBE,GAAAJ,EAAAh9D,GAuBrCg9D,EAvBA,CAAqC5gE,GAqSrCihE,GAhPA,SAAAr9D,GAIK,SACHs9D,EAAYpmC,EAAW/D,OAAvBhzB,EACEH,EAAAI,KAAA7D,OAAAA,KAKA4D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,OAECwE,EAAU4rB,GAAW,MAM3BhzB,EAAKo9D,UAAYh2D,EAAQi2D,OAMzBr9D,EAAKs9D,OAASvmC,GAAqB,GAE/B/2B,EAAKo9D,QAAO,IAAA,IACL3/D,EAAI,EAAGuB,EAAKgB,EAAKs9D,OAAO9/D,OAAQC,EAAIuB,IAAMvB,EACjDuC,EAAKu9D,cAAcv9D,EAAKs9D,OAAO7/D,GAAIA,UAIvCuC,EAAKw9D,yBA3CgBP,GAAAE,EAAAt9D,GAkDvBs9D,EAAA3gE,UAAAo+B,MAAK,qBACS7S,YAAc,GAAC3rB,KACpBgnB,OAWT+5C,EAAA3gE,UAAAihE,OAAM,SAACpgE,WACII,EAAI,EAAGuB,EAAK3B,EAAIG,OAAQC,EAAIuB,IAAMvB,EAACrB,KACrCsD,KAAKrC,EAAII,iBAYlB0/D,EAAA3gE,UAAAub,QAAO,SAACtP,WACAkwB,EAAKv8B,KAAQkhE,OACV7/D,EAAI,EAAGuB,EAAK25B,EAAMn7B,OAAQC,EAAIuB,IAAMvB,EAC3CgL,EAAEkwB,EAAMl7B,GAAIA,EAAGk7B,IAYnBwkC,EAAA3gE,UAAAkhE,SAAQ,uBACMJ,QASdH,EAAA3gE,UAAAq+D,KAAI,SAACn5D,eACS47D,OAAO57D,IASrBy7D,EAAA3gE,UAAAurB,UAAS,uBACKtjB,IAAIk4D,KASlBQ,EAAA3gE,UAAAmhE,SAAQ,SAACj8D,EAAOk8D,QACLR,SAAOhhE,KACTmhE,cAAcK,QAEhBN,OAAO37D,OAAOD,EAAO,EAAGk8D,QACxBJ,qBACA58D,cAAa,IACZg8D,GAAgBF,GAAyBkB,EAAMl8D,KAUvDy7D,EAAA3gE,UAAA4mB,IAAG,uBACWy6C,SAAQzhE,KAAM2rB,YAAc,IAS1Co1C,EAAA3gE,UAAAkD,KAAI,SAACk+D,QACMR,SAAOhhE,KACTmhE,cAAcK,OAEfrgE,EAACnB,KAAQ2rB,wBACV41C,SAASpgE,EAAGqgE,QACL71C,aASdo1C,EAAA3gE,UAAAw/B,OAAM,SAAC4hC,WACCvgE,EAAGjB,KAAQkhE,OACR7/D,EAAI,EAAGuB,EAAK3B,EAAIG,OAAQC,EAAIuB,IAAMvB,KACrCJ,EAAII,KAAOmgE,EAAI,OAAAxhE,KACLyhE,SAASpgE,IAa3B0/D,EAAA3gE,UAAAqhE,SAAQ,SAACn8D,OACDo8D,EAAI1hE,KAAQkhE,OAAO57D,eACpB47D,OAAO37D,OAAOD,EAAO,QACrB87D,qBACA58D,cAAa,IACZg8D,GAAgBF,GAA4BoB,EAAMp8D,IAEjDo8D,GASTX,EAAA3gE,UAAAuhE,MAAK,SAACr8D,EAAOk8D,OACLrgE,EAACnB,KAAQ2rB,eACXrmB,EAAQnE,EAAC,MACF6/D,SAAOhhE,KACTmhE,cAAcK,EAAMl8D,OAErBo8D,EAAI1hE,KAAQkhE,OAAO57D,QACpB47D,OAAO57D,GAASk8D,OAChBh9D,cAAa,IACZg8D,GAAgBF,GAA4BoB,EAAMp8D,SAEnDd,cAAa,IACZg8D,GAAgBF,GAAyBkB,EAAMl8D,iBAG5CiY,EAAIpc,EAAGoc,EAAIjY,IAASiY,EAACvd,KACvBuhE,SAAShkD,OAAGrY,QAEdq8D,SAASj8D,EAAOk8D,KAOzBT,EAAA3gE,UAAAghE,cAAa,gBACNt4D,IAAIy3D,GAAevgE,KAAOkhE,OAAO9/D,SAQxC2/D,EAAA3gE,UAAA+gE,cAAa,SAACK,EAAMI,WACTvgE,EAAI,EAAGuB,EAAE5C,KAAQkhE,OAAO9/D,OAAQC,EAAIuB,IAAMvB,UACxC6/D,OAAO7/D,KAAOmgE,GAAQngE,IAAMugE,EAAU,MAAA,IACnC91D,GAAA5E,QAAe,KAIjC65D,EA9OA,CAAyB3/C,EAAAla,SCuJzB26D,GAzMA,WAGK,SACHz/B,EAAY0/B,GAGP9hE,KACE+hE,OAAM,IAAOjuB,EAAArW,IAAP,CAAcqkC,GAOtB9hE,KACEgiE,OAAM,UAQb5/B,EAAAhiC,UAAAm/B,OAAM,SAACrxB,EAAQ5F,GACO,IACdm2D,EAAI,CACRvvD,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACb5F,MAAOA,QAGJy5D,OAAOxiC,OAAOk/B,QACduD,OAAOz6D,GAAOe,IAAUm2D,GAQ/Br8B,EAAAhiC,UAAAk/B,KAAI,SAAC2iC,EAAS5+D,WACN6+D,EAAK,IAAOrgE,MAAMwB,EAAOjC,QACtBC,EAAI,EAAG0R,EAAI1P,EAAOjC,OAAQC,EAAI0R,EAAG1R,IAAC,KACnC6M,EAAS+zD,EAAQ5gE,GACjBiH,EAAQjF,EAAOhC,GAGfo9D,EAAI,CACRvvD,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACb5F,MAAOA,GAET45D,EAAM7gE,GAAKo9D,OACNuD,OAAOz6D,GAAOe,IAAUm2D,OAE1BsD,OAAOziC,KAAK4iC,IAQnB9/B,EAAAhiC,UAAAw/B,OAAM,SAACt3B,OACC65D,EAAM56D,GAAOe,GAIbm2D,EAAIz+D,KAAQgiE,OAAOG,sBACbH,OAAOG,GACiB,YAAxBJ,OAAOniC,OAAO6+B,IAQ5Br8B,EAAAhiC,UAAAgiE,OAAM,SAACl0D,EAAQ5F,OACPm2D,EAAIz+D,KAAQgiE,OAAOz6D,GAAOe,IAE3ByH,GADK,CAAI0uD,EAAKvvD,KAAMuvD,EAAKtvD,KAAMsvD,EAAKrvD,KAAMqvD,EAAKpvD,MAClCnB,UACX0xB,OAAOt3B,QACPi3B,OAAOrxB,EAAQ5F,KAQxB85B,EAAAhiC,UAAAiiE,OAAM,kBACOriE,KAAQ+hE,OAAOhjC,MACbhT,KAAG,SAAW0yC,UAClBA,EAAKn2D,UAShB85B,EAAAhiC,UAAAkiE,YAAW,SAACp0D,GACU,IACdq0D,EAAI,CACRrzD,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,WAEJlO,KAAQ+hE,OAAO9iC,OAAOsjC,GACpBx2C,KAAG,SAAW0yC,UAClBA,EAAKn2D,UAWhB85B,EAAAhiC,UAAAub,QAAO,SAACvL,eACMoyD,SAAQxiE,KAAMqiE,SAAUjyD,IAStCgyB,EAAAhiC,UAAAqiE,gBAAe,SAACv0D,EAAQkC,eACVoyD,SAAQxiE,KAAMsiE,YAAYp0D,GAASkC,IASjDgyB,EAAAhiC,UAAAoiE,SAAQ,SAACn/D,EAAQ+M,WACXg4C,EACK/mD,EAAI,EAAG0R,EAAI1P,EAAOjC,OAAQC,EAAI0R,EAAG1R,OACxC+mD,EAASh4C,EAAS/M,EAAOhC,IACf,OACD+mD,SAGJA,GAMThmB,EAAAhiC,UAAA6wD,QAAO,kBACE1tD,EAAOvD,KAAMgiE,SAMtB5/B,EAAAhiC,UAAAo+B,MAAK,gBACEujC,OAAOvjC,aACPwjC,OAAM,IAOb5/B,EAAAhiC,UAAAiU,UAAS,SAAC/F,OACF3M,EAAI3B,KAAQ+hE,OAAOvhC,gBAClBhxB,GACL7N,EAAKuN,KACLvN,EAAKwN,KACLxN,EAAKyN,KACLzN,EAAK0N,KACLf,IAOJ8zB,EAAAhiC,UAAAqyC,OAAM,SAACiwB,WAEMrhE,UADN0gE,OAAOziC,KAAKojC,EAAMX,OAAOhjC,OACd2jC,EAAMV,OAAMhiE,KACrBgiE,OAAO3gE,GAAKqhE,EAAMV,OAAO3gE,IAGpC+gC,EAvMA,0gBC+JG,SACMugC,GAAkBC,UACpBA,EAGD/gE,MAAMC,QAAQ8gE,GAAe,SACd32C,UACR22C,GAIe,mBAAfA,EACFA,WAGQ32C,UACP22C,IAbD,SAiBXC,GA9JA,SAAAp/D,GAGK,SACHq/D,EAAY93D,OAAZpH,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKuW,WAAaY,GAAc/P,EAAQmP,YAMxCvW,EAAKm/D,cAAgBJ,GAAkB33D,EAAQg4D,cAM/Cp/D,EAAKq/D,8BACiC/9D,IAApC8F,EAAQk4D,yBACJl4D,EAAQk4D,wBAQdt/D,EAAKo3D,SAAU,EAMfp3D,EAAK81B,YACex0B,IAAlB8F,EAAQ+uB,MAAsB/uB,EAAQ+uB,MAAQwB,GAMhD33B,EAAKu/D,YAA2Bj+D,IAAlB8F,EAAQo4D,OAAsBp4D,EAAQo4D,eA9CnCC,GAAAP,EAAAr/D,GAqDnBq/D,EAAA1iE,UAAAkjE,gBAAe,uBACDP,eAMdD,EAAA1iE,UAAAmjE,2BAA0B,uBACZN,0BAQdH,EAAA1iE,UAAAojE,cAAa,uBACCrpD,YAOd2oD,EAAA1iE,UAAAqjE,eAAc,kBACLr8D,MAQT07D,EAAA1iE,UAAAs8B,SAAQ,uBACMhD,QAMdopC,EAAA1iE,UAAA08D,SAAQ,uBACMqG,QAMdL,EAAA1iE,UAAAsjE,kBAAiB,aAQjBZ,EAAA1iE,UAAAujE,QAAO,gBACA/8D,WAUPk8D,EAAA1iE,UAAAwjE,gBAAe,SAACZ,QACTD,cAAgBJ,GAAkBK,QAClCp8D,WAOPk8D,EAAA1iE,UAAAyjE,SAAQ,SAAC9pC,QACFL,OAASK,OACTnzB,WAETk8D,EApIA,CAAqB1hD,EAAAla,SCtCrB48D,GAMY,aANZA,GAae,gBAbfA,GAoBO,QApBPA,GA4Be,gBA5BfA,GAmCmB,oBAnCnBA,GA0CiB,kBA1CjBA,GAiDmB,6BC7CHC,GAAI71D,EAAQkD,YAChB7B,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,QCL3Cy0D,GACc,cADdA,GAEM,OAFNA,GAGM,OAHNA,GAIK,MCADC,IAAkB,WA4HNC,GAAIC,EAAKC,GAUpB,OAAA,SACcl2D,EAAQkD,EAAY+I,EAAYkqD,EAASC,OAClDxhE,EAAM9C,eAvFdmkE,EACAC,EACAl2D,EACAkD,EACA+I,EACAkqD,EACAC,OAEMC,EAAG,IAAOC,eAChBD,EAAIE,KAAI,MAEI,mBAAHN,EAAqBA,EAAIj2D,EAAQkD,EAAY+I,GAAcgqD,GAClE,GAEEC,EAAOxjD,WAAaojD,KACtBO,EAAIG,aAAY,eAElBH,EAAII,gBAAkBV,GAKtBM,EAAIK,OAAM,SAAangE,OAEhB8/D,EAAIM,QAAWN,EAAIM,QAAU,KAAON,EAAIM,OAAS,IAAG,KACjD9kE,EAAOqkE,EAAOxjD,UAEhB9d,OAAM,EACN/C,GAAQikE,IAAmBjkE,GAAQikE,GACrClhE,EAASyhE,EAAIO,aACJ/kE,GAAQikE,IACjBlhE,EAASyhE,EAAIQ,eAEXjiE,GAAM,IAAOkiE,WAAYC,gBACvBV,EAAIO,aAAY,oBAIX/kE,GAAQikE,KACjBlhE,EAAqCyhE,EAAIW,UAEvCpiE,EACFuhE,EAGID,EAAOe,aAAariE,EAAM,CACxBoL,OAAQA,EACRk3D,kBAAmBjrD,IAGvBiqD,EAAOiB,eAAeviE,IAGxBwhE,SAGFA,KAMJC,EAAIe,QAAUhB,EACdC,EAAIgB,OAyBFC,CACErB,EACAC,EACAl2D,EACAkD,EACA+I,GAKG,SACOmjD,EAAUmI,GAClB3iE,EAAO4iE,YAAYpI,QACHp4D,IAAZm/D,GACFA,EAAQ/G,KAGagH,GAAoBjiE,ICnKhD,8dAoCHsjE,GAAA,SAAAliE,GAKK,SACHmiE,EAAY7lE,EAAM8lE,EAAaC,OAA/BliE,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKquC,QAAU4zB,EAOfjiE,EAAK05D,SAAWwI,WArBmBC,GAAAH,EAAAniE,GAuBvCmiE,EAvBA,CAAuC/lE,GA+hCvCmmE,GAv5BA,SAAAviE,GAGK,SACHwiE,EAAYrvC,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAW,IAE3BhzB,EAAAH,EAAAI,KAAA7D,KAAA,CACEgjE,aAAch4D,EAAQg4D,aACtB7oD,gBAAYjV,EACZ60B,MAAOwB,GACP6nC,WAAyBl+D,IAAlB8F,EAAQo4D,OAAsBp4D,EAAQo4D,eAM1Ch9D,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAML5C,EAAKsiE,QAAU7jE,EAMfuB,EAAKuiE,QAAUn7D,EAAQo5D,OAMvBxgE,EAAK0rD,eAAiCpqD,IAArB8F,EAAQ2+C,UAAgC3+C,EAAQ2+C,SAMjE/lD,EAAKwiE,KAAOp7D,EAAQm5D,SAEGj/D,IAAnB8F,EAAQq7D,OACVziE,EAAKsiE,QAAUl7D,EAAQq7D,YACAnhE,IAAdtB,EAAKwiE,OACdz6D,GAAO/H,EAAKuiE,QAAS,GAErBviE,EAAKsiE,QAAUhC,GACbtgE,EAAKwiE,KACkDxiE,EAAKuiE,UAQhEviE,EAAK0iE,eACkBphE,IAArB8F,EAAQu7D,SAAyBv7D,EAAQu7D,SAAWxC,OAuDlDyC,EAAYlJ,EArDVmJ,OACwBvhE,IAA5B8F,EAAQy7D,iBAAgCz7D,EAAQy7D,uBAMlD7iE,EAAK8iE,eAAiBD,EAAe,IAAO5E,GAAU,KAMtDj+D,EAAK+iE,oBAAmB,IAAO9E,GAM/Bj+D,EAAKgjE,qBAAuB,EAM5BhjE,EAAKijE,sBAAqB,GAO1BjjE,EAAKkjE,SAAQ,GAObljE,EAAKmjE,UAAS,GAMdnjE,EAAKojE,mBAAkB,GAMvBpjE,EAAKqjE,oBAAsB,KAGvBplE,MAAMC,QAAQkJ,EAAQsyD,UACxBA,EAAWtyD,EAAQsyD,SACVtyD,EAAQsyD,WAEjBA,GADAkJ,EAAax7D,EAAQsyD,UACCgE,YAEnBmF,QAAkCvhE,IAAfshE,IACtBA,EAAU,IAAOU,GAAAhgE,QAAWo2D,SAEbp4D,IAAbo4D,GACF15D,EAAKujE,oBAAoB7J,QAERp4D,IAAfshE,GACF5iE,EAAKwjE,wBAAwBZ,YA1IRT,GAAAE,EAAAxiE,GA0JzBwiE,EAAA7lE,UAAAinE,WAAU,SAACp1B,QACJq1B,mBAAmBr1B,QACnBrrC,WAQPq/D,EAAA7lE,UAAAknE,mBAAkB,SAACr1B,OACXs1B,EAAahgE,GAAO0qC,WAEhBu1B,YAAYD,EAAYt1B,SAO7Bw1B,mBAAmBF,EAAYt1B,OAE9BntB,EAAWmtB,EAAQ7sB,iBACrBN,EAAQ,KACJ5W,EAAS4W,EAASzQ,iBACfqyD,gBAAc1mE,KAChB0mE,eAAennC,OAAOrxB,EAAQ+jC,aAGhC40B,sBAAsBU,GAAct1B,OAGtCztC,cAAa,IACZmhE,GAAkB7B,GAA4B7xB,cAnBzCg1B,qBAAmBjnE,KACrBinE,oBAAoBrnC,OAAOqS,IA2BtCg0B,EAAA7lE,UAAAqnE,mBAAkB,SAACF,EAAYt1B,QACxB+0B,mBAAmBO,GAAU,CAChC9hE,EAAOwsC,EAASzsC,EAAgBxF,KAAO0nE,qBAAoB1nE,MAC3DyF,EACEwsC,EACA1xC,EAA8BP,KACzB0nE,qBAAoB1nE,QAa/BimE,EAAA7lE,UAAAonE,YAAW,SAACD,EAAYt1B,OAClB01B,GAAQ,EACN/hD,EAAKqsB,EAAQ1sB,oBACRrgB,IAAP0gB,IACIA,EAAGgT,aAAQ54B,KAAW8mE,SAG1Ba,GAAQ,EAH0B3nE,KAC7B8mE,SAASlhD,EAAGgT,YAAcqZ,GAK/B01B,IACFh8D,KAAS47D,KAAUvnE,KAAS+mE,WAAY,SACnCA,UAAUQ,GAAct1B,GAExB01B,GAQT1B,EAAA7lE,UAAAslE,YAAW,SAACpI,QACL6J,oBAAoB7J,QACpB12D,WAQPq/D,EAAA7lE,UAAA+mE,oBAAmB,SAAC7J,WACZ2E,EAAO,GACP2F,EAAW,GACXC,EAAgB,GAEbxmE,EAAI,EAAGonB,EAAS60C,EAASl8D,OAAQC,EAAIonB,EAAQpnB,IAAC,KAE/CkmE,EAAahgE,GADb0qC,EAAUqrB,EAASj8D,SAEhBmmE,YAAYD,EAAYt1B,IAC/B21B,EAAYtkE,KAAK2uC,GAIZ5wC,EAAI,UAAGymE,EAASF,EAAYxmE,OAAQC,EAAIymE,EAAQzmE,IAAC,KAClD4wC,EACAs1B,EAAahgE,GADb0qC,EAAU21B,EAAYvmE,SAEvBomE,mBAAmBF,EAAYt1B,OAE9BntB,EAAWmtB,EAAQ7sB,iBACrBN,EAAQ,KACJ5W,EAAS4W,EAASzQ,YACxB4tD,EAAQ3+D,KAAK4K,GACb25D,EAAiBvkE,KAAK2uC,aAEjB40B,sBAAsBU,GAAct1B,OAGpCy0B,gBAAc1mE,KAChB0mE,eAAepnC,KAAK2iC,EAAS4F,GAG3BxmE,EAAI,UAAG0mE,EAASH,EAAYxmE,OAAQC,EAAI0mE,EAAQ1mE,IAACrB,KACnDwE,cAAa,IACZmhE,GAAkB7B,GAA4B8D,EAAYvmE,MASpE4kE,EAAA7lE,UAAAgnE,wBAAuB,SAACZ,OAClBwB,GAAsB,OACrB7jE,iBACH2/D,IAGG,SACOp/D,GACHsjE,IACHA,GAAsB,EACtBxB,EAAWljE,KAAKoB,EAAIutC,SACpB+1B,GAAsB,WAIvB7jE,iBACH2/D,IAGG,SACOp/D,GACHsjE,IACHA,GAAsB,EACtBxB,EAAW5mC,OAAOl7B,EAAIutC,SACtB+1B,GAAsB,MAI5BxB,EAAWriE,iBACTm8D,GAGG,SACO57D,GACHsjE,IACHA,GAAsB,OACjBX,WAED3iE,EAAIk8D,SAGRoH,GAAsB,IAExBpiE,KAAI5F,OAERwmE,EAAWriE,iBACTm8D,GAGG,SACO57D,GACHsjE,IACHA,GAAsB,OACjBC,cAEDvjE,EAAIk8D,SAGRoH,GAAsB,IAExBpiE,KAAI5F,YAEHinE,oBAAsBT,GAQ7BP,EAAA7lE,UAAAo+B,MAAK,SAAC0pC,MACAA,EAAQ,SACCC,KAASnoE,KAASgnE,mBAAkB,CACnChnE,KAAQgnE,mBAAmBmB,GAChCxsD,QAAQ1V,QAELghE,2BACHD,mBAAkB,QAClBF,SAAQ,QACRC,UAAS,iBAGPL,uBAEI9gD,UADN8gD,eAAe/qD,QAAO3b,KAAMooE,sBAAsBxiE,KAAI5F,OAC9CA,KAAS6mE,sBAAqB7mE,KACpCooE,sBAAqBpoE,KAAM6mE,sBAAsBjhD,SAInDqhD,qBAAmBjnE,KACrBinE,oBAAoBzoC,aAGlBkoC,gBAAc1mE,KAChB0mE,eAAeloC,aAEjBqoC,sBAAqB,OAEpBwB,EAAU,IAAO1C,GAAkB7B,SACpCt/D,cAAc6jE,QACdzhE,WAePq/D,EAAA7lE,UAAAkoE,eAAc,SAACl4D,WACJs2D,eAAc,OAAA1mE,KACT0mE,eAAe/qD,QAAQvL,QACrB62D,qBAAmBjnE,KAC5BinE,oBAAoBtrD,QAAQvL,IAgBrC61D,EAAA7lE,UAAAmoE,iCAAgC,SAACh8D,EAAY6D,OACrClC,EAAM,CAAI3B,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,gBAC5Di8D,uBAAuBt6D,GAAM,SAAY+jC,UAClCA,EAAQ7sB,cACZlF,qBAAqB3T,GACzB6D,EAAS6hC,cA0BtBg0B,EAAA7lE,UAAAooE,uBAAsB,SAACt6D,EAAQkC,WACpBs2D,eAAc,OAAA1mE,KACT0mE,eAAejE,gBAAgBv0D,EAAQkC,QACrC62D,qBAAmBjnE,KAC5BinE,oBAAoBtrD,QAAQvL,IAmBrC61D,EAAA7lE,UAAAqoE,iCAAgC,SAACv6D,EAAQkC,eAC3Bo4D,uBACVt6D,GAIG,SACO+jC,MACSA,EAAQ7sB,cACZvE,iBAAiB3S,GAAM,KAC5Bk6C,EAASh4C,EAAS6hC,MACpBmW,EAAM,OACDA,OAcjB6d,EAAA7lE,UAAAsoE,sBAAqB,uBACPzB,qBASdhB,EAAA7lE,UAAAw8B,YAAW,eACL0gC,cACK2J,oBACP3J,EAAQt9D,KAAQinE,oBAAoB3F,WAAW9yD,MAAM,QACvCk4D,iBACdpJ,EAAQt9D,KAAQ0mE,eAAerE,SAC1B9+D,EAAOvD,KAAM6mE,wBAChBnlE,EAAO47D,EAAUl6D,EAASpD,KAAM6mE,yBAIlCvJ,GAUJ2I,EAAA7lE,UAAAuoE,wBAAuB,SAACp8D,OAChB+wD,EAAQ,eACTiL,iCAAiCh8D,GAAU,SAAY0lC,GAC1DqrB,EAASh6D,KAAK2uC,MAETqrB,GAeT2I,EAAA7lE,UAAAy/D,oBAAmB,SAAC3xD,eACTw4D,eAAc1mE,KACT0mE,eAAepE,YAAYp0D,QACzB+4D,oBAAmBjnE,KACrBinE,oBAAoB3F,WAAW9yD,MAAM,OAkBrDy3D,EAAA7lE,UAAAwoE,8BAA6B,SAACr8D,EAAYs8D,OAQlCr8D,EAAID,EAAW,GACfE,EAAIF,EAAW,GACjBu8D,EAAiB,KACfnpD,EAAY,CAAIM,IAAKA,KACvBL,EAAqBrQ,EAAAA,EACnBrB,EAAM,EAAKqB,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,GAC1C8vC,EAASwpB,GAA0B1mE,cACpCukE,eAAejE,gBAClBv0D,GAGG,SACO+jC,MACJoN,EAAOpN,GAAO,KACVntB,EAAWmtB,EAAQ7sB,cACnB2jD,EAA6BnpD,MACnCA,EAAqBkF,EAASpF,eAC5BlT,EACAC,EACAkT,EACAC,IAEuBmpD,EAA0B,CACjDD,EAAiB72B,MAKX+2B,EAAcr/D,KAAKqP,KAAK4G,GAC9B1R,EAAO,GAAK1B,EAAIw8D,EAChB96D,EAAO,GAAKzB,EAAIu8D,EAChB96D,EAAO,GAAK1B,EAAIw8D,EAChB96D,EAAO,GAAKzB,EAAIu8D,OAKjBF,GAaT7C,EAAA7lE,UAAAiU,UAAS,SAAC/F,eACIo4D,eAAeryD,UAAU/F,IAYvC23D,EAAA7lE,UAAA6oE,eAAc,SAACrjD,OACPqsB,EAAOjyC,KAAQ8mE,SAASlhD,EAAGgT,wBACd1zB,IAAZ+sC,EAAwBA,EAAU,MAS3Cg0B,EAAA7lE,UAAA8oE,gBAAe,SAAC/G,OACRlwB,EAAOjyC,KAAQ+mE,UAAU5E,eACZj9D,IAAZ+sC,EAAwBA,EAAU,MAS3Cg0B,EAAA7lE,UAAA+oE,UAAS,uBACKhD,SAMdF,EAAA7lE,UAAA2/D,YAAW,uBACGzQ,WASd2W,EAAA7lE,UAAAgpE,OAAM,uBACQhD,MAOdH,EAAA7lE,UAAAsnE,qBAAoB,SAACjjE,OACbwtC,EACJxtC,EAAMtE,OAEFonE,EAAahgE,GAAO0qC,GACpBntB,EAAWmtB,EAAQ7sB,iBACpBN,OAQG5W,EAAS4W,EAASzQ,YACpBkzD,KAAUvnE,KAAS6mE,mCACTA,sBAAsBU,QACzBb,gBAAc1mE,KAChB0mE,eAAennC,OAAOrxB,EAAQ+jC,SAG5By0B,gBAAc1mE,KAChB0mE,eAAetE,OAAOl0D,EAAQ+jC,QAfjCs1B,KAAUvnE,KAAS6mE,6BACdH,gBAAc1mE,KAChB0mE,eAAe9mC,OAAOqS,QAExB40B,sBAAsBU,GAAct1B,OAevCrsB,EAAKqsB,EAAQ1sB,gBACRrgB,IAAP0gB,EAAgB,KACZyjD,EAAMzjD,EAAGgT,gBACNkuC,SAASuC,KAASp3B,SACpBq3B,mBAAmBr3B,QACnB60B,SAASuC,GAAOp3B,aAGlBq3B,mBAAmBr3B,QACnB80B,UAAUQ,GAAct1B,OAE1BrrC,eACApC,cAAa,IACZmhE,GAAkB7B,GAA+B7xB,KAUzDg0B,EAAA7lE,UAAAmpE,WAAU,SAACt3B,OACHrsB,EAAKqsB,EAAQ1sB,oBACRrgB,IAAP0gB,EACKA,KAAE5lB,KAAS8mE,SAEXv/D,GAAO0qC,KAAOjyC,KAAU+mE,WAOnCd,EAAA7lE,UAAA6wD,QAAO,uBACOyV,eAAezV,WAAa1tD,EAAOvD,KAAM6mE,wBAQvDZ,EAAA7lE,UAAAo/D,aAAY,SAACtxD,EAAQkD,EAAY+I,WACzBqvD,EAAkBxpE,KAAQ2mE,oBAC1B8C,EAAazpE,KAAQsmE,UAAUp4D,EAAQkD,cACpC/P,EAAOuB,OACR8mE,EAAeD,EAAcpoE,GACbmoE,EAAmB/G,gBACvCiH,GAIG,SACOxmE,UACD4L,GAAe5L,EAAOgL,OAAQw7D,UAIrCC,EAAK/C,qBACP+C,EAAKnlE,cAAa,IACZmhE,GAAkB7B,KAExB6F,EAAKzD,QAAQriE,KAAI8lE,EAEfD,EACAt4D,EACA+I,EAAU,SACAmjD,UACDsJ,0BACFpiE,cAAa,IACZmhE,GACF7B,QACA5+D,EACAo4D,KAGJ13D,KAAI+jE,GAAA,kBAEG/C,0BACFpiE,cAAa,IACZmhE,GAAkB7B,MAExBl+D,KAAI+jE,IAERH,EAAmBjqC,OAAOmqC,EAAY,CAAGx7D,OAAQw7D,EAAal7D,mBAvCzDnN,EAAI,EAAGuB,EAAK6mE,EAAcroE,OAAQC,EAAIuB,IAAMvB,IAA5CA,QA0CJ25D,QAAOh7D,KACLkmE,UAAY7jE,GAAYrC,KAAQ4mE,qBAAuB,GAGhEX,EAAA7lE,UAAAujE,QAAO,gBACAnlC,OAAM,QACNmoC,oBAAoBnoC,QACzB/6B,EAAArD,UAAMujE,QAAO9/D,KAAA7D,OAQfimE,EAAA7lE,UAAAwpE,mBAAkB,SAAC17D,OAEb1G,EADEgiE,EAAkBxpE,KAAQ2mE,oBAEhC6C,EAAmB/G,gBAAgBv0D,GAAM,SAAYhL,MAC/C6M,GAAO7M,EAAOgL,OAAQA,UACxB1G,EAAMtE,GACC,KAGPsE,GACFgiE,EAAmB5pC,OAAOp4B,IAW9By+D,EAAA7lE,UAAA6nE,cAAa,SAACh2B,OACNs1B,EAAahgE,GAAO0qC,GACtBs1B,KAAUvnE,KAAS6mE,6BAAqB7mE,KAC9B6mE,sBAAsBU,QAEzBb,gBAAc1mE,KAChB0mE,eAAe9mC,OAAOqS,QAG1Bm2B,sBAAsBn2B,QACtBrrC,WAQPq/D,EAAA7lE,UAAAgoE,sBAAqB,SAACn2B,OACds1B,EAAahgE,GAAO0qC,QACrB+0B,mBAAmBO,GAAY5rD,QAAQ1V,eAChC+gE,mBAAmBO,OACzB3hD,EAAKqsB,EAAQ1sB,aACRrgB,IAAP0gB,UAAgB5lB,KACN8mE,SAASlhD,EAAGgT,wBAEdmuC,UAAUQ,QACjB/iE,cAAa,IACZmhE,GAAkB7B,GAA+B7xB,KAWzDg0B,EAAA7lE,UAAAkpE,mBAAkB,SAACr3B,OACb43B,GAAU,UACHjkD,KAAE5lB,KAAS8mE,SAAQ,GAAA9mE,KACnB8mE,SAASlhD,KAAQqsB,EAAO,aACnB60B,SAASlhD,GACrBikD,GAAU,eAIPA,GAST5D,EAAA7lE,UAAA0pE,UAAS,SAACzD,QACHH,QAAUG,GAQjBJ,EAAA7lE,UAAA2pE,OAAM,SAAC5F,GACLx4D,GAAM3L,KAAMmmE,QAAS,QAChBC,KAAOjC,OACP2F,UAAU5F,GAAIC,EAAGnkE,KAAOmmE,WAEjCF,EAr5BA,CAA2B+D,GAAA9iE,kBC1JX+iE,GAAIC,OACZC,EAAatnE,UAIhB,OAAA,SACc4B,WACX2lE,GAAO,EACF/oE,EAAI,EAAGuB,EAAKunE,EAAW/oE,OAAQC,EAAIuB,IAC1CwnE,EAAOA,GAAQD,EAAW9oE,GAAGoD,MADmBpD,UAM3C+oE,OA+BEC,GAAgB,SAAanzC,OAClC7K,EACJ6K,EAAgB7K,qBAGhBA,EAAci+C,UACZj+C,EAAck+C,SAAWl+C,EAAcm+C,UACzCn+C,EAAco+C,UAsBLC,GAAiB,SAAajmE,UAClCA,EAAMsnB,IAAI4+C,mBAAmBC,aAAY,aAXhC,SAAanmE,UACtBA,EAAMtE,OAAOwqE,mBAAmBE,SAASl9D,SAASm9D,eAWrDC,CAAMtmE,IAWCumE,GAAS7oE,EAsBT8oE,GAAiB,SAAa/zC,OACnC7K,EACJ6K,EAAgB7K,qBAEa,GAAxBA,EAAc6+C,UAAiB/gE,IAAUC,IAAOiiB,EAAcm+C,UAsD1DW,GAAc,SAAaj0C,OAChC7K,EACJ6K,EAAgB7K,qBAGfA,EAAci+C,UACbj+C,EAAck+C,SAAWl+C,EAAcm+C,WACxCn+C,EAAco+C,UAgCNW,GAAY,SAAal0C,OAC9B7K,EACJ6K,EAAgB7K,qBAGfA,EAAci+C,UACbj+C,EAAck+C,SAAWl+C,EAAcm+C,UACzCn+C,EAAco+C,UAYLY,GAAiB,SAAan0C,OAInCo0C,EAFJp0C,EAAgB7K,cAEoClsB,OAAQmrE,cAChD,UAAPA,GAA8B,WAAPA,GAA+B,aAAPA,GAU3CC,GAAS,SAAar0C,OAC3Bs0C,EACJt0C,EACA7K,qBACF1gB,QAAwBzG,IAAjBsmE,EAA4B,IAEJ,SAAxBA,EAAaC,aA4CTC,GAAa,SAAax0C,OAC/Bs0C,EACJt0C,EACA7K,qBACF1gB,QAAwBzG,IAAjBsmE,EAA4B,IAC5BA,EAAaG,WAAqC,IAAxBH,EAAaN,keClM1CU,GACC,QADDA,GAEO,aAFPA,GAGG,UAHHA,GAIE,SAMFC,GAMK,YANLA,GAYG,UAZHA,GAkBK,YAQXC,GAAA,SAAAroE,GAIK,SACHsoE,EAAYhsE,EAAMkyC,OAAlBruC,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKquC,QAAUA,WAbY+5B,GAAAD,EAAAtoE,GAe/BsoE,EAfA,CAA+BlsE,YA4/BfosE,GAAqBr5C,EAAWC,mBAC7B5kB,EAAai+D,EAAc/xD,OACpChJ,EAAS6L,GACiB/O,EAAa,GAC3CkM,GAEI3Y,EAAMwb,GACoB/O,EAAaA,EAAY7M,OAAS,GAChE+Y,GAEIzB,EAAS/O,KAAKqP,KAAKe,GAA0B5I,EAAQ3P,IACrDsjB,EAAWonD,GAEbr3C,GAAAs3C,WAAU,IAAKC,EAAAllE,QAAOiK,GAASyhB,GAE/B7lB,EAAQ8lB,MACPA,GAA2B,IAAdA,EAAe,KACzBrmB,EAAIhL,EAAI,GAAK2P,EAAO,GACpB1E,EAAIjL,EAAI,GAAK2P,EAAO,GAC1BpE,EAAQpD,KAAKoP,MAAMtM,EAAGD,GAExBqoB,GAAAw3C,YAAYvnD,EAAU3T,EAAQuH,EAAQ3L,OAEhCwyD,EAAiBziD,YACnByiD,GACFz6C,EAAS7Y,UAAUkO,EAAYolD,GAE1Bz6C,YAWKwnD,qBACGr+D,EAAai+D,EAAc/xD,OACpCjM,EAASF,GACe,CAC1BC,EAAY,GACZA,EAAYA,EAAY7M,OAAS,IAChC2qB,KAAG,SAAWxf,UACRyQ,GAAmBzQ,EAAY4N,OAGpCoyD,EAAc,EAEhBj8D,GAAcpC,GACdqC,GAAerC,GACfsC,GAAYtC,GACZuC,GAAWvC,GACXoC,GAAcpC,KAGd4W,EAAWonD,EACXpnD,EACFA,EAASxC,eAAeiqD,GAExBznD,EAAQ,IAAO+P,GAAA3tB,QAAQqlE,OAEnBhN,EAAiBziD,YACnByiD,GACFz6C,EAAS7Y,UAAUkO,EAAYolD,GAE1Bz6C,OA4BX0nD,GAzjCA,SAAA/oE,GAGK,SACHgpE,EAAYzhE,OAAZpH,EAAA5D,KACQ0sE,EACJ1hE,EAEG0hE,EAAe30C,WAClB20C,EAAe30C,SAAW31B,IAG5BwB,EAAAH,EAAAI,KAAA7D,KAAM0sE,IAAc1sE,MAKfoG,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAML5C,EAAK+oE,eAAgB,EAMrB/oE,EAAKgpE,QAAU,KAMfhpE,EAAKipE,aAMLjpE,EAAKkpE,cAOLlpE,EAAKmpE,aAMLnpE,EAAKopE,WAAY,EAOjBppE,EAAKqpE,QAAUjiE,EAAQlI,OAASkI,EAAQlI,OAAS,KAOjDc,EAAKspE,UAAYliE,EAAQsyD,SAAWtyD,EAAQsyD,SAAW,KAOvD15D,EAAKupE,eAAiBniE,EAAQoiE,cAAgBpiE,EAAQoiE,cAAgB,GAOtExpE,EAAKypE,MACHriE,EAAQjL,KAQV6D,EAAK0pE,MAi8BN,SACcvtE,UACPA,QACDH,OACAA,SACIgsE,QACJhsE,OACAA,SACIgsE,QACJhsE,OACAA,SACIgsE,QACJhsE,SACIgsE,qBAEGvkE,MAAK,iBAAoBtH,IAh9BxBwtE,CAAQ3pE,EAAKypE,OAQ1BzpE,EAAK4pE,aAAexiE,EAAQyiE,UAS5B7pE,EAAK8pE,WAAa1iE,EAAQ2iE,UACtB3iE,EAAQ2iE,UACR/pE,EAAK0pE,QAAU1B,GACf,EACA,EAQJhoE,EAAKgqE,WACHhqE,EAAK0pE,QAAU1B,GACX,EACA5gE,EAAQ6iE,UACR7iE,EAAQ6iE,UACRt+D,EAAAA,EAON3L,EAAKkqE,iBAAmB9iE,EAAQ+iE,gBAC5B/iE,EAAQ+iE,gBACR5rE,MAuzBAmwC,EArzBA07B,EAAmBhjE,EAAQgjE,qBAC1BA,EAAgB,KA0BbC,EAzBAC,EAAOtqE,EAAK0pE,SACdY,IAAStC,GAOXoC,EAAgB,SAAa//D,EAAa6W,EAAU3K,OAC5CqJ,EAASsB,GACoB,IAC3BsnD,EAAAllE,QAAM,CAAE+Y,IAAKA,MACf9O,EAAS6L,GAAmB/O,EAAY,GAAIkM,GAC5Cg0D,EAAgBp0D,GACpB5I,EACA6L,GAAmB/O,EAAYA,EAAY7M,OAAS,GAAI+Y,IAE1DqJ,EAAOF,mBAAmBnS,EAAQxH,KAAKqP,KAAKm1D,QACtC5O,EAAiBziD,YACnByiD,GACF/7C,EAAOvX,UAAUkO,EAAYolD,GAExB/7C,QAIL0qD,IAAStC,GACXqC,EAAc3+C,GAAApoB,QACLgnE,IAAStC,GAClBqC,EAAcz/C,GAAAtnB,QACLgnE,IAAStC,KAClBqC,EAAcp5C,GAAA3tB,SAQhB8mE,EAAgB,SAAa//D,EAAa6W,EAAU3K,UAC9C2K,EACEopD,IAAStC,GACP39D,EAAY,GAAG7M,OAEjB0jB,EAASxC,eAAc,CACrBrU,EAAY,GAAGwkC,OAAM,CAAExkC,EAAY,GAAG,OAGxC6W,EAASxC,eAAc,IAGzBwC,EAASxC,eAAerU,GAG1B6W,EAAQ,IAAOmpD,EAAYhgE,GAEtB6W,UASblhB,EAAKwtC,kBAAoB48B,EAMzBpqE,EAAKwqE,sBACyBlpE,IAA5B8F,EAAQqjE,gBAAgCrjE,EAAQqjE,gBAAkB,IAQpEzqE,EAAK0qE,kBAAoB,KAOzB1qE,EAAK2qE,eAAiB,KAOtB3qE,EAAK4qE,aAAe,KAOpB5qE,EAAK6qE,cAAgB,KAOrB7qE,EAAK8qE,YAAc,KAOnB9qE,EAAK+qE,kBAAoB,KASzB/qE,EAAKgrE,uBAAyB5jE,EAAQ6jE,eAClC7jE,EAAQ6jE,eAAiB7jE,EAAQ6jE,eACjC,GAOJjrE,EAAKkrE,SAAQ,IAAOC,GAAA7nE,QAAW,CAC7BpE,OAAM,IAAMksE,GAAA9nE,QAAY,CACtBu/D,iBAAiB,EACjBrD,QAAOp4D,EAAQo4D,OAAQp4D,EAAQo4D,QAEjCv1D,MAAO7C,EAAQ6C,MAAQ7C,EAAQ6C,OAyqB7BykC,EAASD,cACEJ,EAAS7gC,UACjBkhC,EAAOL,EAAQ7sB,cAAcxE,aA1qBlCoyB,wBAAwB,IAQ1BpvC,EAAK6gB,cAAgBzZ,EAAQikE,aAM7BrrE,EAAKsrE,WAAalkE,EAAQmkE,UAAYnkE,EAAQmkE,UAAYhE,GAM1DvnE,EAAKwrE,mBACDpkE,EAAQqkE,SACVzrE,EAAKwrE,mBAAqBpE,GAE1BpnE,EAAKwrE,mBAAqBpkE,EAAQskE,kBAC9BtkE,EAAQskE,kBACRlE,GAGNxnE,EAAKgF,kBAAkBid,GAA4BjiB,EAAK2rE,uBA5TzCvD,GAAAS,EAAAhpE,GAqUjBgpE,EAAArsE,UAAAg3B,OAAM,SAACrL,GACLtoB,EAAArD,UAAMg3B,OAAMvzB,KAAA7D,KAAC+rB,QACRwjD,gBAQP9C,EAAArsE,UAAAovE,WAAU,uBACIV,UASdrC,EAAArsE,UAAA0E,YAAW,SAACL,GACNA,EAAM4nB,cAActsB,OAASyF,GAE/Bf,EAAM4nB,cAAchsB,sBAEjB2sE,UAAShtE,KACPstE,QAAU1B,IAAU5rE,KAASovE,mBAAmB3qE,OACnDgrE,EAAOhrE,EAAM1E,OAASgtB,GAAoBK,YAC1Cg9C,GAAO,QAEH4C,WAAShtE,KACV8sE,eACLroE,EAAM1E,OAASgtB,GAAoBI,cAEvBuiD,KAAKC,MACV3vE,KAAQ8sE,eAAa9sE,KAASouE,uBAC9BxB,QAAUnoE,EAAMmoB,WAChB+/C,eAAa3sE,KAASgtE,UAC3ByC,GAAO,QAEF3C,mBAAgB5nE,OAEdynE,oBAAuCznE,IAA1BlF,KAAS6sE,eAC7B+C,aAAY5vE,KAAM6sE,mBACbA,kBAAe3nE,gBAIjB8nE,WACLvoE,EAAM1E,OAASgtB,GAAoBI,aACX,OADsBntB,KACzCuuE,qBAEAsB,cAAcprE,EAAM8H,YACzB69D,GAAO,QAEF4C,WACLvoE,EAAM1E,OAASgtB,GAAoBM,YAEnC+8C,GAAO,EACEqF,GAAIzvE,KAASo4B,kBAAoB,GAC1CgyC,EAAO3lE,EAAM1E,OAASgtB,GAAoBK,cAClCptB,KAASgtE,gBACV8C,mBAAmBrrE,QACfkoE,eAEPloE,EAAM4nB,cAAchsB,mBAGS,UAA/BoE,EAAM4nB,cAAco/C,aACnBhnE,EAAM1E,OAASgtB,GAAoBI,kBACZjoB,IADuBlF,KACxC6sE,eAA0B7sE,KAE5B8vE,mBAAmBrrE,GAEjBA,EAAM1E,OAASgtB,GAAoBG,WAC5Ck9C,GAAO,GAGF3mE,EAAArD,UAAM0E,YAAWjB,KAAA7D,KAACyE,IAAU2lE,GAQrCqC,EAAArsE,UAAAu3B,gBAAe,SAAClzB,eACTkoE,eAAa3sE,KAASgtE,eAElBA,gBACFJ,QAAUnoE,EAAMmoB,WACX0hD,mBAAiBtuE,KACpB+vE,cAActrE,EAAM8H,aAEpB,QACO2iE,WAAWzqE,SACpBqoE,cAAgB4C,KAAKC,WACrB9C,aAAemD,WAAU,gBAErBF,mBAAkB,IACjBG,GAAA/oE,QACF6lB,GAAoBK,YACpB3oB,EAAMsnB,IACNtnB,EAAM4nB,eACN,EACA5nB,EAAMwnB,cAGVrmB,KAAI5F,MAAAA,KACDouE,uBAEFxB,QAAUnoE,EAAMmoB,OACd,SAEFkgD,mBAAgB5nE,GACd,IASXunE,EAAArsE,UAAA03B,cAAa,SAACrzB,OACR2lE,GAAO,KAEoB,SAAtBhyC,0BACEy0C,eACP+C,aAAY5vE,KAAM6sE,mBACbA,kBAAe3nE,QAGjB4qE,mBAAmBrrE,QAEfkoE,cAAa,KACduD,GAAclwE,KAASsuE,kBACzB4B,GAAclwE,KACX+vE,cAActrE,EAAM8H,aAEtB2jE,GAAclwE,KAASgtE,UAAShtE,KAC9BmwE,qBAECnD,WACJkD,GAAclwE,KAASstE,QAAU1B,UAE1BwE,UAAU3rE,EAAMmoB,YACdkhD,iBAAiBrpE,IAAKzE,KACxBmwE,qBAGFN,cAAcprE,EAAM8H,aAG7B69D,GAAO,YACO4C,WAAShtE,KAClBqwE,sBAIJjG,GAAIpqE,KAASwtE,YAChB/oE,EAAMpE,iBAED+pE,GAQTqC,EAAArsE,UAAA0vE,mBAAkB,SAACrrE,WACZsoE,aAAetoE,EAAM4nB,cAAco/C,iBAEjCmB,WAAO5sE,KACJgtE,WAAShtE,KAAS2sE,eAAa3sE,KAC/BgtE,YAAShtE,KAAU2sE,eAAa,KAElC2D,EAAMtwE,KAAQ4sE,QACd2D,EAAU9rE,EAAMmoB,MAChBle,EAAK4hE,EAAO,GAAKC,EAAQ,GACzB5hE,EAAK2hE,EAAO,GAAKC,EAAQ,GACzB9sD,EAAkB/U,EAAKA,EAAKC,EAAKA,UAClCg+D,cAAa3sE,KAAQgtE,UACtBvpD,EAAezjB,KAAQ4uE,uBACvBnrD,GAAezjB,KAAS4uE,6BAClBjC,cAAa,YAKhB2B,kBAAiBtuE,KACnBwwE,eAAe/rE,EAAM8H,iBAErBkkE,2BAA2BhsE,IAUpCgoE,EAAArsE,UAAAgwE,UAAS,SAACxjD,OACJ8jD,GAAK,UACAnC,eAAc,KACjBoC,GAAkB,EAClBC,EAA4B,MAAStC,mBACnCuC,EAAI7wE,KAAQstE,SACduD,IAASjF,GACX8E,GAAK,UACIG,IAASjF,GAClB8E,EAAmC,IAAjC1wE,KAAQyuE,cAAcrtE,eACfyvE,IAASjF,GAClB+E,EAAe3wE,KAAQyuE,cAAcrtE,OAAMpB,KAAQ0tE,mBAC1CmD,IAASjF,GAAY,KACxBkF,EAAY9wE,KAAsCyuE,cACxDkC,EAAkBG,EAAa,GAAG1vE,OAAMpB,KAAQ0tE,WAChDkD,EAA4B,CAC1BE,EAAa,GAAG,GAChBA,EAAa,GAAGA,EAAa,GAAG1vE,OAAS,OAGzCuvE,UACI5kD,EAAG/rB,KAAQi3B,SACR51B,EAAI,EAAGuB,EAAKguE,EAA6BxvE,OAAQC,EAAIuB,EAAIvB,IAAC,KAC3D0vE,EAAmBH,EAA6BvvE,GAChD2vE,EAAcjlD,EAAIklD,uBAAuBF,GACzCriE,EAAKke,EAAM,GAAKokD,EAAY,GAC5BriE,EAAKie,EAAM,GAAKokD,EAAY,GAC5B5D,EAAaptE,KAAQgtE,UAAY,EAAChtE,KAAQmtE,kBAChDuD,EAAK/mE,KAAKqP,KAAKtK,EAAKA,EAAKC,EAAKA,IAAOy+D,EAC/B,MACCkB,kBAAoByC,iBAM1BL,GAOTjE,EAAArsE,UAAAqwE,2BAA0B,SAAChsE,OACnBwJ,EAAcxJ,EAAM8H,WAAWiC,aAC3BggE,aAIaxuE,KAAQwuE,aAAappD,cAC1B9C,eAAerU,SAJ1BugE,aAAY,IAAO0C,GAAAhqE,QAAO,IAAKooB,GAAApoB,QAAM+G,SACrCkjE,0BAWT1E,EAAArsE,UAAAgxE,gCAA+B,SAACtsD,QACpB4pD,cAAW1uE,KACd0uE,YAAW,IAAOwC,GAAAhqE,aAEnBmqE,EAAOvsD,EAASoN,cAAc,GAChCo/C,EAActxE,KAAQ0uE,YAAYtpD,cACjCksD,GAOHA,EAAejvD,mBACbgvD,EAAKnvD,YACLmvD,EAAK3vD,sBAEP4vD,EAAe1qE,YAVf0qE,EAAc,IAAO9iD,GAAAtnB,QACnBmqE,EAAK3vD,qBACL2vD,EAAKnvD,kBAEFwsD,YAAY3pD,YAAYusD,KAejC7E,EAAArsE,UAAA2vE,cAAa,SAAC9lD,OACN9P,EAAUna,KAAQi3B,SAASs6C,UAAU/N,qBACtC8K,kBAAoBrkD,OAChBqjD,QAAU1B,GAAU5rE,KACtByuE,cAAgBxkD,EAAMzb,aACb8+D,QAAU1B,SACnB6C,cAAa,EAAKxkD,EAAMzb,QAASyb,EAAMzb,eACvCmgE,kBAAiB3uE,KAAQyuE,cAAc,SAEvCA,cAAa,CAAIxkD,EAAMzb,QAASyb,EAAMzb,cAEpCmgE,oBAAiB3uE,KACnB0uE,YAAW,IAAOwC,GAAAhqE,QAAO,IAAKsnB,GAAAtnB,QAAUlH,KAAM2uE,yBAE/C7pD,EAAQ9kB,KAAQoxC,kBAAiBpxC,KAChCyuE,mBACLvpE,EACAiV,QAEGo0D,eAAc,IAAO2C,GAAAhqE,aACjBud,eAAazkB,KACfuuE,eAAerpD,gBAAellB,KAAMykB,oBAEtC8pD,eAAexpD,YAAYD,QAC3BqsD,6BACA3sE,cAAa,IACZsnE,GAAUD,GAAuB7rE,KAAOuuE,kBAShD9B,EAAArsE,UAAAowE,eAAc,SAACjkE,OAIT0B,EAAa8Y,EAHXgF,EAAG/rB,KAAQi3B,SACXnS,EAAQ9kB,KAAQuuE,eAAenpD,cAC/BjL,EAAa4R,EAAIwlD,UAAU/N,sBAExB8J,QAAU1B,GACjB7kD,EAAI/mB,KAAQyuE,mBACEnB,QAAU1B,IAExB7kD,GADA9Y,EAA0CjO,KAAOyuE,cAAe,IAC7CxgE,EAAY7M,OAAS,QAC/BgvE,UAAUrkD,EAAIklD,uBAAuB1kE,MAE5CA,EAAUvM,KAAQsuE,kBAAkB9/D,UAItCuY,GADA9Y,EAAWjO,KAAQyuE,eACAxgE,EAAY7M,OAAS,GAE1C2lB,EAAK,GAAKxa,EAAW,GACrBwa,EAAK,GAAKxa,EAAW,QAChB6kC,kBAAiBpxC,KACgByuE,cACpC3pD,EACA3K,QAEOq0D,eACcxuE,KAAQwuE,aAAappD,cAC1B9C,eAAe/V,MAG/BuY,EAASlE,YAAchhB,GAAoBI,KACtCstE,QAAU1B,GAAY5rE,KAEtBoxE,gCAAwDtsD,gBAC/C6pD,kBAAiB,CACX3uE,KAAQ0uE,YAAYtpD,cACzB9C,eAActiB,KAAM2uE,wBAEhCwC,yBAQP1E,EAAArsE,UAAAyvE,cAAa,SAACtjE,OAGRm9B,EACAz7B,EAHE6W,EAAQ9kB,KAAQuuE,eAAenpD,cAC/BjL,EAAUna,KAAQi3B,SAASs6C,UAAU/N,gBAGrCqN,EAAI7wE,KAAQstE,MACduD,IAASjF,IAAoBiF,IAASjF,SACnC0C,kBAAoB/hE,EAAWiC,SACpCP,EAAWjO,KAAsCyuE,eACjCrtE,QAAMpB,KAAS4tE,kBACpBZ,UACP/+D,EAAY+Y,MAEZ0iB,GAAO,GAGXz7B,EAAY3K,KAAKiJ,EAAWiC,cACvB4iC,kBAAkBnjC,EAAa6W,EAAU3K,IACrC02D,IAASjF,MAClB39D,EAA0CjO,KAAOyuE,cAAe,IAChDrtE,QAAMpB,KAAS4tE,kBACpBZ,UACP/+D,EAAY+Y,MAEZ0iB,GAAO,GAGXz7B,EAAY3K,KAAKiJ,EAAWiC,SACxBk7B,IAAI1pC,KACDsuE,kBAAoBrgE,EAAY,SAElCmjC,kBAAiBpxC,KAAMyuE,cAAe3pD,EAAU3K,SAElDg3D,wBACDznC,GAAI1pC,KACDmwE,iBAST1D,EAAArsE,UAAAoxE,gBAAe,mBACHjD,oBAKNtgE,EAFE6W,EAAQ9kB,KAAQuuE,eAAenpD,cAC/BjL,EAAUna,KAAQi3B,SAASs6C,UAAU/N,gBAErCqN,EAAI7wE,KAAQstE,SACduD,IAASjF,IAAoBiF,IAASjF,GAAW,KACnD39D,EAAWjO,KAAsCyuE,eACrClpE,QAAO,EAAI,GACnB0I,EAAY7M,QAAU,EAAC,MACpBktE,kBAAoBrgE,EAAYA,EAAY7M,OAAS,GAAGoN,YACvDuiE,EAAgB/wE,KAAQsuE,kBAAkB9/D,QAChDP,EAAYA,EAAY7M,OAAS,GAAK2vE,OACjCvC,aAAazpD,YAAW,IAAKuK,GAAApoB,QAAM6pE,SAErC3/B,kBAAkBnjC,EAAa6W,EAAU3K,GAC1C2K,EAASlE,YAAchhB,GAAoBI,KAAS0uE,aAAW1uE,KAC5DoxE,gCAAwDtsD,WAEtD+rD,IAASjF,GAAY,EAC9B39D,EAA0CjO,KAAOyuE,cAAe,IACpDlpE,QAAO,EAAI,OACjB+rE,EAActxE,KAAQ0uE,YAAYtpD,iBACpCnX,EAAY7M,QAAU,EAAC,CACnB2vE,EAAmB9iE,EAAYA,EAAY7M,OAAS,GAAGoN,QAC7DP,EAAYA,EAAY7M,OAAS,GAAK2vE,OACjCvC,aAAazpD,YAAW,IAAKuK,GAAApoB,QAAM6pE,IAE1CO,EAAehvD,eAAerU,QACzBmjC,kBAAiBpxC,KAAMyuE,cAAe3pD,EAAU3K,GAG5B,IAAvBlM,EAAY7M,QAAYpB,KACrBqwE,oBAGFc,0BASP1E,EAAArsE,UAAA+vE,cAAa,eACLsB,EAAazxE,KAAQ0xE,mBACtBD,OAGDxjE,EAAWjO,KAAQyuE,cACjB3pD,EAAW2sD,EAAcrsD,cACzBjL,EAAUna,KAAQi3B,SAASs6C,UAAU/N,qBAClC8J,QAAU1B,IAEjB39D,EAAY+Y,WACPoqB,kBAAkBnjC,EAAa6W,EAAU3K,SAChCmzD,QAAU1B,KAEM39D,EAAa,GAAG+Y,WACzCoqB,kBAAkBnjC,EAAa6W,EAAU3K,GAC9ClM,EAAc6W,EAAS/C,uBAIhBsrD,QAAUztE,EACjB6xE,EAAc1sD,YAAW,IACnBwP,GAAArtB,QAAU,CAAiC+G,UAEnCo/D,QAAUztE,EACxB6xE,EAAc1sD,YAAW,IACnB4sD,GAAAzqE,QAAe,CAAgC+G,UAEvCo/D,QAAUztE,GACxB6xE,EAAc1sD,YAAW,IACnB6sD,GAAA1qE,QAAY,CAAgC+G,UAK/CzJ,cAAa,IAAKsnE,GAAUD,GAAuB4F,SAG/CvE,WAASltE,KACXktE,UAAU5pE,KAAKmuE,QAEbxE,SAAOjtE,KACTitE,QAAQ5F,WAAWoK,KAS5BhF,EAAArsE,UAAAsxE,cAAa,gBACNpD,kBAAoB,SACnBmD,EAAazxE,KAAQuuE,2BACtBA,eAAiB,UACjBC,aAAe,UACfE,YAAc,UACdI,SAASryC,YAAY+B,OAAM,GACzBizC,GAOThF,EAAArsE,UAAAiwE,aAAY,eACJoB,EAAazxE,KAAQ0xE,gBACvBD,GAAazxE,KACVwE,cAAa,IAAKsnE,GAAUD,GAAyB4F,KAa9DhF,EAAArsE,UAAAyxE,kBAAiB,SAAC5jE,OAOZ6iE,EANED,EAAI7wE,KAAQstE,MACZwE,GAAU9xE,KAASuuE,kBACrBuD,GAAU9xE,KACP+vE,cAAc9hE,EAAY,IAI7B4iE,IAASjF,IAAoBiF,IAASjF,GACxCkF,EAAY9wE,KAAsCyuE,sBACzCoC,IAASjF,UAClBkF,EAAY9wE,KACLyuE,eAAazuE,KAASyuE,cAAcrtE,OACTpB,KAAOyuE,cAAe,GAAC,GAMvDqD,GACFhB,EAAazqC,QAIfyqC,EAAa9pD,cAGJ3lB,EAAI,EAAGA,EAAI4M,EAAY7M,OAAQC,IAACrB,KAClC6vE,cAAc5hE,EAAY5M,QAG3B0wE,EAAS9jE,EAAYA,EAAY7M,OAAS,QAE3CyuE,cAAckC,QACdvB,eAAeuB,IAetBtF,EAAArsE,UAAAihE,OAAM,SAACpvB,OAEC3mB,EADW2mB,EAAQ7sB,mBAEpBmpD,eAAiBt8B,OACjBw8B,cAAgBnjD,EAAWvJ,qBAC1BgF,EAAI/mB,KAAQyuE,cAAazuE,KAAMyuE,cAAcrtE,OAAS,QACvDktE,kBAAoBvnD,EAAKvY,aACzBigE,cAAcnrE,KAAKyjB,EAAKvY,cACxBggE,aAAY,IAAO0C,GAAAhqE,QAAO,IAAKooB,GAAApoB,QAAM6f,SACrCoqD,6BACA3sE,cAAa,IACZsnE,GAAUD,GAAuB7rE,KAAOuuE,kBAQhD9B,EAAArsE,UAAA+wE,sBAAqB,eACba,EAAc,QACXzD,gBACPyD,EAAe1uE,KAAItD,KAAMuuE,qBAElBG,aACPsD,EAAe1uE,KAAItD,KAAM0uE,kBAElBF,cACPwD,EAAe1uE,KAAItD,KAAMwuE,kBAErByD,EAAajyE,KAAQ8uE,SAASryC,YACpCw1C,EAAczzC,OAAM,GACpByzC,EAAcvM,YAAYsM,IAM5BvF,EAAArsE,UAAAmvE,aAAY,eACJxjD,EAAG/rB,KAAQi3B,SACXE,EAAMn3B,KAAQg3B,YACfjL,GAAQoL,GAAMn3B,KACZqwE,oBAEFvB,SAAS13C,OAAOD,EAASpL,EAAM,OAExC0gD,EAj8BA,CAAmByF,GAAAhrE,mGCxLnBirE,GACS,UADTA,GAE4B,mfCkI5BC,GA/EA,SAAA3uE,GAGK,SACH4uE,EAAYz7C,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,GAEnCkF,EAAcx5B,EAAM,GAAK0I,iBAExB8wB,EAAYw2C,eACZx2C,EAAYy2C,wBACnB3uE,EAAAH,EAAAI,KAAA7D,KAAM87B,IAAW97B,MAKZoG,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAEL5C,EAAK4uE,gBAA+BttE,IAApB8F,EAAQsnE,QAAwBtnE,EAAQsnE,QAAU,GAClE1uE,EAAK6uE,+BACgCvtE,IAAnC8F,EAAQunE,wBACJvnE,EAAQunE,iCA/BUG,GAAAL,EAAA5uE,GA0C1B4uE,EAAAjyE,UAAAuyE,WAAU,uBAC2BtqE,IAAI8pE,KASzCE,EAAAjyE,UAAAoyE,WAAU,SAACF,QACJxpE,IAAIqpE,GAAsBG,IASjCD,EAAAjyE,UAAAwyE,0BAAyB,uBAEhBvqE,IAAI8pE,KAUbE,EAAAjyE,UAAAqyE,0BAAyB,SAACF,QACnBzpE,IAAIqpE,GAAyCI,IAEtDF,EA7EA,CAA4Bl+B,GAAAjtC,kDCrDzB,IACH2rE,GAAA,WAMK,SACHC,EAAY5jE,EAAME,EAAMD,EAAME,GAGzBrP,KACEkP,KAAOA,EAITlP,KACEoP,KAAOA,EAITpP,KACEmP,KAAOA,EAITnP,KACEqP,KAAOA,SAOdyjE,EAAA1yE,UAAAyqE,SAAQ,SAAChnB,eACKhkC,WAAWgkC,EAAU,GAAIA,EAAU,KAOjDivB,EAAA1yE,UAAA2yE,kBAAiB,SAAChvB,eAET70C,MAAQ60C,EAAU70C,MACvB60C,EAAU30C,MAAIpP,KAASoP,MAAIpP,KACtBmP,MAAQ40C,EAAU50C,MACvB40C,EAAU10C,MAAIrP,KAASqP,MAS3ByjE,EAAA1yE,UAAAyf,WAAU,SAACrT,EAAGC,eACAyC,MAAQ1C,GAAKA,GAACxM,KAASoP,MAAIpP,KAASmP,MAAQ1C,GAAKA,GAACzM,KAASqP,MAOzEyjE,EAAA1yE,UAAAuZ,OAAM,SAACoqC,eAEE70C,MAAQ60C,EAAU70C,MAAIlP,KACtBmP,MAAQ40C,EAAU50C,MAAInP,KACtBoP,MAAQ20C,EAAU30C,MAAIpP,KACtBqP,MAAQ00C,EAAU10C,MAO3ByjE,EAAA1yE,UAAAihE,OAAM,SAACtd,GACDA,EAAU70C,KAAIlP,KAAQkP,OAAIlP,KACvBkP,KAAO60C,EAAU70C,MAEpB60C,EAAU30C,KAAIpP,KAAQoP,OAAIpP,KACvBoP,KAAO20C,EAAU30C,MAEpB20C,EAAU50C,KAAInP,KAAQmP,OAAInP,KACvBmP,KAAO40C,EAAU50C,MAEpB40C,EAAU10C,KAAIrP,KAAQqP,OAAIrP,KACvBqP,KAAO00C,EAAU10C,OAO1ByjE,EAAA1yE,UAAA4yE,UAAS,uBACK3jE,KAAIrP,KAAQmP,KAAO,GAMjC2jE,EAAA1yE,UAAA4jC,QAAO,uBACQyK,gBAAiBukC,cAMhCF,EAAA1yE,UAAAquC,SAAQ,uBACMr/B,KAAIpP,KAAQkP,KAAO,GAOjC4jE,EAAA1yE,UAAA8pB,WAAU,SAAC65B,eAEF70C,MAAQ60C,EAAU30C,MAAIpP,KACtBoP,MAAQ20C,EAAU70C,MAAIlP,KACtBmP,MAAQ40C,EAAU10C,MAAIrP,KACtBqP,MAAQ00C,EAAU50C,MAG7B2jE,EA3HA,YAqIgBG,GAAe/jE,EAAME,EAAMD,EAAME,EAAM00C,eACnC7+C,IAAd6+C,GACFA,EAAU70C,KAAOA,EACjB60C,EAAU30C,KAAOA,EACjB20C,EAAU50C,KAAOA,EACjB40C,EAAU10C,KAAOA,EACV00C,OAEI8uB,GAAU3jE,EAAME,EAAMD,EAAME,OAI3C6jE,GAAeL,GClJfM,GACQ,EADRA,GAEW,EAFXA,GAGU,EAHVA,GAQS,EARTA,GASS,4dCYTC,GAAA,SAAA3vE,GAGK,SACH4vE,EAAYC,OAAZ1vE,EACEH,EAAAI,KAAA7D,KAAMszE,IAAStzE,YAMf4D,EAAK2vE,eAAgB,EAMrB3vE,EAAKm4D,gBAAkB,KAMvBn4D,EAAK4vE,mBAML5vE,EAAK6vE,mBAAqB,KAM1B7vE,EAAK8vE,iBAML9vE,EAAK+vE,cAAa,GAMlB/vE,EAAKgwE,WAAY,EAMjBhwE,EAAKiwE,W7GkHCtkE,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,G6G5GnC3L,EAAKkwE,cAAa,IAAOZ,GAAU,EAAG,EAAG,EAAG,YA3DVa,GAAAV,EAAA5vE,GAmEpC4vE,EAAAjzE,UAAA4zE,eAAc,SAACpwB,OACP0vB,EAAStzE,KAAQqkD,WACjB4vB,EAAYrwB,EAAKlnB,WACjB61C,EAAyBe,EAAUV,mCAEvCqB,GAAad,IACbc,GAAad,IACZc,GAAad,KAAoBZ,GAWtCc,EAAAjzE,UAAA8zE,QAAO,SAACC,EAAG3nE,EAAGC,EAAGwf,OACTyX,EAAazX,EAAWyX,WACxBvpB,EAAa8R,EAAWyP,UAAUvhB,WAClCm5D,EAAStzE,KAAQqkD,WAEnBT,EADe0vB,EAAU72C,YACPy3C,QAAQC,EAAG3nE,EAAGC,EAAGi3B,EAAYvpB,UAC/CypC,EAAKlnB,YAAcy2C,KAChBG,EAAUV,4BAGJU,EAAUX,aAAe,SAE7BiB,WAAY,GAHjBhwB,EAAKigB,SAASsP,UAMRa,eAAepwB,KACvBA,EAAOA,EAAKwwB,kBAEPxwB,GASTyvB,EAAAjzE,UAAAsjD,mBAAkB,SAACC,EAAOhoB,EAAMioB,gBACrBowB,eAAepwB,IACfngD,EAAArD,UAAMsjD,mBAAkB7/C,KAAA7D,KAAC2jD,EAAOhoB,EAAMioB,IAUjDyvB,EAAAjzE,UAAA68B,aAAY,SAAChR,gBACGo4B,WAAW5nB,aAS3B42C,EAAAjzE,UAAA88B,YAAW,SAACjR,EAAY9rB,OAChBs7B,EAAaxP,EAAWkR,iBAAiBlR,EAAWgxC,YACpDvhC,EAAYzP,EAAWyP,UACvBvhB,EAAauhB,EAAUvhB,WACvBk6D,EAAiB34C,EAAUtqB,WAC3BkjE,EAAa54C,EAAUvqB,OACvBE,EAAWqqB,EAAUrqB,SACrBqyB,EAAazX,EAAWyX,WAExB4vC,EAAStzE,KAAQqkD,WACjBkwB,EAAajB,EAAU72C,YACvB+3C,EAAiBD,EAAW1tE,cAC5BiO,EAAWy/D,EAAWE,yBAAyBt6D,GAC/Cg6D,EAAIr/D,EAAS4/D,kBAAkBL,EAAgBE,EAAWI,YAC1DC,EAAiB9/D,EAASyhD,cAAc4d,GAE1CjmE,EAAS+d,EAAW/d,OAClB44C,EACJrrB,EAAWvtB,QAAUiP,GAAese,EAAWvtB,OAAQiM,GACrD2sC,IACF54C,EAASmE,GACPnE,EACAiP,GAAese,EAAWvtB,OAAQiM,SAIhC06D,EAAiBN,EAAWO,kBAAkBpxC,GAGhD/wB,EAAQhJ,KAAK4d,MAAM0E,EAAW3a,KAAK,GAAKujE,GACxCjiE,EAASjJ,KAAK4d,MAAM0E,EAAW3a,KAAK,GAAKujE,MAEzCxjE,EAAQ,KACJC,EAAO3H,KAAK4d,MAAM5d,KAAKqP,KAAKrG,EAAQA,EAAQC,EAASA,IAC3DD,EAAQrB,EACRsB,EAAStB,MAGL5C,EAAMkmE,EAAiBjiE,EAAS,EAAIkiE,EACpClmE,EAAMimE,EAAiBhiE,EAAU,EAAIiiE,EACrCE,EAAY,CAChBT,EAAW,GAAK5lE,EAChB4lE,EAAW,GAAK3lE,EAChB2lE,EAAW,GAAK5lE,EAChB4lE,EAAW,GAAK3lE,GAGZo1C,EAAYjvC,EAASkgE,0BAA0B9mE,EAAQimE,GAKvDc,EAAc,GACpBA,EAAed,GAAC,OAEVe,EAAel1E,KAAQ8jD,uBAC3BywB,EACAp6D,EACA86D,GAGIpB,EAAS7zE,KAAQ6zE,UACjBsB,EAAYn1E,KAAQ8zE,mBACrBF,WAAY,UACRpnE,EAAIu3C,EAAU70C,KAAM1C,GAAKu3C,EAAU30C,OAAQ5C,EAAC,IAAA,IAC1CC,EAAIs3C,EAAU50C,KAAM1C,GAAKs3C,EAAU10C,OAAQ5C,EAAC,KAC7Cm3C,EAAI5jD,KAAQk0E,QAAQC,EAAG3nE,EAAGC,EAAGwf,WAC1B+nD,eAAepwB,GAAI,KACpBue,EAAM56D,GAAMvH,SACd4jD,EAAKlnB,YAAcy2C,GAAgB,CACrC8B,EAAed,GAAGvwB,EAAKC,UAAUjrB,YAAcgrB,MACzCwxB,EAAexxB,EAAKwxB,aAAajT,QAE/ByR,YACLwB,IAAqD,IAAzCp1E,KAAS2zE,cAAcpvE,QAAQq/C,KAAY5jD,KAEnD4zE,WAAY,MAGuB,IAAxChwB,EAAKyxB,SAASlT,EAAKl2C,EAAWqpD,MAAW,aAMzCC,EAAiBzgE,EAAS0gE,2BAC9B5xB,EAAKC,UACLsxB,EACAtB,GAGE4B,GAAU,EACVF,IACFE,EAAUP,EAAgBf,EAAI,EAAGoB,IAE9BE,GACH3gE,EAAS4gE,gCACP9xB,EAAKC,UACLqxB,EACAC,EACAtB,OAMF8B,EAAcf,EAAiBP,EAGrC3nE,GAAgB1M,KACTqlD,eACLp5B,EAAW3a,KAAK,GAAK,EACrB2a,EAAW3a,KAAK,GAAK,EACrB,EAAIujE,EACJ,EAAIA,EACJxjE,GACCsB,EAAQ,GACRC,EAAS,OAGNm5C,EAAkBx+C,GAAiBvN,KAAMqlD,qBAE1CG,aAAarlD,EAAQ4rD,EAAiBtwB,EAAWxC,aAChD+R,EAAOhrC,KAAQgrC,QACf5E,EAAS4E,EAAQ5E,OAEvBh5B,GAAWpN,KAAM8kD,sBAAqB9kD,KAAOqlD,gBAG7C34C,GAAgB1M,KACTolD,cACLzyC,EAAQ,EACRC,EAAS,EACT+iE,EACAA,EACA,GACChjE,EAAQ,GACRC,EAAS,GAGRwzB,EAAOzzB,OAASA,GAASyzB,EAAOxzB,QAAUA,GAC5CwzB,EAAOzzB,MAAQA,EACfyzB,EAAOxzB,OAASA,QACD0yC,iBACfta,EAAQkc,UAAU,EAAG,EAAGv0C,EAAOC,GAG7Bk0C,GAAW9mD,KACR6lD,cAAc7a,EAAS/e,EAAY66B,GAG1CxkD,EAAO0oC,EAASupC,EAAW7Q,0BACtBjd,UAAUzb,EAAS/e,QAEnB0nD,cAAcvyE,OAAS,EACA,IAIxBw0E,EAAOC,EAAQC,EAHf9kB,EAAKzuD,OAAO8C,KAAK4vE,GAAgBlpD,IAAI4Z,QACzCqrB,EAAGzgC,KAAK1vB,GAIiB,IAAvB46B,EAAWxC,SAAaj5B,KACjBslD,kBACLivB,EAAWwB,UAAU9pD,EAAWyP,UAAUvhB,aAI5Cy7D,EAAK,GACLC,EAAM,IAHN7kB,EAAKA,EAAGxX,kBAKDn4C,EAAI2vD,EAAG5vD,OAAS,EAAGC,GAAK,IAAKA,EAAC,KAC/B20E,EAAWhlB,EAAG3vD,GACd40E,EAAuB1B,EAAW2B,iBACtCF,EACAtyC,EACAvpB,GAGIg8D,EADoBrhE,EAASyhD,cAAcyf,GACRpB,EACnCwB,EAAKH,EAAqB,GAAKE,EAAeR,EAC9CU,EAAKJ,EAAqB,GAAKE,EAAeR,EAC9CW,EAAkBxhE,EAASyhE,yBAC/B9lE,GAAWskE,GACXiB,GAEIQ,EAAmB1hE,EAAS2hE,mBAAmBH,GAC/ChqB,GAAShgD,GAActM,KAAMolD,cAAa,CAC7CyvB,GAAkB2B,EAAiB,GAAKzB,EAAa,IACpDH,EACDC,GAAkBE,EAAa,GAAKyB,EAAiB,IACpD5B,IAEE8B,GACJ7B,EAAiBN,EAAWoC,uBAAuBx8D,GAC/Cy8D,GAAc3B,EAAee,WACxBa,MAAgBD,GAAW,KAI9B/yB,IAHAD,EACJgzB,GAAYC,KAEShzB,UAGjBizB,GAASR,EAAgB,GAAKzyB,GAAU,GACxCkzB,GAAQptE,KAAK4d,MAAM+kC,GAAO,IAAMwqB,GAAS,GAAKV,GAC9CY,GAASV,EAAgB,GAAKzyB,GAAU,GACxCozB,GAAQttE,KAAK4d,MAAM+kC,GAAO,IAAM0qB,GAAS,GAAKX,GAG9CjrC,GAAI2rC,IAFJvqE,EAAI7C,KAAK4d,MAAM+kC,GAAO,GAAKwqB,GAASV,IAGpCz4C,GAAIs5C,IAFJxqE,EAAI9C,KAAK4d,MAAM+kC,GAAO,GAAK0qB,GAASX,IAGpCa,GAAa/C,IAAM6B,OAEnBZ,EACJ8B,IAA+D,IAAjDtzB,EAAKyxB,SAAS9tE,GAAMvH,MAAQisB,EAAWqpD,UAEjDM,EAAK,CAEP5qC,EAAQK,OACRyqC,EAAW,CAAItpE,EAAGC,EAAGD,EAAI4+B,GAAG3+B,EAAGD,EAAI4+B,GAAG3+B,EAAIkxB,GAAGnxB,EAAGC,EAAIkxB,YAC3CkxB,GAAI,EAAGjsD,GAAKgzE,EAAMx0E,OAAQytD,GAAIjsD,KAAMisD,GAAC,GACxCslB,IAAM6B,GAAYA,EAAWH,EAAOhnB,IAAC,KACjCvI,GAAOsvB,EAAM/mB,IACnB7jB,EAAQob,YAERpb,EAAQqb,OAAOyvB,EAAY,GAAIA,EAAY,IAC3C9qC,EAAQ0E,OAAOomC,EAAY,GAAIA,EAAY,IAC3C9qC,EAAQ0E,OAAOomC,EAAY,GAAIA,EAAY,IAC3C9qC,EAAQ0E,OAAOomC,EAAY,GAAIA,EAAY,IAE3C9qC,EAAQqb,OAAOC,GAAK,GAAIA,GAAK,IAC7Btb,EAAQ0E,OAAO4W,GAAK,GAAIA,GAAK,IAC7Btb,EAAQ0E,OAAO4W,GAAK,GAAIA,GAAK,IAC7Btb,EAAQ0E,OAAO4W,GAAK,GAAIA,GAAK,IAC7Btb,EAAQsb,OAGZsvB,EAAMtyE,KAAKwyE,GACXD,EAAOvyE,KAAK0yE,QAEZhrC,EAAQkc,UAAU16C,EAAGC,EAAG2+B,GAAGzN,SAG1Bw5C,cACHvzB,EACA33B,EACAzf,EACAC,EACA2+B,GACAzN,GACA+4C,GACAQ,GACAz7C,EAAWxC,SAET28C,IAAUR,GACZpqC,EAAQY,eACH+nC,cAAcyD,QAAQxzB,SAEtB+vB,cAAcrwE,KAAKsgD,QAErByzB,gBAAgBprD,EAAWqrD,UAAW/C,EAAY3wB,gBAItD8vB,iBAAmBc,OACnBrvB,mBAAqByvB,OACrBrB,eAAavzE,KACV+7D,kBAAoBhsD,GAAM/P,KAAM+7D,gBAAiBgZ,QACpDhZ,gBAAkBgZ,OAClBvB,mBAAqB9vC,OACrB+vC,mBAAqBt5D,OAErBo9D,kBACHtrD,EACAsoD,EACAz/D,EACA4uB,EACAvpB,EACAjM,EACAimE,EACAb,EAAUX,mBAEP6E,oBAAoBvrD,EAAYsoD,QAEhC7tB,WAAW1b,EAAS/e,GAErBwP,EAAWvtB,QACb88B,EAAQY,UAGNmgB,IAAoB3lB,EAAOv4B,MAAM5B,YACnCm6B,EAAOv4B,MAAM5B,UAAY8/C,QAGf7G,WAcdmuB,EAAAjzE,UAAA+2E,cAAa,SAACvzB,EAAM33B,EAAYzf,EAAGC,EAAG2+B,EAAGzN,EAAGuhC,EAAQgY,EAAYj+C,OACxDoU,EAAKrtC,KAAQy3E,aAAa7zB,MAC3BvW,OAGC80B,EAAM56D,GAAMvH,MACZ03E,EAAYR,EAAatzB,EAAKyxB,SAASlT,EAAKl2C,EAAWqpD,MAAQ,EAC/D1nC,EAAQ3U,EAAUy+C,EAClBC,EAAe/pC,IAAK5tC,KAAUgrC,QAAQM,YACxCqsC,SACG3sC,QAAQK,YACRL,QAAQM,YAAcsC,QAExB5C,QAAQW,UACX0B,EACA6xB,EACAA,EACA7xB,EAAM16B,MAAQ,EAAIusD,EAClB7xB,EAAMz6B,OAAS,EAAIssD,EACnB1yD,EACAC,EACA2+B,EACAzN,GAGEg6C,GAAY33E,KACTgrC,QAAQY,UAEG,IAAd8rC,EACFzrD,EAAWwK,SAAU,EACZygD,GACTtzB,EAAKg0B,cAAczV,KAOvBkR,EAAAjzE,UAAAqjC,SAAQ,eACAuH,EAAOhrC,KAAQgrC,eACdA,EAAUA,EAAQ5E,OAAS,MASpCitC,EAAAjzE,UAAAq3E,aAAY,SAAC7zB,UACJA,EAAKngB,YAQd4vC,EAAAjzE,UAAAo3E,oBAAmB,SAACvrD,EAAYsoD,MAC1BA,EAAW3e,iBAAc,CAKxB,IACGiiB,EAAkB,SAAaC,EAAY/rD,EAAKgsD,OAC9CC,EAAgBzwE,GAAOuwE,GACzBE,KAAiBD,EAAWT,WAC9BQ,EAAWG,YACTF,EAAWr8C,UAAUvhB,WACrB49D,EAAWT,UAAUU,KAGzBpyE,KAAK,KAAM2uE,GAEbtoD,EAAWisD,oBAAoB50E,KAE3Bu0E,KAYRxE,EAAAjzE,UAAAi3E,gBAAe,SAACC,EAAW/C,EAAY3wB,OAE/Bo0B,EAAgBzwE,GAAOgtE,GACvByD,KAAiBV,IACrBA,EAAUU,GAAa,IAEzBV,EAAUU,GAAep0B,EAAKu0B,WAAY,GAqB5C9E,EAAAjzE,UAAAm3E,kBAAiB,SACftrD,EACAsoD,EACAz/D,EACA4uB,EACAvpB,EACAjM,EACA8nE,EACA1D,EACA8F,OAEMJ,EAAgBzwE,GAAOgtE,GACvByD,KAAiB/rD,EAAWosD,cAChCpsD,EAAWosD,YAAYL,GAAa,QAMlCp0B,EAAMG,EAAW6wB,EAAgBpoE,EAAGC,EAAG0nE,EAJrCkE,EAAcpsD,EAAWosD,YAAYL,GACrCM,EAAYrsD,EAAWqsD,UAEzBC,EAAY,MAEXpE,EAHWr/D,EAAS0lB,aAGP25C,GAAK6B,IAAY7B,MACjCpwB,EAAYjvC,EAASkgE,0BAA0B9mE,EAAQimE,EAAGpwB,GAC1D6wB,EAAiB9/D,EAASyhD,cAAc4d,GACnC3nE,EAAIu3C,EAAU70C,KAAM1C,GAAKu3C,EAAU30C,OAAQ5C,MACzCC,EAAIs3C,EAAU50C,KAAM1C,GAAKs3C,EAAU10C,OAAQ5C,EAC1CupE,EAAW7B,GAAK7B,KAChBiG,GACF30B,EAAO2wB,EAAWL,QAAQC,EAAG3nE,EAAGC,EAAGi3B,EAAYvpB,IACtCuiB,YAAcy2C,KACrBkF,EAAYz0B,EAAKu0B,WAAY,EACxBG,EAAUE,YAAY50B,EAAKu0B,WAC9BG,EAAUG,QAAO,CACf70B,EACAo0B,EACAljE,EAAS4jE,mBAAmB90B,EAAKC,WACjC+wB,UAImB1vE,IAArBkzE,GACFA,EAAiBx0B,IAGnB2wB,EAAWoE,QAAQxE,EAAG3nE,EAAGC,EAAG0N,GAKpCo6D,EAAWqE,gBAAgBL,EAAWp+D,IAE1Ck5D,EA/lBA,CAAsCrT,GAAA94D,SAqmBtCksE,GAAwBhzE,UAAUikD,aAElCw0B,GAAezF,6dC/lBf0F,GAlBA,SAAAr1E,GAGK,SACHs1E,EAAYniD,UACVnzB,EAAAI,KAAA7D,KAAM42B,IAAW52B,YALGg5E,GAAAD,EAAAt1E,GAatBs1E,EAAA34E,UAAAk9B,eAAc,sBACD27C,GAAA/xE,QAAuBlH,OAEtC+4E,EAhBA,CAAwBG,GAAAhyE,0mBC6OrB,SACMiyE,GAAgBptD,EAAKE,GAC5BkqC,GAAeN,aAGjBujB,GA3OA,SAAA31E,GAGK,SACH41E,EAAYttD,OAAZnoB,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKizB,KAAO9K,WAXUutD,GAAAD,EAAA51E,GAmBxB41E,EAAAj5E,UAAAm5E,oBAAmB,SAACx5E,EAAMksB,GACxB7kB,MAOFiyE,EAAAj5E,UAAAo5E,oBAAmB,SAACvtD,OACZyP,EAAYzP,EAAWyP,UACvBwqB,EAA6Bj6B,EAAWi6B,2BACxCa,EAA6B96B,EAAW86B,2BAE9Cr6C,GACEw5C,EACAj6B,EAAW3a,KAAK,GAAK,EACrB2a,EAAW3a,KAAK,GAAK,EACrB,EAAIoqB,EAAUtqB,YACd,EAAKsqB,EAAUtqB,YACdsqB,EAAUrqB,UACVqqB,EAAUvqB,OAAO,IACjBuqB,EAAUvqB,OAAO,IAGpB/D,GAAY25C,EAA4Bb,IAkB1CmzB,EAAAj5E,UAAA6jD,2BAA0B,SACxB13C,EACA0f,EACAi4B,EACAu1B,EACArpE,EACAspE,EACAC,EACAC,OAEIxxB,EACE1sB,EAAYzP,EAAWyP,UAQ1B,SACMuoB,EAA2BhqB,EAASgY,EAASjY,EAAOlV,UACpD1U,EAASvM,KAAK61E,EAASznC,EAAShY,EAAUD,EAAQ,KAAMlV,OAG3D3K,EAAauhB,EAAUvhB,WAEvB0/D,EAAuB3/D,GAAM3N,EAAWiC,QAAS2L,GACjD2/D,EAAO,EAAK,EAAG,OACjB3/D,EAAWhG,YAAcslE,EAAY,KAEjCr/D,EAAavJ,GADMsJ,EAAW9F,aAEpCylE,EAAQx2E,KAAI,EAAG8W,EAAY,IAAKA,EAAY,YAGxC2/D,EAAc9tD,EAAWkR,iBACzB68C,EAAYD,EAAY34E,OAExB+iD,EAAO,GACPhM,EAAQ,GACL92C,EAAI,EAAGA,EAAIy4E,EAAQ14E,OAAQC,IAAC,IAAA,IAC1Bkc,EAAIy8D,EAAY,EAAGz8D,GAAK,IAAKA,EAAC,KAC/Bke,EAAas+C,EAAYx8D,GACzByc,EAAQyB,EAAWzB,SAEvBA,EAAMuD,eACN4W,GAAA8lC,OAAOx+C,EAAYC,IACnBi+C,EAAY91E,KAAK+1E,EAAU5/C,GAAK,KAE1B+C,EAAgB/C,EAAMgD,cACtBl6B,EAASk3B,EAAMyC,eACjBM,GAAiBj6B,EAAM,KACnBmL,EAAcnL,EAAOg6D,WACvB+c,EACAttE,EACE2tE,EAAWj2B,EAA2Br+C,KAC1C,KACA61B,EAAWxB,SAEbke,EAAS,GAAKlqC,EAAY,GAAK6rE,EAAQz4E,GAAG,GAC1C82C,EAAS,GAAKlqC,EAAY,GAAK6rE,EAAQz4E,GAAG,GAC1C+mD,EAASrrB,EAAcknB,2BACrB9L,EACAlsB,EACAi4B,EACAg2B,EACA/1B,MAGAiE,EAAM,OACDA,MAKQ,IAAnBjE,EAAQ/iD,YAGN+4E,EAAQ,EAAIh2B,EAAQ/iD,cAC1B+iD,EAAQxoC,SAAO,SAAE2N,EAAG8U,UAAO9U,EAAEknC,YAAcpyB,EAAI+7C,KAC/Ch2B,EAAQ5zB,MAAI,SAAEzvB,EAAGC,UAAMD,EAAE0vD,WAAazvD,EAAEyvD,cACxCrM,EAAQ/mB,MAAI,SAAE9T,UACJ8+B,EAAS9+B,EAAElZ,SAASkZ,EAAE2oB,QAAS3oB,EAAE0Q,MAAO1Q,EAAExE,aAE7CsjC,IAiBTixB,EAAAj5E,UAAAg6E,oBAAmB,SAACxtD,EAAOX,EAAYi4B,EAAc9zC,EAAUupE,UACtDvyE,MAgBTiyE,EAAAj5E,UAAAi6E,uBAAsB,SACpB9tE,EACA0f,EACAi4B,EACAu1B,EACAE,EACAD,eAasBx0E,IAXNlF,KAAQikD,2BACtB13C,EACA0f,EACAi4B,EACAu1B,EACAt3E,EAAInC,KAEJ25E,EACAD,IASJL,EAAAj5E,UAAA62B,OAAM,uBACQJ,MAQdwiD,EAAAj5E,UAAA88B,YAAW,SAACjR,GACV7kB,MAOFiyE,EAAAj5E,UAAAk6E,wBAAuB,SAACruD,GAClBkqC,GAAeP,kBACjB3pC,EAAWisD,oBAAoB50E,KAAK61E,KAG1CE,EAjOA,CAA0B74E,6dC2K1B+5E,GAjLA,SAAA92E,GAGK,SACH+2E,EAAYzuD,OAAZnoB,EACEH,EAAAI,KAAA7D,KAAM+rB,IAAG/rB,KAKT4D,EAAK62E,uBAAyBh1E,EAC5B4iC,GACA9nC,EACAwrB,EAAI2uD,WAAW90E,KAAKmmB,IAOtBnoB,EAAK+2E,SAAWhtE,SAASC,cAAa,WAChCC,EAAQjK,EAAK+2E,SAAS9sE,MAC5BA,EAAM48B,SAAQ,WACd58B,EAAM8E,MAAK,OACX9E,EAAM+E,OAAM,OACZ/E,EAAMsrB,OAAM,IAEZv1B,EAAK+2E,SAASlhD,UAAYmhD,gCAEpB11B,EAAYn5B,EAAI8uD,qBACtB31B,EAAU41B,aAAal3E,EAAK+2E,SAAUz1B,EAAU61B,YAAc,MAM9Dn3E,EAAKo3E,UAAS,GAMdp3E,EAAKq3E,kBAAmB,WA1COC,GAAAV,EAAA/2E,GAiDjC+2E,EAAAp6E,UAAAm5E,oBAAmB,SAACx5E,EAAMksB,OAClBF,EAAG/rB,KAAQi3B,YACblL,EAAI5mB,YAAYpF,GAAI,KAChB24B,EAAK,IAAO8tB,GAAAt/C,QAAYnH,OAAMmF,EAAW+mB,GAC/CF,EAAIvnB,cAAck0B,KAItB8hD,EAAAp6E,UAAAQ,gBAAe,WACbqF,EAAajG,KAAMy6E,6BACdE,SAASh0C,WAAW1B,YAAWjlC,KAAM26E,UAC1Cl3E,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAOvBw6E,EAAAp6E,UAAA88B,YAAW,SAACjR,MACLA,QAQAutD,oBAAoBvtD,QACpBstD,oBAAoBj+C,GAA4BrP,OAE/CkR,EAAmBlR,EAAWkR,iBAAiB5M,MAAI,SAAWzvB,EAAGC,UAC9DD,EAAEq4B,OAASp4B,EAAEo4B,UAEhBuC,EAAYzP,EAAWyP,eAExBs/C,UAAU55E,OAAS,MAGrB,IACG+5E,EAAe,GACjBC,EAAkB,KACb/5E,EAAI,EAAGuB,EAAKu6B,EAAiB/7B,OAAQC,EAAIuB,IAAMvB,EAAC,KACjDo6B,EAAa0B,EAAiB97B,MACpC4qB,EAAWgxC,WAAa57D,EAErB8yC,GAAA8lC,OAAOx+C,EAAYC,KACnBD,EAAWtB,aAAeoB,IACzBE,EAAWtB,aAAeoB,SAKxBvB,EAAQyB,EAAWzB,MACnB4mC,EAAU5mC,EAAMmC,OAAOlQ,EAAYmvD,GACpCxa,IAGDA,IAAYwa,SACTJ,UAAU13E,KAAKs9D,GACpBwa,EAAkBxa,oBAEE5mC,GACpBmhD,EAAgB73E,KAC2C02B,SAItD34B,EAAI85E,EAAgB/5E,OAAS,EAAGC,GAAK,IAAKA,EACjD85E,EAAgB95E,GAAGuyC,gBAAgB3nB,azD/BTve,EAAMgxB,WAC9B28C,EAAc3tE,EAAK4tE,WAEhBj6E,EAAI,KAAWA,EAAC,KACjBk6E,EAAWF,EAAYh6E,GACvBm6E,EAAW98C,EAASr9B,OAGrBk6E,IAAaC,EAAQ,MAKtBD,IAAaC,IAKZD,EAMAC,EAOL9tE,EAAKotE,aAAaU,EAAUD,IAN1B7tE,EAAKu3B,YAAYs2C,KACfl6E,GAPFqM,EAAKo3B,YAAY02C,KyDenBC,CAAez7E,KAAM26E,SAAQ36E,KAAOg7E,gBAE/BzB,oBAAoBj+C,GAA6BrP,QAE5CgvD,wBACHN,SAAS9sE,MAAM68B,QAAO,QACtBuwC,kBAAmB,QAGrBX,wBAAwBruD,aA5DlBgvD,wBACFN,SAAS9sE,MAAM68B,QAAO,YACtBuwC,kBAAmB,IA0E9BT,EAAAp6E,UAAAg6E,oBAAmB,SAACxtD,EAAOX,EAAYi4B,EAAc9zC,EAAUupE,WACvDj+C,EAAYzP,EAAWyP,UAEvBq+C,EAAc9tD,EAAWkR,iBAGtB97B,EAFS04E,EAAY34E,OAEL,EAAGC,GAAK,IAAKA,EAAC,KAC/Bo6B,EAAas+C,EAAY14E,GACzB24B,EAAQyB,EAAWzB,SAEvBA,EAAMuD,eACN4W,GAAA8lC,OAAOx+C,EAAYC,IACnBi+C,EAAY3/C,GAAK,KAGXr4B,EADgBq4B,EAAMgD,cACDonB,eACzBx3B,EACAX,EACAi4B,MAEEviD,EAAI,KACAymD,EAASh4C,EAAS4pB,EAAOr4B,MAC3BymD,EAAM,OACDA,MAOnBoyB,EA/KA,CAAmCkB,GAAAx0E,6jBCsB7By0E,GACE,SAmORC,GAxNA,SAAAn4E,GAGK,SACHo4E,EAAYjlD,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAW,GACrBkF,EAAsCx5B,EAAM,GAAK0I,UAChD8wB,EAAYggD,WAEfA,EAAS9wE,EAAQ8wE,cAErBl4E,EAAAH,EAAAI,KAAA7D,KAAM87B,IAAW97B,MAMZ+7E,oBAAmB,GAMxBn4E,EAAKo4E,cAAa,GAElBp4E,EAAKgF,kBAAkB+yE,GAAiB/3E,EAAKq4E,sBAEzCH,EACEj6E,MAAMC,QAAQg6E,GAChBA,EAAM,IAAO5U,GAAAhgE,QAAW40E,EAAOttE,QAAK,CAAKyyD,QAAQ,IAEjDt1D,GAAiD,mBAAhBmwE,EAAQxa,SAA0B,IAGrEwa,EAAM,IAAO5U,GAAAhgE,aAAWhC,EAAS,CAAG+7D,QAAQ,IAG9Cr9D,EAAKs4E,UAAUJ,YArCMK,GAAAN,EAAAp4E,GA2CvBo4E,EAAAz7E,UAAAg8E,mBAAkB,gBACXx1E,WAMPi1E,EAAAz7E,UAAA67E,qBAAoB,gBACbF,oBAAoBpgE,QAAQ1V,QAC5B81E,oBAAoB36E,OAAS,MAE5B06E,EAAM97E,KAAQq8E,oBAMTz2D,UALNm2D,oBAAoBz4E,KACvBmC,EAAOq2E,EAAQxb,GAAuBtgE,KAAOs8E,iBAAgBt8E,MAC7DyF,EAAOq2E,EAAQxb,GAA0BtgE,KAAOu8E,oBAAmBv8E,OAGxDA,KAASg8E,cAAah8E,KAC5Bg8E,cAAcp2D,GAAIjK,QAAQ1V,GAEjChD,EAAKjD,KAAMg8E,uBAELQ,EAAcV,EAAOxa,WAClBjgE,EAAI,EAAGuB,EAAK45E,EAAYp7E,OAAQC,EAAIuB,EAAIvB,IAAC,KAC1C24B,EAAQwiD,EAAYn7E,QACrB26E,cAAcz0E,GAAOyyB,IAAK,CAC7Bv0B,EACEu0B,EACAz5B,EAA8BP,KACzBo8E,mBAAkBp8E,MAGzByF,EAAOu0B,EAAOx0B,EAAgBxF,KAAOo8E,mBAAkBp8E,YAItD4G,WAOPi1E,EAAAz7E,UAAAk8E,iBAAgB,SAACG,OACTziD,EACJyiD,EAAgB7b,aAEbob,cAAcz0E,GAAOyyB,IAAK,CAC7Bv0B,EACEu0B,EACAz5B,EAA8BP,KACzBo8E,mBAAkBp8E,MAGzByF,EAAOu0B,EAAOx0B,EAAgBxF,KAAOo8E,mBAAkBp8E,YAEpD4G,WAOPi1E,EAAAz7E,UAAAm8E,oBAAmB,SAACE,OAIZ15E,EAAMwE,GAFVk1E,EAAgB7b,cAGbob,cAAcj5E,GAAK4Y,QAAQ1V,eACpB+1E,cAAcj5E,QACrB6D,WAWPi1E,EAAAz7E,UAAAi8E,UAAS,uBAEAh0E,IAAIszE,KAYbE,EAAAz7E,UAAA87E,UAAS,SAACJ,QACHhzE,IAAI6yE,GAAiBG,IAO5BD,EAAAz7E,UAAAs6B,eAAc,SAACC,OACP4B,OAAsBr3B,IAAdy1B,EAA0BA,EAAS,eAC5C0hD,YAAY1gE,SAAO,SAAWqe,GACjCA,EAAMU,eAAe6B,MAEhBA,GAYTs/C,EAAAz7E,UAAAw6B,oBAAmB,SAACC,OACZ2B,OAAwBt3B,IAAf21B,EAA2BA,EAAU,GAC9C6hD,EAAMlgD,EAAOp7B,YAEdi7E,YAAY1gE,SAAO,SAAWqe,GACjCA,EAAMY,oBAAoB4B,UAGtBmgD,EAAa38E,KAAQ65B,gBACvB+iD,EAAgBD,EAAcxjD,OAC7B0B,QAAuC31B,IAAzBy3E,EAAcxjD,SAC/ByjD,EAAgB,WAETv7E,EAAIq7E,EAAK95E,EAAK45B,EAAOp7B,OAAQC,EAAIuB,EAAIvB,IAAC,KACvCo6B,EAAae,EAAOn7B,GAC1Bo6B,EAAWxC,SAAW0jD,EAAc1jD,QACpCwC,EAAWvC,QAAUuC,EAAWvC,SAAWyjD,EAAczjD,QACzDuC,EAAWrC,cAAgBzvB,KAAKsG,IAC9BwrB,EAAWrC,cACXujD,EAAcvjD,eAEhBqC,EAAWpC,cAAgB1vB,KAAKuG,IAC9BurB,EAAWpC,cACXsjD,EAActjD,eAEhBoC,EAAWnC,QAAU3vB,KAAKuG,IAAIurB,EAAWnC,QAASqjD,EAAcrjD,SAChEmC,EAAWlC,QAAU5vB,KAAKsG,IAAIwrB,EAAWlC,QAASojD,EAAcpjD,cACnCr0B,IAAzBy3E,EAAczuE,cACUhJ,IAAtBu2B,EAAWvtB,OACbutB,EAAWvtB,OAASmE,GAClBopB,EAAWvtB,OACXyuE,EAAczuE,QAGhButB,EAAWvtB,OAASyuE,EAAczuE,aAGZhJ,IAAtBu2B,EAAWtC,SACbsC,EAAWtC,OAASyjD,UAIjBpgD,GAMTq/C,EAAAz7E,UAAAg6B,eAAc,kBACLmB,IAEXsgD,EAtNA,CAAyBr+C,GAAAt2B,sDC7CzB21E,GACa,cADbA,GAEa,weC8XbC,GA3XA,SAAAr5E,GAIK,SACHs5E,EAAYhxD,EAAKixD,OAAjBp5E,EACEH,EAAAI,KAAA7D,KAAM+rB,IAAG/rB,KAOT4D,EAAKizB,KAAO9K,EAMZnoB,EAAKq5E,gBAMLr5E,EAAKs5E,gBAAiB,EAMtBt5E,EAAKu5E,WAAY,EAMjBv5E,EAAKw5E,kBAAiB,GAMtBx5E,EAAKy5E,oBAAmCn4E,IAAlB83E,EAA8B,EAAIA,EAQxDp5E,EAAK05E,MAAQ,SAEP1c,EAAUh9D,EAAKizB,KAAKgkD,qBAM1Bj3E,EAAK25E,gBAAkB,EAMvB35E,EAAK45E,gBAAe,GAEpB55E,EAAK+2E,SAAW/Z,EAMhBh9D,EAAK65E,wBAA0Bh4E,EAC7Bm7D,EACAic,GACAj5E,EAAK85E,mBACL95E,GAOFA,EAAK+5E,0BAML/5E,EAAKg6E,oBAAsBn4E,EACzBm7D,EACAic,GACAj5E,EAAKi6E,YACLj6E,GAMFA,EAAKk6E,sBAAwBl6E,EAAKm6E,iBAAiBn4E,KAAKhC,GAExDA,EAAK+2E,SAASx2E,iBACZqB,EACA5B,EAAKk6E,wBACLhzE,IAAuB,CAAIC,SAAS,aAzGLizE,GAAAjB,EAAAt5E,GAkHnCs5E,EAAA38E,UAAA69E,cAAa,SAACzS,OACR0S,EAAQ,IAAOjO,GAAA/oE,QACjB6lB,GAAoBE,MAAKjtB,KACpB62B,KACL20C,QAEGhnE,cAAc05E,QACUh5E,SAApB+3E,iBAEPrN,aAAY5vE,KAAMi9E,sBACbA,qBAAkB/3E,EACvBg5E,EAAQ,IAAOjO,GAAA/oE,QACb6lB,GAAoBG,SAAQltB,KACvB62B,KACL20C,QAEGhnE,cAAc05E,SAGdjB,gBAAkBjN,WACgB,gBAE9BiN,qBAAkB/3E,MACjBi5E,EAAQ,IAAOlO,GAAA/oE,QACnB6lB,GAAoBC,YAAWhtB,KAC1B62B,KACL20C,QAEGhnE,cAAc25E,IACnBv4E,KAAI5F,MACN,MAYN+8E,EAAA38E,UAAAg+E,sBAAqB,SAAC5S,OACd/mE,EAAQ+mE,EAGZ/mE,EAAM1E,MAAQgtB,GAAoBO,WAClC7oB,EAAM1E,MAAQgtB,GAAoBY,qBAAa3tB,KAEnCw9E,gBAAgB/4E,EAAMk0B,WACzBl0B,EAAM1E,MAAQgtB,GAAoBM,cAAWrtB,KACjDw9E,gBAAgB/4E,EAAMk0B,YAAa,QAErC4kD,gBAAkBh7E,OAAO8C,KAAIrF,KAAMw9E,iBAAiBp8E,QAQ3D27E,EAAA38E,UAAAi+E,iBAAgB,SAAC7S,QACV4S,sBAAsB5S,OACrB0S,EAAQ,IAAOjO,GAAA/oE,QACnB6lB,GAAoBO,UAASttB,KACxB62B,KACL20C,QAEGhnE,cAAc05E,QASZhB,iBACJgB,EAASh+E,mBAAgBF,KACpBm9E,WAASn9E,KACVs+E,qBAAqB9S,IAAYxrE,KAEjCi+E,cAAaj+E,KAAMs9E,OAGG,SAApBC,uBACFH,kBAAkBzhE,QAAQ1V,QAC1Bm3E,kBAAkBh8E,OAAS,OAC3B+7E,WAAY,OACZG,MAAQ,OAUjBP,EAAA38E,UAAAk+E,qBAAoB,SAAC9S,UACY,IAAxBA,EAAaN,QAQtB6R,EAAA38E,UAAAs9E,mBAAkB,SAAClS,QACZ0R,eAA0C,IAA5Bl9E,KAAQu9E,qBACtBa,sBAAsB5S,OACrB0S,EAAQ,IAAOjO,GAAA/oE,QACnB6lB,GAAoBM,YAAWrtB,KAC1B62B,KACL20C,WAMSroE,UAJNqB,cAAc05E,QAGdZ,MAAK,GACa9R,EAAY,KAC3BljE,EAAQkjE,EAAaroE,QACtBm6E,MAAMn6E,GAAwB,mBAALmF,EAAuBjG,EAAOiG,KAGxB,SAA7B80E,kBAAkBh8E,OAAY,KAC/Bm9E,EAAGv+E,KAAQ62B,KAAK2nD,wBACjBpB,kBAAkB95E,KACrBmC,EACE84E,EACAxxD,GAAoBK,YAAWptB,KAC1B8vE,mBAAkB9vE,MAGzByF,EAAO84E,EAAKxxD,GAAoBO,UAASttB,KAAOq+E,iBAAgBr+E,MAchEyF,EAAMzF,KACC26E,SACL5tD,GAAoBY,cAAa3tB,KAC5Bq+E,iBAAgBr+E,YAIhB26E,SAAS8D,aAAWz+E,KAAS26E,SAAS8D,gBAAkBF,GAAGv+E,KAC7Do9E,kBAAkB95E,KACrBmC,EAAMzF,KACC26E,SAAS8D,cACd1xD,GAAoBO,UAASttB,KACxBq+E,iBAAgBr+E,SAa/B+8E,EAAA38E,UAAA0vE,mBAAkB,SAACtE,WAIRkT,UAAUlT,GAAY,MACxB2R,WAAY,MACXe,EAAQ,IAAOjO,GAAA/oE,QACnB6lB,GAAoBI,YAAWntB,KAC1B62B,KACL20C,EAAYxrE,KACPm9E,gBAEF34E,cAAc05E,KAWvBnB,EAAA38E,UAAAy9E,YAAW,SAACrS,QACLmS,0BAA4BnS,MAC3B/+C,KAAQzsB,KAAWs9E,QAAKt9E,KAAS0+E,UAAUlT,SAC5ChnE,cAAa,IACZyrE,GAAA/oE,QAAgBskE,EAAazrE,KAAIC,KAAO62B,KAAM20C,EAAc/+C,KAYpEswD,EAAA38E,UAAA29E,iBAAgB,SAACt5E,OAGT4nB,EAAarsB,KAAQ29E,0BAEvBtxD,IAAiBA,EAAcnsB,kBACT,kBAAhBuE,EAAMk6E,aAAiD,IAArBl6E,EAAMk6E,YAEhDl6E,EAAMpE,kBAUV08E,EAAA38E,UAAAs+E,UAAS,SAAClT,eAED2R,WACLxzE,KAAK8mB,IAAI+6C,EAAaj0C,QAAOv3B,KAAQs9E,MAAM/lD,SAAOv3B,KAC3Cq9E,gBACP1zE,KAAK8mB,IAAI+6C,EAAah0C,QAAOx3B,KAAQs9E,MAAM9lD,SAAOx3B,KAASq9E,gBAO/DN,EAAA38E,UAAAQ,gBAAe,gBACJg9E,sBACP33E,EAAajG,KAAM49E,0BACdA,oBAAsB,WAExBjD,SAAS31E,oBACZQ,EAAmBxF,KACd89E,4BAGEL,0BACPx3E,EAAajG,KAAMy9E,8BACdA,wBAA0B,WAG5BL,kBAAkBzhE,QAAQ1V,QAC1Bm3E,kBAAkBh8E,OAAS,OAE3Bu5E,SAAW,KAChBl3E,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAEzB+8E,EAzXA,CAAqC91E,EAAAC,SCNrC03E,GAMY,aANZA,GAaW,YAbXA,GAoBS,UCpBTC,GACY,aADZA,GAEM,OAFNA,GAGQ,SAHRA,GAIM,+FCFOC,GAAOvvE,EAAAA,EA4PpBwvE,GA9OA,WAIK,SACHC,EAAYC,EAAkBC,GAIzBl/E,KACEm/E,kBAAoBF,EAKtBj/E,KACEo/E,aAAeF,EAKjBl/E,KACEq/E,UAAS,GAKXr/E,KACEs/E,YAAW,GAKbt/E,KACEu/E,gBAAe,UAMtBP,EAAA5+E,UAAAo+B,MAAK,gBACE6gD,UAAUj+E,OAAS,OACnBk+E,YAAYl+E,OAAS,EAC1B6B,EAAKjD,KAAMu/E,kBAObP,EAAA5+E,UAAAo/E,QAAO,eACCC,EAAQz/E,KAAQq/E,UAChBK,EAAU1/E,KAAQs/E,YAClB1e,EAAU6e,EAAS,GACF,GAAnBA,EAASr+E,QACXq+E,EAASr+E,OAAS,EAClBs+E,EAAWt+E,OAAS,IAEpBq+E,EAAS,GAAKA,EAASz4D,MACvB04D,EAAW,GAAKA,EAAW14D,WACtB24D,QAAQ,QAETC,EAAU5/E,KAAQo/E,aAAaxe,sBACzB2e,gBAAgBK,GACrBhf,GAQToe,EAAA5+E,UAAAq4E,QAAO,SAAC7X,GACNj1D,KAAM3L,KAAQo/E,aAAaxe,KAAO5gE,KAAUu/E,iBAAkB,QACxDM,EAAQ7/E,KAAQm/E,kBAAkBve,UACpCif,GAAYf,UACTO,UAAU/7E,KAAKs9D,QACf0e,YAAYh8E,KAAKu8E,QACjBN,gBAAev/E,KAAMo/E,aAAaxe,KAAY,OAC9Ckf,UAAU,EAAC9/E,KAAOq/E,UAAUj+E,OAAS,IACnC,IAQX49E,EAAA5+E,UAAA2/E,SAAQ,uBACMV,UAAUj+E,QASxB49E,EAAA5+E,UAAA4/E,mBAAkB,SAAC16E,UACF,EAARA,EAAY,GASrB05E,EAAA5+E,UAAA6/E,oBAAmB,SAAC36E,UACH,EAARA,EAAY,GASrB05E,EAAA5+E,UAAA8/E,gBAAe,SAAC56E,UACNA,EAAQ,GAAM,GAOxB05E,EAAA5+E,UAAA+/E,SAAQ,eACF9+E,MACCA,GAACrB,KAASq/E,UAAUj+E,QAAU,GAAK,EAAGC,GAAK,EAAGA,IAACrB,KAC7C2/E,QAAQt+E,IAOjB29E,EAAA5+E,UAAA6wD,QAAO,kBAC4B,SAArBouB,UAAUj+E,QAOxB49E,EAAA5+E,UAAAo4E,YAAW,SAACz1E,UACHA,KAAG/C,KAASu/E,iBAOrBP,EAAA5+E,UAAAggF,SAAQ,SAACxf,eACK4X,YAAWx4E,KAAMo/E,aAAaxe,KAO5Coe,EAAA5+E,UAAAu/E,QAAO,SAACr6E,WACAm6E,EAAQz/E,KAAQq/E,UAChBK,EAAU1/E,KAAQs/E,YAClBe,EAAQZ,EAASr+E,OACjBw/D,EAAU6e,EAASn6E,GACnBu6E,EAAWH,EAAWp6E,GACtBg7E,EAAah7E,EAEZA,EAAQ+6E,GAAS,GAAC,KACjBE,EAAMvgF,KAAQggF,mBAAmB16E,GACjCk7E,EAAMxgF,KAAQigF,oBAAoB36E,GAElCm7E,EACJD,EAASH,GAASX,EAAWc,GAAUd,EAAWa,GAC9CC,EACAD,EAENd,EAASn6E,GAASm6E,EAASgB,GAC3Bf,EAAWp6E,GAASo6E,EAAWe,GAC/Bn7E,EAAQm7E,EAGVhB,EAASn6E,GAASs7D,EAClB8e,EAAWp6E,GAASu6E,OACfC,UAAUQ,EAAYh7E,IAQ7B05E,EAAA5+E,UAAA0/E,UAAS,SAACQ,EAAYh7E,WACdm6E,EAAQz/E,KAAQq/E,UAChBK,EAAU1/E,KAAQs/E,YAClB1e,EAAU6e,EAASn6E,GACnBu6E,EAAWH,EAAWp6E,GAErBA,EAAQg7E,GAAU,KACjBI,EAAW1gF,KAAQkgF,gBAAgB56E,QACrCo6E,EAAWgB,GAAeb,SAC5BJ,EAASn6E,GAASm6E,EAASiB,GAC3BhB,EAAWp6E,GAASo6E,EAAWgB,GAC/Bp7E,EAAQo7E,EAKZjB,EAASn6E,GAASs7D,EAClB8e,EAAWp6E,GAASu6E,GAMtBb,EAAA5+E,UAAAugF,aAAY,eAMN/f,EAASv/D,EAAGw+E,EALVZ,EAAgBj/E,KAAQm/E,kBACxBM,EAAQz/E,KAAQq/E,UAChBK,EAAU1/E,KAAQs/E,YACpBh6E,EAAQ,EACNnE,EAAIs+E,EAASr+E,WAEdC,EAAI,EAAGA,EAAIF,IAAKE,GAEnBw+E,EAAWZ,EADXre,EAAU6e,EAASp+E,MAEHy9E,UAAI9+E,KACNu/E,gBAAev/E,KAAMo/E,aAAaxe,KAE9C8e,EAAWp6E,GAASu6E,EACpBJ,EAASn6E,KAAWs7D,GAGxB6e,EAASr+E,OAASkE,EAClBo6E,EAAWt+E,OAASkE,OACf66E,YAETnB,EA5OA,6dCoGA4B,GAhHA,SAAAn9E,GAIK,SACHo9E,EAAYC,EAAsBC,OAAlCn9E,EACEH,EAAAI,KAAA7D,MAIK,SACO4gE,UACDkgB,EAAqBh7E,MAAM,KAAM86D,MAKvC,SACOA,UAC2CA,EAAQ,GAAIuX,yBAKnEv0E,EAAKo9E,uBAAyBp9E,EAAKq9E,iBAAiBr7E,KAAKhC,GAMzDA,EAAKs9E,oBAAsBH,EAM3Bn9E,EAAKu9E,cAAgB,EAMrBv9E,EAAKw9E,kBAAiB,YA1CFC,GAAAR,EAAAp9E,GAiDtBo9E,EAAAzgF,UAAAq4E,QAAO,SAAC7X,OACA0gB,EAAQ79E,EAAArD,UAAMq4E,QAAO50E,KAAA7D,KAAC4gE,GACxB0gB,GACW1gB,EAAQ,GAChBz8D,iBAAiBqB,EAAgBxF,KAAOghF,+BAExCM,GAMTT,EAAAzgF,UAAAmhF,gBAAe,uBACDJ,eAOdN,EAAAzgF,UAAA6gF,iBAAgB,SAACx8E,OACTm/C,EAAmDn/C,EAAMtE,OACzD45B,EAAQ6pB,EAAKlnB,cAEjB3C,IAAUo5C,IACVp5C,IAAUo5C,IACVp5C,IAAUo5C,GAAe,CAEzBvvB,EAAK5+C,oBAAoBQ,EAAgBxF,KAAOghF,4BAC1CQ,EAAU59B,EAAKu0B,SACjBqJ,KAAOxhF,KAASohF,gCACNA,kBAAkBI,UACvBL,oBAEJD,wBAQTL,EAAAzgF,UAAAqhF,cAAa,SAACC,EAAiBC,WAElB/9B,EAAM49B,EADbI,EAAW,OAGRT,cAAgBO,GACrBE,EAAWD,GAAW3hF,KACjB+/E,WAAa,GAGlByB,GADA59B,EAAI5jD,KAAoDw/E,UAAU,IACnDrH,SACPv0B,EAAKlnB,aACCy2C,IAAoBqO,KAAOxhF,KAASohF,yBAC3CA,kBAAkBI,IAAW,SAC3BL,gBACLS,EACFh+B,EAAKtkB,SAIbuhD,EA9GA,CAAwB9B,aA0HR8C,GACd51D,EACA23B,EACAo0B,EACA8J,EACAlN,OAIK3oD,KAAgB+rD,KAAiB/rD,EAAWosD,aAAW,OACnDyG,OAEJ7yD,EAAWosD,YAAYL,GAAep0B,EAAKu0B,UAAM,OAC7C2G,OAQH3tE,EAAS8a,EAAWyP,UAAUvqB,OAC9ByM,EAASkkE,EAAW,GAAK3wE,EAAO,GAChC0M,EAASikE,EAAW,GAAK3wE,EAAO,UAEpC,MAAQxH,KAAK+L,IAAIk/D,GACjBjrE,KAAKqP,KAAK4E,EAASA,EAASC,EAASA,GAAU+2D,0PCxJnDmN,GACQ,SADRA,GAEY,aAFZA,GAGU,oBCMMC,GAAa9zE,EAAQ+zE,EAAYC,mBAUnC/wE,EAAQC,EAAYE,EAAM6wE,EAAcC,MAC5CjxE,EAAM,KACFkxE,EAAYJ,EAAa,EAAI3wE,EAAK,GAAKF,EACvCkxE,EAAaL,EAAa,EAAI3wE,EAAK,GAAKF,EACxCmxE,EAASH,EAAkBA,EAAgB,GAAK,EAChDI,EAASJ,EAAkBA,EAAgB,GAAK,EAClDlzE,EAAOhB,EAAO,GAAKm0E,EAAY,EAAIE,EACnCnzE,EAAOlB,EAAO,GAAKm0E,EAAY,EAAIE,EACnCpzE,EAAOjB,EAAO,GAAKo0E,EAAa,EAAIE,EACpCnzE,EAAOnB,EAAO,GAAKo0E,EAAa,EAAIE,EAIpCtzE,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,GAGrBC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,OAIrB3C,EAAI4I,GAAMjE,EAAO,GAAIjC,EAAME,GAC3B3C,EAAI2I,GAAMjE,EAAO,GAAIhC,EAAME,GACzBozE,EAAQ,GAAKrxE,SAGf+wE,GAAgBD,IAClB11E,IACGi2E,EAAQ94E,KAAK+L,IAAI,EAAI/L,KAAKuG,IAAI,EAAGhB,EAAOiC,EAAO,IAAMsxE,GACtDA,EAAQ94E,KAAK+L,IAAI,EAAI/L,KAAKuG,IAAI,EAAGiB,EAAO,GAAK/B,GAAQqzE,GACvDh2E,IACGg2E,EAAQ94E,KAAK+L,IAAI,EAAI/L,KAAKuG,IAAI,EAAGf,EAAOgC,EAAO,IAAMsxE,GACtDA,EAAQ94E,KAAK+L,IAAI,EAAI/L,KAAKuG,IAAI,EAAGiB,EAAO,GAAK9B,GAAQozE,KAGjDj2E,EAAGC,cAYHi2E,GAAKvxE,UACZA,ECxDN,SACMwxE,GACPvxE,EACAimC,EACAurC,EACAC,OAEMC,EAAcjyE,GAASwmC,GAAaurC,EAAa,GACjDG,EAAcjyE,GAAUumC,GAAaurC,EAAa,UAEpDC,EACKl5E,KAAKsG,IAAImB,EAAYzH,KAAKuG,IAAI4yE,EAAaC,IAE7Cp5E,KAAKsG,IAAImB,EAAYzH,KAAKsG,IAAI6yE,EAAaC,IAcjD,SACMC,GAA2B5xE,EAAYgoB,EAAeC,OACzD+uB,EAASz+C,KAAKsG,IAAImB,EAAYgoB,UAGlCgvB,GACEz+C,KAAK+L,IAAI,EAHG,GAGS/L,KAAKuG,IAAI,EAAGkB,EAAagoB,EAAgB,IAHlD,GAIZ,EACEC,IACF+uB,EAASz+C,KAAKuG,IAAIk4C,EAAQ/uB,GAC1B+uB,GACEz+C,KAAK+L,IAAI,EARC,GAQW/L,KAAKuG,IAAI,EAAGmpB,EAAgBjoB,EAAa,IARpD,GAUV,GAEGgE,GAAMgzC,EAAQ/uB,EAAgB,EAAmB,EAAhBD,YA6I1B6pD,GACd7pD,EACAC,EACA6pD,EACAC,EACAC,mBAUYhyE,EAAYlQ,EAAWoQ,EAAM6wE,WAClBj9E,IAAfkM,EAAwB,KACpBiyE,EAAeF,EACjBR,GACEvpD,EACA+pD,EACA7xE,EACA8xE,GAEFhqD,cAC0Bl0B,IAAfg+E,GAA2BA,IAE1Bf,EAGTa,GACL5xE,EACAiyE,EACAhqD,GALOjkB,GAAMhE,EAAYioB,EAAegqD,cCzNlCC,GAAQjyE,eACLnM,IAAbmM,EACK,kBAUKkyE,GAAKlyE,eACFnM,IAAbmM,EACKA,ueCkzDR,SACMmyE,GAAkBpzE,EAAUqzE,GACnCzT,YAAU,WACR5/D,EAASqzE,KACR,YAOWC,GAAuB14E,WACd9F,IAAnB8F,EAAQkD,OAAoB,KACxBg0E,OAC+Bh9E,IAAnC8F,EAAQ24E,wBACJ34E,EAAQ24E,8BAEP3B,GAAah3E,EAAQkD,OAAQlD,EAAQ44E,oBAAqB1B,OAG7D/nE,EAAa0B,GAAiB7Q,EAAQmP,WAAU,iBAC3B,IAAvBnP,EAAQ6xD,YAAuB1iD,EAAWzF,WAAQ,KAC9CxG,EAASiM,EAAW9F,YAAY7F,eACtCN,EAAO,IAAMqB,EAAAA,EACbrB,EAAO,GAAKqB,EAAAA,EACLyyE,GAAa9zE,GAAQ,GAAO,UAG9Bw0E,YAQOmB,GAA2B74E,OACrC84E,EACA1qD,EACAC,EAOAC,OACkBp0B,IAApB8F,EAAQsuB,QAAwBtuB,EAAQsuB,QAlqDnB,EAoqDnBC,OACkBr0B,IAApB8F,EAAQuuB,QAAwBvuB,EAAQuuB,QAPnB,GASjBwqD,OACmB7+E,IAAvB8F,EAAQ+4E,WAA2B/4E,EAAQ+4E,WATnB,EAWpBlnB,OACmB33D,IAAvB8F,EAAQ6xD,YAA2B7xD,EAAQ6xD,WAEvCqlB,OACmCh9E,IAAvC8F,EAAQg5E,4BACJh5E,EAAQg5E,2BAGRnB,OACuB39E,IAA3B8F,EAAQ63E,gBAA+B73E,EAAQ63E,eAE3C1oE,EAAa0B,GAAiB7Q,EAAQmP,WAAU,aAChD8pE,EAAa9pE,EAAW9F,YAC1BuvE,EAAsB54E,EAAQ44E,oBAC9B11E,EAASlD,EAAQkD,UAChB2uD,GAAe3uD,IAAUiM,EAAWzF,aACvCkvE,GAAsB,EACtB11E,EAAS+1E,QAGiB/+E,IAAxB8F,EAAQk5E,YAAyB,KAC7BA,EAAcl5E,EAAQk5E,YAC5B9qD,EAAgB8qD,EAAY5qD,GAC5BD,OAC2Bn0B,IAAzBg/E,EAAY3qD,GACR2qD,EAAY3qD,GACZ2qD,EAAYA,EAAY9iF,OAAS,GAGrC0iF,EADE94E,EAAQm5E,6BFx1DdD,EACAhB,EACAC,EACAC,mBAUYhyE,EAAYlQ,EAAWoQ,EAAM6wE,WAClBj9E,IAAfkM,EAAwB,KACpBgoB,EAAgB8qD,EAAY,GAC5B7qD,EAAgB6qD,EAAYA,EAAY9iF,OAAS,GACjDiiF,EAAeF,EACjBR,GACEvpD,EACA+pD,EACA7xE,EACA8xE,GAEFhqD,KAGA+oD,cAC4Bj9E,IAAfg+E,GAA2BA,EAInCF,GACL5xE,EACAiyE,EACAhqD,GALOjkB,GAAMhE,EAAYioB,EAAegqD,OAStCe,EAASz6E,KAAKsG,IAAIozE,EAAcjyE,GAChC+iE,EAAIxqE,KAAK+Q,MAAM1Z,EAAkBkjF,EAAaE,EAAQljF,WACxDgjF,EAAY/P,GAAKkP,GAAgBlP,EAAI+P,EAAY9iF,OAAS,EACrD8iF,EAAY/P,EAAI,GAElB+P,EAAY/P,KE6yDEkQ,CACrBH,EACAhC,GACC0B,GAAuB11E,EACxB20E,GAGqBI,GACrB7pD,EACAC,EACA6oD,GACC0B,GAAuB11E,EACxB20E,YAUEyB,GALQL,EAGVt6E,KAAKuG,IAAIW,GAASozE,GAAanzE,GAAUmzE,IADxC,IAAMv6E,GAAgBG,GAAMT,SAAY+Q,EAAW5F,oBCt6D3B,ID06DA5K,KAAKwrB,IA/DV,EA/pDH,GAguDfovD,EACJD,EACA36E,KAAKwrB,IAnEiB,EAmEMqvD,SAIRt/E,KADtBk0B,EAAgBpuB,EAAQouB,eAEtBE,EAAU,EAEVF,EAAgBkrD,EAAuB36E,KAAKwrB,IAAI4uD,EAAYzqD,QAKxCp0B,KADtBm0B,EAAgBruB,EAAQquB,iBAIlBA,OAFoBn0B,IAApB8F,EAAQuuB,aACoBr0B,IAA1B8F,EAAQouB,cACMA,EAAgBzvB,KAAKwrB,IAAI4uD,EAAYxqD,GAErC+qD,EAAuB36E,KAAKwrB,IAAI4uD,EAAYxqD,GAG9CgrD,GAKpBhrD,EACED,EACA3vB,KAAK+Q,MACH/Q,KAAK+L,IAAI0jB,EAAgBC,GAAiB1vB,KAAK+L,IAAIquE,IAEvD1qD,EAAgBD,EAAgBzvB,KAAKwrB,IAAI4uD,EAAYxqD,EAAUD,GAG7DwqD,EADE94E,EAAQm5E,6BFt1DdM,EACArrD,EACAsrD,EACAxB,EACAC,EACAC,mBAUYhyE,EAAYlQ,EAAWoQ,EAAM6wE,WAClBj9E,IAAfkM,EAAwB,KACpBiyE,EAAeF,EACjBR,GACEvpD,EACA+pD,EACA7xE,EACA8xE,GAEFhqD,EACEC,OACkBn0B,IAAtBw/E,EAAkCA,EAAoB,KAGpDvC,cAC4Bj9E,IAAfg+E,GAA2BA,EAInCF,GACL5xE,EACAiyE,EACAhqD,GALOjkB,GAAMhE,EAAYioB,EAAegqD,OAUtCsB,EAAeh7E,KAAK40B,KACxB50B,KAAK+L,IAAI0jB,EAAgBiqD,GAAgB15E,KAAK+L,IAAI+uE,GAFlC,MAIZ70E,GAAU1O,GAAa,GAJX,MAI8B,GAC1CkjF,EAASz6E,KAAKsG,IAAIozE,EAAcjyE,GAChCwzE,EAAkBj7E,KAAK+Q,MAC3B/Q,KAAK+L,IAAI0jB,EAAgBgrD,GAAUz6E,KAAK+L,IAAI+uE,GAAS70E,GAEjDi1E,EAAYl7E,KAAKuG,IAAIy0E,EAAcC,UAElCxvE,GADegkB,EAAgBzvB,KAAKwrB,IAAIsvD,EAAOI,GAC1BxrD,EAAegqD,KEmyDtByB,CACrBf,EACA3qD,EACAC,EACA6oD,GACC0B,GAAuB11E,EACxB20E,GAGqBI,GACrB7pD,EACAC,EACA6oD,GACC0B,GAAuB11E,EACxB20E,UAKJkC,WAAYjB,EACZ1qD,cAAeA,EACfC,cAAeA,EACfC,QAASA,EACTyqD,WAAYA,YAQAiB,GAAyBh6E,ODv9DX7J,EACtB8jF,EA0ByBC,EACzBvkE,UC67DuBzb,IAA3B8F,EAAQm6E,gBAA+Bn6E,EAAQm6E,eAC/B,KACVC,EAAoBp6E,EAAQo6E,8BACRlgF,IAAtBkgF,IAAyD,IAAtBA,GDh8DnCzkE,EAAYukE,GAAiBjvE,GAAU,YAOjC5E,EAAU8wE,UACdA,EACK9wE,OAGQnM,IAAbmM,EACE1H,KAAK8mB,IAAIpf,IAAasP,EACjB,EAEAtP,YCk7DoB,IAAtB+zE,EACF7B,GAC0B,iBAAjB6B,GDh+DQjkF,ECi+DHikF,EDh+DnBH,EAAS,EAAIt7E,KAAKC,GAAMzI,WAOlBkQ,EAAU8wE,UACdA,EACK9wE,OAGQnM,IAAbmM,EACFA,EAAW1H,KAAK+Q,MAAMrJ,EAAW4zE,EAAQ,IAAOA,WCq9D3C1B,UAGFD,YASK+B,GAAgBC,WAC1BA,EAAUC,cAAgBD,EAAUE,eACjChsE,GAAiB8rE,EAAUC,aAAcD,EAAUE,iBAItDF,EAAUG,mBAAqBH,EAAUI,kBAGzCJ,EAAUK,iBAAmBL,EAAUM,gBAa1C,SACMC,GAAkBt5E,EAAY+E,EAAMm5B,EAAUr5B,EAAYC,OAE3DwI,EAAWlQ,KAAKwD,KAAKkE,GACvByI,EAAWnQ,KAAKuD,KAAKmE,GACrBy0E,EAAOv5E,EAAW,GAAKsN,EAAWtN,EAAW,GAAKuN,EAClDisE,EAAOx5E,EAAW,GAAKsN,EAAWtN,EAAW,GAAKuN,UACtDgsE,IAASx0E,EAAK,GAAK,EAAIm5B,EAAS,IAAMr5B,GAKfyI,GAJvBksE,IAASt7C,EAAS,GAAKn5B,EAAK,GAAK,GAAKF,IAGtC0I,GAAYA,GAEIisE,EAAOlsE,EAAWisE,EAAOhsE,OAK3CksE,GA7wDA,SAAAviF,GAGK,SACHwiF,EAAYrvD,OAAZhzB,EACEH,EAAAI,KAAA7D,OAAAA,KAKA4D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,OAECwE,EAAU1I,EAAM,GAAKs0B,UAM3BhzB,EAAKsiF,OAAM,CAAI,EAAG,GAMlBtiF,EAAKuiF,YAAW,GAMhBviF,EAAKwiF,oBAOLxiF,EAAKyiF,YAAcxqE,GAAiB7Q,EAAQmP,WAAU,aAMtDvW,EAAK0iF,cAAa,CAAI,IAAK,KAM3B1iF,EAAK2iF,cAAgB,KAMrB3iF,EAAK4iF,kBAML5iF,EAAK6iF,gBAML7iF,EAAK8iF,mBAAgBxhF,EAEjB8F,EAAQmG,SACVnG,EAAQmG,OAAS6L,GAAmBhS,EAAQmG,OAAQvN,EAAKyiF,cAEvDr7E,EAAQkD,SACVlD,EAAQkD,OAASiP,GAAenS,EAAQkD,OAAQtK,EAAKyiF,cAGvDziF,EAAK+iF,cAAc37E,YAtFJ47E,GAAAX,EAAAxiF,GA6FjBwiF,EAAA7lF,UAAAumF,cAAa,SAAC37E,GAGT,IAGG67E,EAA2BhD,GAA2B74E,GAKzDhL,KACE8mF,eAAiBD,EAAyBztD,cAK5Cp5B,KACE+mF,eAAiBF,EAAyBxtD,cAK5Cr5B,KACEgnF,YAAcH,EAAyB9C,WAKzC/jF,KACEinF,aAAej8E,EAAQk5E,YAKzBlkF,KACEknF,SAAWl8E,EAAQu/B,QAKrBvqC,KACEmnF,SAAWN,EAAyBvtD,YAEnC8tD,EAAmB1D,GAAuB14E,GAC1C84E,EAAuB+C,EAAyB9B,WAChDsC,EAAqBrC,GAAyBh6E,GAKjDhL,KACEsnF,aAAY,CACfn2E,OAAQi2E,EACRh2E,WAAY0yE,EACZzyE,SAAUg2E,QAGPnjD,iBAAiCh/B,IAArB8F,EAAQqG,SAAyBrG,EAAQqG,SAAW,QAChEk2E,uBACgBriF,IAAnB8F,EAAQmG,OAAuBnG,EAAQmG,OAAS,WAEvBjM,IAAvB8F,EAAQoG,WAAwBpR,KAC7BwnF,cAAcx8E,EAAQoG,iBACDlM,IAAjB8F,EAAQ2wB,MAAkB37B,KAC9BynF,QAAQz8E,EAAQ2wB,WAGlBvzB,cAhEW,IAqEbpI,KACE0nF,SAAW18E,GAYlBzI,OAAA0I,eAAIg7E,EAAA7lF,UAAA,UAAO,4BACG8mF,uBAEF38C,OACNo9C,EAAU3nF,KAAQknF,cACjBA,SAAW38C,MACVp5B,EAAMnR,KAAQ6jB,eAChB1S,EAAM,KACFy2E,EAAar9C,GAAO,CAAK,EAAG,EAAG,EAAG,GACxCo9C,EAAaA,GAAU,CAAK,EAAG,EAAG,EAAG,OAC/Bv2E,EAAUpR,KAAQu2D,gBAClB3P,EACHx1C,EAAa,GACbw2E,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,IACxDnnC,EACHrvC,EAAa,GACbw2E,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,SACzDL,kBAAiB,CAAEp2E,EAAO,GAAKy1C,EAASz1C,EAAO,GAAKsvC,sCAY7DwlC,EAAA7lF,UAAAynF,mBAAkB,SAACC,OACX98E,EAAU1I,EAAM,QAAUolF,sBAGLxiF,IAAvB8F,EAAQoG,WACVpG,EAAQoG,WAAUpR,KAAQu2D,gBAE1BvrD,EAAQ2wB,KAAI37B,KAAQk2B,UAItBlrB,EAAQmG,OAAMnR,KAAQ21B,oBAGtB3qB,EAAQqG,SAAQrR,KAAQojC,cAEjB9gC,EAAM,GAAK0I,EAAS88E,IAoC7B7B,EAAA7lF,UAAAq2B,QAAO,SAACyzC,QACG6d,UAAK/nF,KAAYu2B,gBAAYv2B,KAC/BgoF,mBAAmB,WAEpB/5B,EAAI,IAAOpsD,MAAMgB,UAAUzB,QACxBC,EAAI,EAAGA,EAAI4sD,EAAK7sD,SAAUC,EAAC,KAC9B2J,EAAUnI,UAAUxB,GACpB2J,EAAQmG,UACVnG,EAAU1I,EAAM,GAAK0I,IACbmG,OAAS6L,GACfhS,EAAQmG,OAAMnR,KACTwjE,kBAGLx4D,EAAQyS,UACVzS,EAAU1I,EAAM,GAAK0I,IACbyS,OAAST,GACfhS,EAAQyS,OAAMzd,KACTwjE,kBAGTvV,EAAK5sD,GAAK2J,OAEP4qB,gBAAgB9vB,MAAK9F,KAAOiuD,IAMnCg4B,EAAA7lF,UAAAw1B,gBAAe,SAACs0C,OAEV95D,EADA63E,EAAiBplF,UAAUzB,UAG7B6mF,EAAiB,GACkB,mBAA5BplF,UAAUolF,EAAiB,KAElC73E,EAAWvN,UAAUolF,EAAiB,KACpCA,SAEMF,QAAK,KAEPhuD,EAAQl3B,UAAUolF,EAAiB,UACrCluD,EAAM5oB,QAAMnR,KACTunF,kBAAkBxtD,EAAM5oB,aAEZjM,IAAf60B,EAAM4B,MAAkB37B,KACrBynF,QAAQ1tD,EAAM4B,WAEEz2B,IAAnB60B,EAAM1oB,UAAsBrR,KACzBkkC,YAAYnK,EAAM1oB,eAErBjB,GACFozE,GAAkBpzE,GAAU,YAI5B6Z,EAAQylD,KAAKC,MACbx+D,EAAMnR,KAAQumF,cAAc/3E,QAC5B4C,EAAUpR,KAAQwmF,kBAClBn1E,EAAQrR,KAAQymF,gBACdyB,EAAM,GACH7mF,EAAI,EAAGA,EAAI4mF,IAAkB5mF,EAAC,KAC/B2J,EAA2CnI,UAAUxB,GAErDikF,EAAS,CACbr7D,MAAOA,EACPk+D,UAAU,EACV1qE,OAAQzS,EAAQyS,OAChBoY,cAA+B3wB,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,IAC9DC,OAAQ9qB,EAAQ8qB,QAAUT,GAC1BjlB,SAAUA,MAGRpF,EAAQmG,SACVm0E,EAAUC,aAAep0E,EACzBm0E,EAAUE,aAAex6E,EAAQmG,OAAO3C,QACxC2C,EAASm0E,EAAUE,mBAGAtgF,IAAjB8F,EAAQ2wB,MACV2pD,EAAUG,iBAAmBr0E,EAC7Bk0E,EAAUI,iBAAgB1lF,KAAQs2B,qBAAqBtrB,EAAQ2wB,MAC/DvqB,EAAak0E,EAAUI,kBACd16E,EAAQoG,aACjBk0E,EAAUG,iBAAmBr0E,EAC7Bk0E,EAAUI,iBAAmB16E,EAAQoG,WACrCA,EAAak0E,EAAUI,uBAGAxgF,IAArB8F,EAAQqG,SAAsB,CAChCi0E,EAAUK,eAAiBt0E,MACrBqS,EACJvN,GAAOnL,EAAQqG,SAAWA,EAAW1H,KAAKC,GAAI,EAAID,KAAKC,IAAMD,KAAKC,GACpE07E,EAAUM,eAAiBv0E,EAAWqS,EACtCrS,EAAWi0E,EAAUM,eAInBP,GAAgBC,GAClBA,EAAU6C,UAAW,EAGrBl+D,GAASq7D,EAAUzvD,SAErBqyD,EAAO5kF,KAAKgiF,QAETa,YAAY7iF,KAAK4kF,QACjBE,QAAQ/2B,GAAoB,QAC5Bg3B,qBAQPpC,EAAA7lF,UAAAm2B,aAAY,uBACE2vD,OAAO70B,IAAsB,GAQ3C40B,EAAA7lF,UAAAkoF,eAAc,uBACApC,OAAO70B,IAAwB,GAO7C40B,EAAA7lF,UAAAo2B,iBAAgB,eAEV/Y,OADC2qE,QAAQ/2B,IAAkBrxD,KAAQkmF,OAAO70B,aAErChwD,EAAI,EAAGuB,EAAE5C,KAAQmmF,YAAY/kF,OAAQC,EAAIuB,IAAMvB,EAAC,KACjD6mF,EAAMloF,KAAQmmF,YAAY9kF,MAC5B6mF,EAAO,GAAG93E,UACZozE,GAAkB0E,EAAO,GAAG93E,UAAU,IAEnCqN,EAAM,IAAA,IACAF,EAAI,EAAG4F,EAAK+kE,EAAO9mF,OAAQmc,EAAI4F,IAAM5F,EAAC,KACvC+nE,EAAY4C,EAAO3qE,OACpB+nE,EAAU6C,SAAQ,CACrB1qE,EAAS6nE,EAAU7nE,oBAMtB0oE,YAAY/kF,OAAS,OACrBslF,cAAgBjpE,GAMvBwoE,EAAA7lF,UAAAioF,kBAAiB,mBACkBnjF,SAAxBkhF,sBACPmC,qBAAoBvoF,KAAMomF,0BACrBA,yBAAsBlhF,QAEnBqxB,wBAGJo5C,EAAMD,KAAKC,MACb6Y,GAAO,EACFnnF,EAACrB,KAAQmmF,YAAY/kF,OAAS,EAAGC,GAAK,IAAKA,EAAC,SAC7C6mF,EAAMloF,KAAQmmF,YAAY9kF,GAC5BonF,GAAiB,EACZlrE,EAAI,EAAG4F,EAAK+kE,EAAO9mF,OAAQmc,EAAI4F,IAAM5F,EAAC,KACvC+nE,EAAY4C,EAAO3qE,OACrB+nE,EAAU6C,cAGRO,EAAU/Y,EAAM2V,EAAUr7D,MAC5B1B,EACF+8D,EAAUzvD,SAAW,EAAI6yD,EAAUpD,EAAUzvD,SAAW,EACtDtN,GAAY,GACd+8D,EAAU6C,UAAW,EACrB5/D,EAAW,GAEXkgE,GAAiB,MAEbE,EAAWrD,EAAUxvD,OAAOvN,MAC9B+8D,EAAUC,aAAY,KAClB1zE,EAAKyzE,EAAUC,aAAa,GAC5BtzE,EAAKqzE,EAAUC,aAAa,GAG5B/4E,EAAIqF,EAAK82E,GAFJrD,EAAUE,aAAa,GAEF3zE,GAC1BpF,EAAIwF,EAAK02E,GAFJrD,EAAUE,aAAa,GAEFvzE,QAC3Bs0E,cAAa,CAAI/5E,EAAGC,MAEvB64E,EAAUG,kBAAoBH,EAAUI,iBAAgB,KACpDt0E,EACS,IAAbu3E,EACIrD,EAAUI,iBACVJ,EAAUG,iBACVkD,GACGrD,EAAUI,iBAAmBJ,EAAUG,qBAC5CH,EAAU7nE,OAAM,KACZnM,EAAItR,KAAQ4oF,iBAAgB5oF,KAAMojC,eAClCylD,EAAqB7oF,KAAQsnF,aAAal2E,WAC9CA,EACA,EACAE,GACA,QAEGi1E,cAAavmF,KAAQ8oF,oBACxBD,EACAvD,EAAU7nE,aAGT+oE,kBAAoBp1E,OACpB23E,mBAAkB,WAGM7jF,IAA7BogF,EAAUK,qBACmBzgF,IAA7BogF,EAAUM,eAA4B,KAEhCv0E,EACS,IAAbs3E,EACIxyE,GAAOmvE,EAAUM,eAAiBj8E,KAAKC,GAAI,EAAID,KAAKC,IACpDD,KAAKC,GACL07E,EAAUK,eACVgD,GACGrD,EAAUM,eAAiBN,EAAUK,mBAC1CL,EAAU7nE,OAAM,KACZurE,EAAmBhpF,KAAQsnF,aAAaj2E,SAC5CA,GACA,QAEGk1E,cAAavmF,KAAQipF,sBACxBD,EACA1D,EAAU7nE,aAGTgpE,gBAAkBp1E,UAEpB03E,mBAAkB,GACvBP,GAAO,GACFlD,EAAU6C,SAAQ,UAIrBM,EAAc,MACXtC,YAAY9kF,GAAK,UACjB+mF,QAAQ/2B,IAAoB,OAC3BjhD,EAAW83E,EAAO,GAAG93E,SACvBA,GACFozE,GAAkBpzE,GAAU,SAK7B+1E,YAAWnmF,KAAQmmF,YAAY9mC,OAAO6pC,SACvCV,QAAqCtjF,IAAjClF,KAASomF,sBAAiCpmF,KAC3ComF,oBAAsB+C,sBAAqBnpF,KACzCqoF,kBAAkBziF,KAAI5F,UAUjCimF,EAAA7lF,UAAA6oF,sBAAqB,SAAC53E,EAAUoM,OAC1BtM,EpH3xBY5E,EAAYmX,EoH4xBtBgS,EAAa11B,KAAQ21B,gCACLzwB,IAAlBwwB,IAEF9b,GADAzI,EAAM,CAAIukB,EAAc,GAAKjY,EAAO,GAAIiY,EAAc,GAAKjY,EAAO,IACzCpM,EAAQrR,KAAQojC,epH/xBf1f,EoHgyBJjG,GpHhyBRlR,EoHgyBA4E,GpH/xBP,KAAOuS,EAAM,GACxBnX,EAAW,KAAOmX,EAAM,IoHgyBfvS,GAQT80E,EAAA7lF,UAAA0oF,oBAAmB,SAAC13E,EAAYqM,OAC1BtM,EACEukB,EAAa11B,KAAQ21B,oBACrByzD,EAAiBppF,KAAQu2D,qBACTrxD,IAAlBwwB,QAAqDxwB,IAAtBkkF,IAOjCj4E,EAAM,CALJsM,EAAO,GACNrM,GAAcqM,EAAO,GAAKiY,EAAc,IAAO0zD,EAEhD3rE,EAAO,GACNrM,GAAcqM,EAAO,GAAKiY,EAAc,IAAO0zD,WAG7Cj4E,GAST80E,EAAA7lF,UAAAwoF,iBAAgB,SAACS,OACT/3E,EAAItR,KAAQsmF,iBACd+C,EAAY,KACRj+C,EAAI95B,EAAK,GACTqsB,EAAIrsB,EAAK,UAEb3H,KAAK8mB,IAAI2a,EAAIzhC,KAAKwD,IAAIk8E,IACpB1/E,KAAK8mB,IAAIkN,EAAIh0B,KAAKuD,IAAIm8E,IACxB1/E,KAAK8mB,IAAI2a,EAAIzhC,KAAKuD,IAAIm8E,IACpB1/E,KAAK8mB,IAAIkN,EAAIh0B,KAAKwD,IAAIk8E,YAGnB/3E,GAWX20E,EAAA7lF,UAAAkpF,gBAAe,SAAC9mD,QACT8jD,cAAgBzkF,MAAMC,QAAQ0gC,GAC/BA,EAASh0B,QAAK,CACb,IAAK,UACA+nB,gBAAYv2B,KACfgoF,mBAAmB,IAU5B/B,EAAA7lF,UAAAyjB,UAAS,eACD1S,EAAMnR,KAAQ21B,2BACfxkB,EAGE4L,GAAiB5L,EAAMnR,KAAOwjE,iBAF5BryD,GASX80E,EAAA7lF,UAAAu1B,kBAAiB,uBAERttB,IAAI05E,KAObkE,EAAA7lF,UAAAmpF,eAAc,uBACAjC,cAMdrB,EAAA7lF,UAAAopF,uBAAsB,uBACR9B,SAASvD,qBAOvB8B,EAAA7lF,UAAAqpF,SAAQ,SAACC,eACWxkF,IAAdwkF,GACFA,EAAU,GAAC1pF,KAASkmF,OAAO,GAC3BwD,EAAU,GAAC1pF,KAASkmF,OAAO,GACpBwD,QAEKxD,OAAO13E,SAcvBy3E,EAAA7lF,UAAAupF,gBAAe,SAACnnD,UAEPtlB,GADKld,KAAQ4pF,wBAAwBpnD,GAClBxiC,KAAOwjE,kBAQnCyiB,EAAA7lF,UAAAwpF,wBAAuB,SAACpnD,OAChBlxB,EAAOkxB,GAAQxiC,KAAS6pF,+BACxB14E,EAAMnR,KACL21B,oBAEPhqB,GAAOwF,EAAQ,OACTC,EAAUpR,KAAgCu2D,gBAChD5qD,QAAsBzG,IAAfkM,EAA0B,OAC3BC,EAAQrR,KAAgCojC,qBAC9Cz3B,QAAoBzG,IAAbmM,EAAwB,GAExBH,GAAkBC,EAAQC,EAAYC,EAAUC,IAQzD20E,EAAA7lF,UAAAk6B,iBAAgB,uBACFwsD,gBAQdb,EAAA7lF,UAAAm6B,iBAAgB,uBACFwsD,gBAQdd,EAAA7lF,UAAAq6B,WAAU,uBAEDqvD,qBAAoB9pF,KAAM+mF,iBASnCd,EAAA7lF,UAAA46B,WAAU,SAACW,QACJgrD,cAAa3mF,KAAM6nF,mBAAkB,CAAEtuD,QAASoC,MAQvDsqD,EAAA7lF,UAAAo6B,WAAU,uBAEDsvD,qBAAoB9pF,KAAM8mF,iBASnCb,EAAA7lF,UAAA66B,WAAU,SAACU,QACJgrD,cAAa3mF,KAAM6nF,mBAAkB,CAAEvuD,QAASqC,MAQvDsqD,EAAA7lF,UAAA2pF,uBAAsB,SAACC,QAChBrD,cAAa3mF,KAAM6nF,mBAAkB,CAAE1D,oBAAqB6F,MAQnE/D,EAAA7lF,UAAAojE,cAAa,uBACC6iB,aASdJ,EAAA7lF,UAAAm2D,cAAa,uBACkCluD,IAAI05E,KASnDkE,EAAA7lF,UAAAqjE,eAAc,uBACAwjB,cAWdhB,EAAA7lF,UAAA6pF,uBAAsB,SAAC/7E,EAAQs0B,eACjB0nD,+BACV/sE,GAAejP,EAAMlO,KAAOwjE,iBAC5BhhC,IAWJyjD,EAAA7lF,UAAA8pF,+BAA8B,SAACh8E,EAAQs0B,OAC/BlxB,EAAOkxB,GAAQxiC,KAAS6pF,+BACxB/G,EAAcjyE,GAAS3C,GAAUoD,EAAK,GACtCyxE,EAAcjyE,GAAU5C,GAAUoD,EAAK,UACtC3H,KAAKuG,IAAI4yE,EAAaC,IAS/BkD,EAAA7lF,UAAA+pF,8BAA6B,SAACC,OACtB3F,EAAQ2F,GAAa,EACrBhxD,EAAap5B,KAAQqqF,yBAAwBrqF,KAAM8mF,gBACnDztD,EAAar5B,KAAQ+mF,eACrB72E,EAAMvG,KAAK+L,IAAI0jB,EAAgBC,GAAiB1vB,KAAK+L,IAAI+uE,mBAMnDn8E,UACW8wB,EAAgBzvB,KAAKwrB,IAAIsvD,EAAOn8E,EAAQ4H,KAYjE+1E,EAAA7lF,UAAAgjC,YAAW,uBAC0B/6B,IAAI05E,KASzCkE,EAAA7lF,UAAAkqF,8BAA6B,SAACF,OACtBG,EAAW5gF,KAAK+L,IAAI00E,GAAa,GACjChxD,EAAap5B,KAAQqqF,yBAAwBrqF,KAAM8mF,gBACnDztD,EAAar5B,KAAQ+mF,eACrB72E,EAAMvG,KAAK+L,IAAI0jB,EAAgBC,GAAiBkxD,kBAM1Cn5E,UACMzH,KAAK+L,IAAI0jB,EAAgBhoB,GAAcm5E,EAAWr6E,IAYtE+1E,EAAA7lF,UAAAypF,6BAA4B,SAACR,OACvB/3E,EAAItR,KAAQ4oF,iBAAiBS,GAC3B9+C,EAAOvqC,KAAQknF,gBACjB38C,IACFj5B,EAAI,CACFA,EAAK,GAAKi5B,EAAQ,GAAKA,EAAQ,GAC/Bj5B,EAAK,GAAKi5B,EAAQ,GAAKA,EAAQ,KAG5Bj5B,GAMT20E,EAAA7lF,UAAAs8B,SAAQ,eACAviB,EAAUna,KAAQwjE,gBAClBpyD,EAAUpR,KAA+Bu2D,gBACzCllD,EAAQrR,KAAQojC,cAClBjyB,EAAMnR,KACH21B,oBAED4U,EAAOvqC,KAAQknF,YACjB38C,EAAO,KACHigD,EAAWxqF,KAAQ6pF,+BACzB14E,EAAS00E,GACP10E,EAAMnR,KACD4oF,mBAAgB,CACpB4B,EAAY,GAAK,EAAIjgD,EAAQ,GAAIigD,EAAY,GAAK,EAAIjgD,EAAQ,IAC/Dn5B,EACAC,UAIFF,OAAQA,EAAO3C,MAAM,GACrB2L,gBAA2BjV,IAAfiV,EAA2BA,EAAa,KACpD/I,WAAYA,EACZC,SAAUA,EACVsqB,KAAI37B,KAAOk2B,YAWf+vD,EAAA7lF,UAAA81B,QAAO,eACDyF,EACEvqB,EAAUpR,KAAQu2D,4BACLrxD,IAAfkM,IACFuqB,EAAI37B,KAAQ8pF,qBAAqB14E,IAE5BuqB,GASTsqD,EAAA7lF,UAAA0pF,qBAAoB,SAAC14E,OAEflB,EAAK6zE,EADLn0E,EAAM5P,KAAQmnF,UAAY,UAErBF,aAAY,KACbwD,EAAUzpF,EAAiBhB,KAAMinF,aAAc71E,EAAY,GACjExB,EAAS66E,EACTv6E,EAAGlQ,KAAQinF,aAAawD,GAEtB1G,EADE0G,GAAOzqF,KAASinF,aAAa7lF,OAAS,EAC3B,EAEA8O,EAAGlQ,KAAQinF,aAAawD,EAAU,QAGjDv6E,EAAGlQ,KAAQ8mF,eACX/C,EAAU/jF,KAAQgnF,mBAEbp3E,EAASjG,KAAK+L,IAAIxF,EAAMkB,GAAczH,KAAK+L,IAAIquE,IASxDkC,EAAA7lF,UAAAk2B,qBAAoB,SAACqF,WACVsrD,aAAY,SACVA,aAAa7lF,QAAU,EAAC,OACxB,MAEHspF,EAAYt1E,GAChBzL,KAAK+Q,MAAMihB,GACX,EAAC37B,KACIinF,aAAa7lF,OAAS,GAEvB2iF,EAAU/jF,KACTinF,aAAayD,GAAS1qF,KAASinF,aAAayD,EAAY,eAExDzD,aAAayD,GAClB/gF,KAAKwrB,IAAI4uD,EAAY3uE,GAAMumB,EAAO+uD,EAAW,EAAG,gBAI3C5D,eAAiBn9E,KAAKwrB,IAAGn1B,KAAMgnF,YAAarrD,EAAI37B,KAAQmnF,WAenElB,EAAA7lF,UAAAuqF,IAAG,SAACC,EAAkBh0D,GACqC,IACrD9R,KACJnZ,GACE9J,MAAMC,QAAQ8oF,IACqD,mBAAvCA,EAAkBxrE,sBAE9C,IAEEvd,MAAMC,QAAQ8oF,GAAgB,CAChCj/E,IAAQiF,GAAQg6E,GAAmB,QAC7B18E,EAASiP,GAAeytE,EAAgB5qF,KAAOwjE,iBACrD1+C,EAAW+P,GAAAg2D,WAAkB38E,WACpB08E,EAAiBhqE,YAAchhB,EAAmB,CACrDsO,EAASiP,GACbytE,EAAiBv2E,YAASrU,KACrBwjE,kBAEP1+C,EAAW+P,GAAAg2D,WAAkB38E,IACpBoS,OAAMtgB,KAAMojC,cAAeryB,GAAU7C,aAExCqxD,EAAiBziD,KAErBgI,EADEy6C,EAEAqrB,EACGvrE,QACApT,UAAUszD,EAAcv/D,KAAOwjE,iBAGzBonB,OAIVE,YAAYhmE,EAAU8R,IAQ7BqvD,EAAA7lF,UAAA2qF,yBAAwB,SAACjmE,WACjBzT,EAAQrR,KAAQojC,cAChBvpB,EAAWlQ,KAAKwD,IAAIkE,GACpByI,EAAWnQ,KAAKuD,KAAKmE,GACrBw8C,EAAS/oC,EAASpD,qBAClB7R,EAASiV,EAASnD,YACpBqpE,EAAUz7E,EAAAA,EACV07E,EAAU17E,EAAAA,EACV27E,GAAW37E,EAAAA,EACX47E,GAAW57E,EAAAA,EACNlO,EAAI,EAAGuB,EAAKirD,EAAOzsD,OAAQC,EAAIuB,EAAIvB,GAAKwO,EAAM,KAC/Ci2E,EAAOj4B,EAAOxsD,GAAKwY,EAAWg0C,EAAOxsD,EAAI,GAAKyY,EAC9CisE,EAAOl4B,EAAOxsD,GAAKyY,EAAW+zC,EAAOxsD,EAAI,GAAKwY,EACpDmxE,EAAUrhF,KAAKsG,IAAI+6E,EAASlF,GAC5BmF,EAAUthF,KAAKsG,IAAIg7E,EAASlF,GAC5BmF,EAAUvhF,KAAKuG,IAAIg7E,EAASpF,GAC5BqF,EAAUxhF,KAAKuG,IAAIi7E,EAASpF,UAEtBiF,EAASC,EAASC,EAASC,IAOrClF,EAAA7lF,UAAA0qF,YAAW,SAAChmE,EAAU8R,OACd5rB,EAAU4rB,GAAW,GACvBtlB,EAAOtG,EAAQsG,KACdA,IACHA,EAAItR,KAAQ6pF,oCAKVxwD,EAHEkR,OACgBrlC,IAApB8F,EAAQu/B,QAAwBv/B,EAAQu/B,QAAO,CAAI,EAAG,EAAG,EAAG,GACxDkgD,OAA8BvlF,IAApB8F,EAAQy/E,SAAwBz/E,EAAQy/E,QAGtDpxD,OAD4Bn0B,IAA1B8F,EAAQquB,cACMruB,EAAQquB,mBACKn0B,IAApB8F,EAAQuuB,QACJv5B,KAAQs2B,qBAAqBtrB,EAAQuuB,SAElC,MAGZ6xD,EAAaprF,KAAQ+qF,yBAAyBjmE,GAGhD1T,EAAUpR,KAAQkqF,+BAA+BkB,EAAa,CAChE95E,EAAK,GAAKi5B,EAAQ,GAAKA,EAAQ,GAC/Bj5B,EAAK,GAAKi5B,EAAQ,GAAKA,EAAQ,KAEjCn5B,EAAagP,MAAMhP,GACfioB,EACA1vB,KAAKuG,IAAIkB,EAAYioB,GACzBjoB,EAAUpR,KAAQqqF,yBAAyBj5E,EAAYq5E,EAAU,EAAI,OAG/Dp5E,EAAQrR,KAAQojC,cAChBtpB,EAAWnQ,KAAKuD,IAAImE,GACpBwI,EAAWlQ,KAAKwD,IAAIkE,GACpBg6E,EAAYt6E,GAAUq6E,GAC5BC,EAAU,KAAQ9gD,EAAQ,GAAKA,EAAQ,IAAM,EAAKn5B,EAClDi6E,EAAU,KAAQ9gD,EAAQ,GAAKA,EAAQ,IAAM,EAAKn5B,MAC5C+5C,EAAUkgC,EAAU,GAAKxxE,EAAWwxE,EAAU,GAAKvxE,EACnDsxC,EAAUigC,EAAU,GAAKxxE,EAAWwxE,EAAU,GAAKvxE,EACnD3I,EAAMnR,KAAQ+1B,qBAAoB,CAAEo1B,EAASC,GAAUh6C,GACvDhB,EAAWpF,EAAQoF,SAAWpF,EAAQoF,SAAW/N,OAE9B6C,IAArB8F,EAAQ6qB,SAAsB71B,KAC3B41B,gBAAe,CAEhBxkB,WAAYA,EACZD,OAAQA,EACR0kB,SAAU7qB,EAAQ6qB,SAClBC,OAAQ9qB,EAAQ8qB,QAElB1lB,SAGGo2E,kBAAoBp1E,OACpBm1E,cAAgBp1E,OAChB43E,mBAAkB,GAAO,GAC9BvF,GAAkBpzE,GAAU,KAWhC61E,EAAA7lF,UAAAkrF,SAAQ,SAAC/+E,EAAY+E,EAAMm5B,QACpB8gD,iBACHvuE,GAAmBzQ,EAAUvM,KAAOwjE,iBACpClyD,EACAm5B,IASJw7C,EAAA7lF,UAAAmrF,iBAAgB,SAACh/E,EAAY+E,EAAMm5B,QAC5B88C,kBACH1B,GACEt5E,EACA+E,EACAm5B,EAAQzqC,KACHu2D,gBAAav2D,KACbojC,iBAaX6iD,EAAA7lF,UAAAorF,qBAAoB,SAACr6E,EAAQC,EAAYC,EAAUC,OAC7Cm6E,EACElhD,EAAOvqC,KAAQknF,YACjB38C,GAAWp5B,EAAM,KACbq5E,EAAWxqF,KAAQ6pF,8BAA8Bx4E,GACjDq6E,EAAgB7F,GACpB10E,EACAG,EAAI,CACHk5E,EAAY,GAAK,EAAIjgD,EAAQ,GAAIigD,EAAY,GAAK,EAAIjgD,EAAQ,IAC/Dn5B,EACAC,GAEFo6E,EAAW,CACTt6E,EAAO,GAAKu6E,EAAc,GAC1Bv6E,EAAO,GAAKu6E,EAAc,WAGvBD,GAMTxF,EAAA7lF,UAAA2nF,MAAK,wBACWpyD,0BAAgDzwB,IAA/BlF,KAAWu2D,iBAQ5C0vB,EAAA7lF,UAAAurF,aAAY,SAACC,OACLz6E,EAAS4L,GAAgB/c,KAAMumF,cAAavmF,KAAOwjE,sBACpD1/C,UAAS,CACZ3S,EAAO,GAAKy6E,EAAiB,GAC7Bz6E,EAAO,GAAKy6E,EAAiB,MAQjC3F,EAAA7lF,UAAAyrF,qBAAoB,SAACD,OACbz6E,EAAMnR,KAAQumF,mBACfgB,kBAAiB,CACpBp2E,EAAO,GAAKy6E,EAAiB,GAC7Bz6E,EAAO,GAAKy6E,EAAiB,MAWjC3F,EAAA7lF,UAAA0rF,iBAAgB,SAACrJ,EAAOhiE,OAChBhD,EACJgD,GAAczD,GAAmByD,EAAUzgB,KAAOwjE,sBAC/CuoB,yBAAyBtJ,EAAOhlE,IASvCwoE,EAAA7lF,UAAA2rF,yBAAwB,SAACtJ,EAAOhiE,OACxBurE,EAAQhsF,KAAQu2B,gBAAYv2B,KAAWsoF,iBACvCh3E,EAAItR,KAAQ4oF,iBAAgB5oF,KAAMojC,eAClC/M,EAAar2B,KAAQsnF,aAAal2E,WAAUpR,KAC3CwmF,kBAAoB/D,EACzB,EACAnxE,EACA06E,GAGEvrE,IAAUzgB,KACPumF,cAAavmF,KAAQ8oF,oBAAoBzyD,EAAe5V,SAG1D+lE,mBAAqB/D,OACrBsG,qBAUP9C,EAAA7lF,UAAA6rF,WAAU,SAACvoE,EAAOjD,QACXqrE,iBAAiBniF,KAAKwrB,IAAGn1B,KAAMgnF,aAActjE,GAAQjD,IAU5DwlE,EAAA7lF,UAAA8rF,eAAc,SAACxoE,EAAOjD,GAChBA,IACFA,EAAazD,GAAmByD,EAAUzgB,KAAOwjE,uBAE9C2oB,uBAAuBzoE,EAAOjD,IAOrCwlE,EAAA7lF,UAAA+rF,uBAAsB,SAACzoE,EAAOjD,OACtBurE,EAAQhsF,KAAQu2B,gBAAYv2B,KAAWsoF,iBACvC8D,EAAWpsF,KAAQsnF,aAAaj2E,SAAQrR,KACvCymF,gBAAkB/iE,EACvBsoE,GAEEvrE,IAAUzgB,KACPumF,cAAavmF,KAAQipF,sBAAsBmD,EAAa3rE,SAE1DgmE,iBAAmB/iE,OACnBqlE,qBASP9C,EAAA7lF,UAAA0jB,UAAS,SAAC3S,QACHo2E,kBAAkBvqE,GAAmB7L,EAAMnR,KAAOwjE,mBAOzDyiB,EAAA7lF,UAAAmnF,kBAAiB,SAACp2E,QACXo1E,cAAgBp1E,OAChB43E,qBAQP9C,EAAA7lF,UAAAgoF,QAAO,SAACiE,EAAM3oE,eACPwiE,OAAOmG,IAAS3oE,OAChB9c,eACOs/E,OAAOmG,IASrBpG,EAAA7lF,UAAAonF,cAAa,SAACp2E,QACPo1E,kBAAoBp1E,OACpB23E,qBASP9C,EAAA7lF,UAAA8jC,YAAW,SAAC7yB,QACLo1E,gBAAkBp1E,OAClB03E,qBAQP9C,EAAA7lF,UAAAqnF,QAAO,SAAC9rD,QACD6rD,cAAaxnF,KAAMs2B,qBAAqBqF,KAW/CsqD,EAAA7lF,UAAA2oF,kBAAiB,SAACuD,EAAsBC,OAChCP,EAAQhsF,KACPu2B,gBAAYv2B,KAAWsoF,kBAAoBiE,EAG5CH,EAAWpsF,KAAQsnF,aAAaj2E,SAAQrR,KACvCymF,gBACLuF,GAEI16E,EAAItR,KAAQ4oF,iBAAiBwD,GAC7B/1D,EAAar2B,KAAQsnF,aAAal2E,WAAUpR,KAC3CwmF,kBACL,EACAl1E,EACA06E,GAEIQ,EAASxsF,KAAQsnF,aAAan2E,OAAMnR,KACnCumF,cACLlwD,EACA/kB,EACA06E,EAAQhsF,KACHwrF,qBAAoBxrF,KAClBumF,cACLlwD,EACA+1D,EACA96E,SAIKjJ,IAAI05E,MAA2BqK,GAAWpsF,KAC5C8I,IAAIi5E,GAAuBqK,QAEzB/jF,IAAI05E,MAA6B1rD,GAAar2B,KAChD8I,IAAIi5E,GAAyB1rD,QAG5BhuB,IAAI05E,KACTvoE,GAAMxZ,KAAMqI,IAAI05E,IAAsByK,IAASxsF,KAE3C8I,IAAIi5E,GAAqByK,QAGvBj2D,iBAAmB+1D,GAAoBtsF,KACzCw2B,wBAEFkwD,mBAAgBxhF,GAYvB+gF,EAAA7lF,UAAA4nF,mBAAkB,SAACvyD,EAAcg3D,EAAyBhsE,OAClDoV,OAA4B3wB,IAAjBuwB,EAA6BA,EAAe,IACvDv0B,EAAYurF,GAA2B,EAEvCL,EAAWpsF,KAAQsnF,aAAaj2E,SAAQrR,KAAMymF,iBAC9Cn1E,EAAItR,KAAQ4oF,iBAAiBwD,GAC7B/1D,EAAar2B,KAAQsnF,aAAal2E,WAAUpR,KAC3CwmF,kBACLtlF,EACAoQ,GAEIk7E,EAASxsF,KAAQsnF,aAAan2E,OAAMnR,KACnCumF,cACLlwD,EACA/kB,GACA,EAAKtR,KACAwrF,qBAAoBxrF,KAClBumF,cACLlwD,EACA+1D,EACA96E,OAIa,IAAbukB,IAAc71B,KAAU0mF,0BACrBF,kBAAoBnwD,OACpBowD,gBAAkB2F,OAClB7F,cAAgBiG,YAChBzD,wBAIDtrE,EACJgD,IAA4B,IAAboV,EAAc71B,KAAQ0mF,mBAAgBxhF,QAClDwhF,mBAAgBxhF,OAGdqxD,kBAAoBlgC,GAAar2B,KACjCojC,gBAAkBgpD,GAAWpsF,KAC5B21B,qBACLnc,GAAMxZ,KAAM21B,oBAAqB62D,UAEzBj2D,gBAAYv2B,KACdw2B,wBAGFZ,gBAAe,CAClBvkB,SAAU+6E,EACVj7E,OAAQq7E,EACRp7E,WAAYilB,EACZR,SAAUA,EACVC,OAAQV,GACR3X,OAAQA,MAWdwoE,EAAA7lF,UAAAssF,iBAAgB,gBACT1E,mBAAmB,QAEnBI,QAAQ/2B,GAAsB,IAWrC40B,EAAA7lF,UAAAusF,eAAc,SAACl3D,EAAcg3D,EAAyBhsE,OAC9ChD,EACJgD,GAAczD,GAAmByD,EAAUzgB,KAAOwjE,sBAC/CopB,uBAAuBn3D,EAAcg3D,EAAyBhvE,IAUrEwoE,EAAA7lF,UAAAwsF,uBAAsB,SAACn3D,EAAcg3D,EAAyBhsE,QACvD2nE,QAAQ/2B,IAAsB,QAE9B22B,mBAAmBvyD,EAAcg3D,EAAyBhsE,IAUjEwlE,EAAA7lF,UAAA21B,qBAAoB,SAACyvD,EAAcqH,OAC3Bv7E,EAAItR,KAAQ4oF,iBAAgB5oF,KAAMojC,2BAC5BkkD,aAAan2E,OACvBq0E,EACAqH,GAAoB7sF,KAASu2D,gBAC7BjlD,IAaJ20E,EAAA7lF,UAAAg2B,mBAAkB,SAAC02D,EAAYC,OACvBC,EAAShtF,KAAQs2B,qBAAqBw2D,eAChChD,qBAAoB9pF,KACzBqqF,yBAAyB2C,EAAWD,KAa7C9G,EAAA7lF,UAAAiqF,yBAAwB,SAAC3E,EAAkBqH,OACnC7rF,EAAY6rF,GAAiB,EAC7Bz7E,EAAItR,KAAQ4oF,iBAAgB5oF,KAAMojC,2BAE5BkkD,aAAal2E,WAAWs0E,EAAkBxkF,EAAWoQ,IAErE20E,EAzhDA,CAAmB7kE,EAAAla,ueE2zCnB+lF,GAv9CA,SAAAxpF,GAGK,SACHypF,EAAYliF,OAAZpH,EACEH,EAAAI,KAAA7D,OAAAA,KAKA4D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,OAEC2mF,EAi3CP,SAC4BniF,GAG1B,IACCoiF,EAAsB,UACUloF,IAAhC8F,EAAQoiF,sBACVA,EACoC,iBAA3BpiF,EAAQoiF,oBACXz/E,SAAS0/E,eAAeriF,EAAQoiF,qBAChCpiF,EAAQoiF,qBAKb,IAeCE,EAaAC,EAcAC,EAzCEnqF,EAAM,GAENoqF,EACJziF,EAAQ8wE,QAC2C,mBAAzB9wE,EAAQ8wE,OAAQO,UACXrxE,EAAQ8wE,OAAM,IACrC4R,GAAAxmF,QAAU,CAAE40E,OAAmC9wE,EAAQ8wE,SACjEz4E,EAAOw7E,IAA0B4O,EAEjCpqF,EAAOw7E,IAAsB7zE,EAAQ7K,OAErCkD,EAAOw7E,SACY35E,IAAjB8F,EAAQwqB,KAAqBxqB,EAAQwqB,KAAI,IAAOm4D,GAAAzmF,aAGzBhC,IAArB8F,EAAQsiF,WACNzrF,MAAMC,QAAQkJ,EAAQsiF,UACxBA,EAAQ,IAAOpmB,GAAAhgE,QAAW8D,EAAQsiF,SAAS9+E,UAE3C7C,GACsD,mBAA1BX,EAAQsiF,SAAUhsB,SAC5C,IAEFgsB,EAAsCtiF,EAAQsiF,gBAKrBpoF,IAAzB8F,EAAQuiF,eACN1rF,MAAMC,QAAQkJ,EAAQuiF,cACxBA,EAAY,IAAOrmB,GAAAhgE,QAAW8D,EAAQuiF,aAAa/+E,UAEnD7C,GAC0D,mBAA9BX,EAAQuiF,aAAcjsB,SAEhD,IAEFisB,EAA0CviF,EAAQuiF,oBAK7BroF,IAArB8F,EAAQwiF,SACN3rF,MAAMC,QAAQkJ,EAAQwiF,UACxBA,EAAQ,IAAOtmB,GAAAhgE,QAAW8D,EAAQwiF,SAASh/E,UAE3C7C,GACsD,mBAA1BX,EAAQwiF,SAAUlsB,SAC5C,IAEFksB,EAAWxiF,EAAQwiF,UAGrBA,EAAQ,IAAOtmB,GAAAhgE,eAIfomF,SAAUA,EACVC,aAAcA,EACdH,oBAAqBA,EACrBI,SAAUA,EACVnqF,OAAQA,GA97CgBuqF,CAAsB5iF,UAG9CpH,EAAKiqF,yBAA2BjqF,EAAKkqF,mBAAmBloF,KAAKhC,GAM7DA,EAAKmqF,sBACyB7oF,IAA5B8F,EAAQgjF,gBAAgChjF,EAAQgjF,gBAAkB,GAMpEpqF,EAAKy+C,iBACoBn9C,IAAvB8F,EAAQ04B,WACJ14B,EAAQ04B,WACRr5B,GAMNzG,EAAKqqF,yBAMLrqF,EAAKsqF,mBAKLtqF,EAAKuqF,gBAA6C,gBAC3CD,wBAAqBhpF,OACrBkpF,aAAa1e,KAAKC,QACvB/pE,KAAKhC,GAMPA,EAAKyqF,6BjIlLC,EAAG,EAAG,EAAG,EAAG,EAAG,GiIwLrBzqF,EAAK0qF,6BjIxLC,EAAG,EAAG,EAAG,EAAG,EAAG,GiI8LrB1qF,EAAK2qF,YAAc,EAMnB3qF,EAAK4qF,YAAc,KAOnB5qF,EAAK6qF,gBAAkB,KAMvB7qF,EAAK8qF,yBAA2B,KAMhC9qF,EAAK+qF,uBAAyB,KAM9B/qF,EAAKgrF,gCAAkC,KAMvChrF,EAAKirF,UAAYlhF,SAASC,cAAa,OACvChK,EAAKirF,UAAUp1D,UAAS,eACT,iBAAsBvuB,OAAM,YAAc,IACzDtH,EAAKirF,UAAUhhF,MAAM48B,SAAQ,WAC7B7mC,EAAKirF,UAAUhhF,MAAMsxC,SAAQ,SAC7Bv7C,EAAKirF,UAAUhhF,MAAM8E,MAAK,OAC1B/O,EAAKirF,UAAUhhF,MAAM+E,OAAM,OAM3BhP,EAAKkrF,kBAAoBnhF,SAASC,cAAa,OAC/ChK,EAAKkrF,kBAAkBjhF,MAAM48B,SAAQ,WACrC7mC,EAAKkrF,kBAAkBjhF,MAAMsrB,OAAM,IACnCv1B,EAAKkrF,kBAAkBjhF,MAAM8E,MAAK,OAClC/O,EAAKkrF,kBAAkBjhF,MAAM+E,OAAM,OACnChP,EAAKkrF,kBAAkBjhF,MAAMypB,cAAa,OAC1C1zB,EAAKkrF,kBAAkBr1D,UAAS,sBAChC71B,EAAKirF,UAAU/pD,YAAYlhC,EAAKkrF,mBAMhClrF,EAAKmrF,2BAA6BphF,SAASC,cAAa,OACxDhK,EAAKmrF,2BAA2BlhF,MAAM48B,SAAQ,WAC9C7mC,EAAKmrF,2BAA2BlhF,MAAMsrB,OAAM,IAC5Cv1B,EAAKmrF,2BAA2BlhF,MAAM8E,MAAK,OAC3C/O,EAAKmrF,2BAA2BlhF,MAAM+E,OAAM,OAC5ChP,EAAKmrF,2BAA2BlhF,MAAMypB,cAAa,OACnD1zB,EAAKmrF,2BAA2Bt1D,UAAS,gCACzC71B,EAAKirF,UAAU/pD,YAAYlhC,EAAKmrF,4BAMhCnrF,EAAKorF,wBAA0B,KAM/BprF,EAAKy5E,eAAiBryE,EAAQgyE,cAM9Bp5E,EAAKqrF,qBAAuB9B,EAAgBC,oBAM5CxpF,EAAKsrF,gBAAkB,KAMvBtrF,EAAK0pF,SAAWH,EAAgBG,UAAQ,IAAQpmB,GAAAhgE,QAMhDtD,EAAK2pF,aAAeJ,EAAgBI,cAAY,IAAQrmB,GAAAhgE,QAMxDtD,EAAKurF,UAAYhC,EAAgBK,SAOjC5pF,EAAKwrF,gBAAe,GAMpBxrF,EAAKs4B,UAAY,KAMjBt4B,EAAKyrF,cAMLzrF,EAAK0rF,qBAAoB,GAMzB1rF,EAAK2rF,WAAU,IAAOC,GAAAtoF,QACpBtD,EAAK6rF,gBAAgB7pF,KAAKhC,GAC1BA,EAAK8rF,kBAAkB9pF,KAAKhC,IAG9BA,EAAKgF,kBACHi2E,GACAj7E,EAAK+rF,0BAEP/rF,EAAKgF,kBAAkBi2E,GAAkBj7E,EAAKgsF,oBAC9ChsF,EAAKgF,kBAAkBi2E,GAAkBj7E,EAAKisF,oBAC9CjsF,EAAKgF,kBAAkBi2E,GAAoBj7E,EAAKksF,sBAIhDlsF,EAAKwE,cAAc+kF,EAAgB9pF,QAEnCO,EAAK0pF,SAAS3xE,QAIT,SACOo0E,GACRA,EAAQ34D,OAAMp3B,OACd4F,KAAKhC,IAGTA,EAAK0pF,SAASnpF,iBACZm8D,GAGG,SACO77D,GACRA,EAAMm8D,QAAQxpC,OAAMp3B,OACpB4F,KAAKhC,IAGTA,EAAK0pF,SAASnpF,iBACZm8D,GAGG,SACO77D,GACRA,EAAMm8D,QAAQxpC,OAAO,OACrBxxB,KAAKhC,IAGTA,EAAK2pF,aAAa5xE,QAIb,SACOq0E,GACRA,EAAY54D,OAAMp3B,OAClB4F,KAAKhC,IAGTA,EAAK2pF,aAAappF,iBAChBm8D,GAGG,SACO77D,GACRA,EAAMm8D,QAAQxpC,OAAMp3B,OACpB4F,KAAKhC,IAGTA,EAAK2pF,aAAappF,iBAChBm8D,GAGG,SACO77D,GACRA,EAAMm8D,QAAQxpC,OAAO,OACrBxxB,KAAKhC,IAGTA,EAAKurF,UAAUxzE,QAAQ/X,EAAKqsF,oBAAoBrqF,KAAKhC,IAErDA,EAAKurF,UAAUhrF,iBACbm8D,GAGG,SACO77D,QACHwrF,oBAC4CxrF,EAAMm8D,UAEvDh7D,KAAKhC,IAGTA,EAAKurF,UAAUhrF,iBACbm8D,GAGG,SACO77D,OAIFmhB,EAFJnhB,EAAMm8D,QAEWr7C,aACRrgB,IAAP0gB,UAAgB5lB,KACNovF,gBAAgBxpE,EAAGgT,YAEjCn0B,EAAMm8D,QAAQxpC,OAAO,OACrBxxB,KAAKhC,aAtUcssF,GAAAhD,EAAAzpF,GA8UzBypF,EAAA9sF,UAAAk9B,eAAc,qBACFj2B,MAAK,oDAQjB6lF,EAAA9sF,UAAA+vF,WAAU,SAACJ,QACJK,cAAc9sF,KAAKysF,IAY1B7C,EAAA9sF,UAAAiwF,eAAc,SAACL,QACRM,kBAAkBhtF,KAAK0sF,IAU9B9C,EAAA9sF,UAAAmwF,SAAQ,SAACv2D,GACKh6B,KAAQwwF,gBAAgBnU,YAC7B/4E,KAAK02B,IAQdkzD,EAAA9sF,UAAAqwF,WAAU,SAACC,QACJC,cAAcrtF,KAAKotF,IAQ1BxD,EAAA9sF,UAAA6vF,oBAAmB,SAACS,OACZ9qE,EAAK8qE,EAAQnrE,aACRrgB,IAAP0gB,IAAgB5lB,KACbovF,gBAAgBxpE,EAAGgT,YAAc83D,GAExCA,EAAQt5D,OAAMp3B,OAOhBktF,EAAA9sF,UAAAQ,gBAAe,gBACRgwF,UAAU,MACfntF,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAqBvBktF,EAAA9sF,UAAAywF,sBAAqB,SAACjkE,EAAOxc,EAAUwmB,WAC3B43D,iBAGJjiF,EAAUvM,KAAQ8wF,+BAA+BlkE,GAEjDs3B,OACyBh/C,KAF/B0xB,OAA8B1xB,IAAhB0xB,EAA4BA,EAAW,IAEvCstB,aAA6BttB,EAAYstB,aAAe,EAChEy1B,OACwBz0E,IAA5B0xB,EAAY+iD,YAA4B/iD,EAAY+iD,YAAcx3E,EAC9Ds3E,GAA4C,IAA7B7iD,EAAY6iD,yBACrBv9C,UAAU+nB,2BACpB13C,EAAUvM,KACLwuF,YACLtqC,EACAu1B,EACArpE,EACA,KACAupE,EACA,QAYJuT,EAAA9sF,UAAA2wF,mBAAkB,SAACnkE,EAAOgK,OAClB0mC,EAAQ,eACTuzB,sBACHjkE,GAAK,SACKqlB,GACRqrB,EAASh6D,KAAK2uC,KAEhBrb,GAEK0mC,GAwBT4vB,EAAA9sF,UAAAg6E,oBAAmB,SAACxtD,EAAOxc,EAAUwmB,WACzB43D,iBAGJxjF,EAAU4rB,GAAW,GACrBstB,OACqBh/C,IAAzB8F,EAAQk5C,aAA6Bl5C,EAAQk5C,aAAe,EACxDy1B,EAAc3uE,EAAQ2uE,aAAex3E,cAC/B+5B,UAAUk+C,oBACpBxtD,EAAK5sB,KACAwuF,YACLtqC,EACA9zC,EACAupE,KAYJuT,EAAA9sF,UAAA4wF,kBAAiB,SAACpkE,EAAOgK,YACb43D,YAAW,OACZ,MAEHjiF,EAAUvM,KAAQ8wF,+BAA+BlkE,GAEjD+sD,OACwBz0E,KAF9B0xB,OAA8B1xB,IAAhB0xB,EAA4BA,EAAW,IAEvC+iD,YAA4B/iD,EAAY+iD,YAAcx3E,EAC9D+hD,OACyBh/C,IAA7B0xB,EAAYstB,aAA6BttB,EAAYstB,aAAe,EAChEu1B,GAA4C,IAA7B7iD,EAAY6iD,yBACrBv9C,UAAUm+C,uBACpB9tE,EAAUvM,KACLwuF,YACLtqC,EACAu1B,EACAE,EACA,OAUJuT,EAAA9sF,UAAA6wF,mBAAkB,SAACxsF,eACLooB,uBAAsB7sB,KAAM2sB,cAAcloB,KAQxDyoF,EAAA9sF,UAAA8wF,2BAA0B,SAACzsF,eACbqsF,+BAA8B9wF,KAAM2sB,cAAcloB,KAShEyoF,EAAA9sF,UAAAusB,cAAa,SAACloB,OACN0sF,EAAgBnxF,KAAQ6uF,UAAUuC,wBAClCC,qBAEgB5sF,EACWA,EAAO6sF,eAAe,GACtB7sF,SAG/B4sF,EAAc95D,QAAU45D,EAAiBxmD,KACzC0mD,EAAc75D,QAAU25D,EAAiBI,MAa7CrE,EAAA9sF,UAAAoxF,UAAS,uBAEAnpF,IAAIw2E,KAWbqO,EAAA9sF,UAAAuqE,iBAAgB,eACRxqE,EAAMH,KAAQwxF,wBACLtsF,IAAX/E,EACkB,iBAANA,EACVwN,SAAS0/E,eAAeltF,GACxBA,EAEG,MAWX+sF,EAAA9sF,UAAAysB,uBAAsB,SAACD,UACd7P,GAAgB/c,KAChB8wF,+BAA+BlkE,GAAK5sB,KACpCuxE,UAAU/N,kBAUnB0pB,EAAA9sF,UAAA0wF,+BAA8B,SAAClkE,OACvBX,EAAUjsB,KAAQwuF,mBACnBviE,EAGI3f,GACL2f,EAAW86B,2BACXn6B,EAAMpe,SAJD,MAeX0+E,EAAA9sF,UAAAgwF,YAAW,uBACG9C,UASdJ,EAAA9sF,UAAAuwF,YAAW,uBACGxB,WAWdjC,EAAA9sF,UAAAqxF,eAAc,SAAC7rE,OACP8qE,EAAO1wF,KAAQovF,gBAAgBxpE,EAAGgT,wBACrB1zB,IAAZwrF,EAAwBA,EAAU,MAW3CxD,EAAA9sF,UAAAkwF,gBAAe,uBACD/C,cASdL,EAAA9sF,UAAAowF,cAAa,uBAC4BnoF,IAAIw2E,KAQ7CqO,EAAA9sF,UAAAi8E,UAAS,kBACKr8E,KAAQwwF,gBAAgBnU,aAOtC6Q,EAAA9sF,UAAAsxF,WAAU,mBACFv0D,EAAgBn9B,KAAQwwF,gBAAgB51D,sBACrCv5B,EAAI,EAAGuB,EAAKu6B,EAAiB/7B,OAAQC,EAAIuB,IAAMvB,EAAC,KAEjDyB,EADQq6B,EAAiB97B,GAAG24B,MAGhCyC,eACE35B,GAAUA,EAAOk4D,QAAO,OACnB,SAGJ,GAUTkyB,EAAA9sF,UAAA6wE,uBAAsB,SAAC1kE,OACfolF,EAAiB30E,GACrBzQ,EAAUvM,KACLuxE,UAAU/N,6BAELouB,+BAA+BD,IAS7CzE,EAAA9sF,UAAAwxF,+BAA8B,SAACrlF,OACvB0f,EAAUjsB,KAAQwuF,mBACnBviE,EAGI3f,GACL2f,EAAWi6B,2BACX35C,EAAWiC,MAAM,EAAG,IAJf,MAaX0+E,EAAA9sF,UAAA48B,YAAW,uBACGd,WASdgxD,EAAA9sF,UAAA4jC,QAAO,uBAEE37B,IAAIw2E,KAWbqO,EAAA9sF,UAAAmxE,QAAO,uBAC4BlpE,IAAIw2E,KAQvCqO,EAAA9sF,UAAAy6E,YAAW,uBACGgU,WAUd3B,EAAA9sF,UAAAyxF,oBAAmB,uBACL/C,mBAUd5B,EAAA9sF,UAAA0xF,6BAA4B,uBACd/C,4BAMd7B,EAAA9sF,UAAAo+E,iBAAgB,eACRuT,EAAa/xF,KAAQ2qE,0BACpBonB,EAAgBA,EAAcC,cAAgBrkF,UAUvDu/E,EAAA9sF,UAAAqvF,gBAAe,SAAC7rC,EAAMo0B,EAAe8J,EAAYlN,UACxC4a,GAAAC,gBAAezvF,KACfwuF,YACL5qC,EACAo0B,EACA8J,EACAlN,IAQJsY,EAAA9sF,UAAA0tF,mBAAkB,SAACmE,EAAc7sF,OACzBrF,EAAOqF,GAAY6sF,EAAalyF,KAChCm3B,EAAe,IAAO+4C,GAAA/oE,QAAgBnH,EAAIC,KAAQiyF,QACnDC,sBAAsBh7D,IAM7Bg2D,EAAA9sF,UAAA8xF,sBAAqB,SAACh7D,WACVs3D,iBAKJniE,EACJ6K,EAAgB7K,cAEZ1jB,EAAY0jB,EAActsB,QAE9B4I,IAAck0E,IACdl0E,IAAcnD,GACdmD,IAAcnD,EAAiB,KAEzB+4E,EAAGv+E,KAAQw+E,mBACX2T,EAAQnyF,KAAQ6uF,UAAUpQ,YAAWz+E,KAClC6uF,UAAUpQ,cACfF,EACEp+E,EAA8BksB,EAAclsB,eAI3C4uF,2BAA2BlkB,SAAS1qE,MAKvCgyF,IAAa5T,EAAMA,EAAI6T,gBAAkBD,GAAUtnB,SAAS1qE,GAAM,UAKxE+2B,EAAgBjL,WAAUjsB,KAAQwuF,aACU,SAAnChqF,cAAc0yB,WACfm7D,EAAiBryF,KAAQswF,kBAAkBhvB,WAAW9yD,QACnDnN,EAAIgxF,EAAkBjxF,OAAS,EAAGC,GAAK,EAAGA,IAAC,KAC5C2uF,EAAcqC,EAAkBhxF,MAEpC2uF,EAAY/4D,WAAMj3B,MACjBgwF,EAAYh5D,aAASh3B,KAChB2qE,uBAIKqlB,EAAYlrF,YAAYoyB,IACxBA,EAAgBj3B,mBAAkB,SAUrDitF,EAAA9sF,UAAAkyF,iBAAgB,eACRrmE,EAAUjsB,KAAQwuF,YAWlBlW,EAASt4E,KAAQuvF,eAClBjX,EAAUrnB,UAAO,KAChBywB,EAAe1hF,KAAQ+tF,iBACvBpM,EAAcD,KACdz1D,EAAU,KACNsmE,EAAQtmE,EAAW2wC,aACrB21B,EAAMlhC,KAAuBkhC,EAAMlhC,IAAoB,KACnDmhC,EAAmB9iB,KAAKC,MAAQ1jD,EAAWqpD,KAAO,EACxDoM,EAAkB8Q,EAAmB,EAAI,EACzC7Q,EAAc6Q,EAAmB,EAAI,GAGrCla,EAAUiJ,kBAAoBG,IAChCpJ,EAAUqI,eACVrI,EAAUmJ,cAAcC,EAAiBC,KAK3C11D,IAAUjsB,KACLmF,YAAYm2B,KAChBrP,EAAWwK,SAAOz2B,KACbuvF,WAAWhO,mBAAevhF,KAC1B0xF,cAAU1xF,KAEXk8B,UAAUq9C,oBACbj+C,GACArP,WAIEisD,EAAmBl4E,KAAQsvF,qBACxBjuF,EAAI,EAAGuB,EAAKs1E,EAAoB92E,OAAQC,EAAIuB,IAAMvB,EACzD62E,EAAoB72E,GAACrB,KAAQisB,GAE/BisD,EAAoB92E,OAAS,GAM/B8rF,EAAA9sF,UAAAyvF,mBAAkB,gBACPte,YAAOvxE,KAAYuxE,UAAUh7C,gBAAYv2B,KAC3CuxE,UAAUyW,mBAAmB,QAG/B7rD,UAMP+wD,EAAA9sF,UAAA0vF,qBAAoB,eAMdiC,UACKP,cACPO,EAAa/xF,KAAQ2qE,yBAGdqkB,wBAAuB,SACrB3tF,EAAI,EAAGuB,EAAE5C,KAAQkvF,gBAAgB9tF,OAAQC,EAAIuB,IAAMvB,EAC1D4E,EAAajG,KAAMkvF,gBAAgB7tF,SAEhC6tF,gBAAkB,UAClBL,UAAU7pF,oBACbQ,EAAqBxF,KAChB6tF,+BAEFgB,UAAU7pF,oBACbQ,EAAexF,KACV6tF,+BAEoB3oF,SAAlBmqF,gBACPrqF,oBAAoBQ,EAAgBxF,KAAOqvF,eAAe,QACrDA,mBAAgBnqF,QAElB8pF,wBAAwBruF,eACxBquF,wBAA0B,KAC/BnoD,GAAU7mC,KAAM6uF,cAGbkD,WAsBQhvF,KATXgvF,EAAcjtD,YAAW9kC,KAAM6uF,gBACrB3yD,YAASl8B,KACZk8B,UAASl8B,KAAQs9B,uBAGnB0xD,wBAAuB,IAAOyD,GAAAvrF,QAAsBlH,KAAAA,KAElDq9E,gBAEWtwD,GAAmB/sB,KAC9BgvF,wBAAwB7qF,iBAC3B4oB,GAAoBhqB,GAAG/C,KAClBkyF,sBAAsBtsF,KAAI5F,YAG9B6uF,UAAU1qF,iBACbqB,EAAqBxF,KAChB6tF,0BACL,QAEGgB,UAAU1qF,iBACbqB,EAAexF,KACV6tF,2BACL/iF,IAAuB,CAAIC,SAAS,QAGhCqiF,EAAmBptF,KAASivF,qBACjBjvF,KACRivF,qBADL8C,OAEC7C,gBAAe,CAClBzpF,EACE2nF,EACA5nF,EAAiBxF,KACZ8tF,mBAAkB9tF,MAGzByF,EACE2nF,EACA5nF,EAAkBxF,KACb8tF,mBAAkB9tF,YAKjBqvF,qBACHA,cAAarvF,KAAQ0yF,WAAW9sF,KAAI5F,MACzCkL,OAAO/G,iBAAiBqB,EAAgBxF,KAAOqvF,eAAe,cA1DvDnzD,YACP0zC,aAAY5vE,KAAMiuF,+BACbA,8BAA2B/oF,OAC3BoqF,qBAAqBluF,OAAS,OAC9B86B,UAAUv7B,eACVu7B,UAAY,WAEVgyD,qBACP3F,qBAAoBvoF,KAAMkuF,yBACrBA,wBAAqBhpF,QAqDzBwtF,cAQPxF,EAAA9sF,UAAAsvF,kBAAiB,gBACVvzD,UAMP+wD,EAAA9sF,UAAAuyF,2BAA0B,gBACnBx2D,UAMP+wD,EAAA9sF,UAAAwvF,mBAAkB,gBACPlB,2BACPzoF,EAAajG,KAAM0uF,+BACdA,yBAA2B,WAEzBC,yBACP1oF,EAAajG,KAAM2uF,6BACdA,uBAAyB,UAE1Bn5D,EAAIx1B,KAAQuxE,UACd/7C,SACGo9D,2BAEAlE,yBAA2BjpF,EAC9B+vB,EACAj1B,EAA8BP,KACzB2yF,2BAA0B3yF,WAG5B2uF,uBAAyBlpF,EAC5B+vB,EACAhwB,EAAgBxF,KACX2yF,2BAA0B3yF,MAIjCw1B,EAAKwyD,mBAAmB,SAErB7rD,UAMP+wD,EAAA9sF,UAAAuvF,yBAAwB,gBACbf,uCACFA,gCAAgCjzE,QAAQ1V,QACxC2oF,gCAAkC,UAEnCnB,EAAUztF,KAAQwwF,gBACpB/C,IAAUztF,KACP4uF,gCAA+B,CAClCnpF,EAAOgoF,EAAYltF,EAA8BP,KAAOm8B,OAAMn8B,MAC9DyF,EAAOgoF,EAAYjoF,EAAgBxF,KAAOm8B,OAAMn8B,aAG/Cm8B,UAMP+wD,EAAA9sF,UAAAyyF,WAAU,wBACMrE,aAOhBtB,EAAA9sF,UAAA0yF,WAAU,gBACC5E,oBACP3F,qBAAoBvoF,KAAMkuF,yBAEvBC,mBAMPjB,EAAA9sF,UAAAs6E,WAAU,mBACFX,EAAW/5E,KAAQwwF,gBAAgB51D,sBAChCv5B,EAAI,EAAGuB,EAAKm3E,EAAY34E,OAAQC,EAAIuB,IAAMvB,EAAC,KAC5C24B,EAAQ+/C,EAAY14E,GAAG24B,MACzBA,EAAMuD,eACRvD,EAAMgD,cAAcsnB,uBAS1B4oC,EAAA9sF,UAAA+7B,OAAM,gBACKD,gBAAyCh3B,IAAhClF,KAASkuF,qBAAgCluF,KACpDkuF,mBAAqB/E,sBAAqBnpF,KAAMmuF,mBAWzDjB,EAAA9sF,UAAA2yF,cAAa,SAAChD,eACAK,cAAcxwD,OAAOmwD,IAUnC7C,EAAA9sF,UAAA4yF,kBAAiB,SAAChD,eACJM,kBAAkB1wD,OAAOowD,IAUvC9C,EAAA9sF,UAAA6yF,YAAW,SAACj5D,UACEh6B,KAAQwwF,gBAAgBnU,YACtBz8C,OAAO5F,IAUvBkzD,EAAA9sF,UAAA8yF,cAAa,SAACxC,eACAC,cAAc/wD,OAAO8wD,IAOnCxD,EAAA9sF,UAAAguF,aAAY,SAAC9Y,OAAb1xE,EAAA5D,KACQsR,EAAItR,KAAQgkC,UACZxO,EAAIx1B,KAAQuxE,UACZ4hB,EAAkBnzF,KAAQwuF,YAE5BviE,EAAa,aACJ/mB,IAAToM,GAAsBgxB,GAAQhxB,IAASkkB,GAAQA,EAAKuyD,QAAK,KACrDnrB,EAAYpnC,EAAKi0D,SAAQzpF,KACxBwuF,YAAWxuF,KAAQwuF,YAAY5xB,eAAY13D,GAE5Cw2B,EAAYlG,EAAKkH,WACvBzQ,EAAU,CACRwK,SAAS,EACTyvB,2BAA0BlmD,KAAOquF,4BACjCx6C,cAAe,KACf3lC,OAAQgD,GACNwqB,EAAUvqB,OACVuqB,EAAUtqB,WACVsqB,EAAUrqB,SACVC,GAEFhM,MAAKtF,KAAOuuF,cACZtxB,WAAY,EACZ9/B,iBAAgBn9B,KAAOwwF,gBAAgB51D,sBACvC8I,WAAU1jC,KAAOqiD,YACjB0E,2BAA0B/mD,KAAOsuF,4BACjCpW,oBAAmB,GACnB5mE,KAAMA,EACNgnE,UAASt4E,KAAOuvF,WAChBja,KAAMA,EACNgC,UAAS,GACT57C,UAAWA,EACXkhC,UAAWA,EACXyb,YAAW,YAIVmW,YAAcviE,OACdiQ,UAAUgB,YAAYjR,GAEvBA,EAAU,IACRA,EAAWwK,SAAOz2B,KACfm8B,SAEPt6B,MAAMzB,UAAUkD,KAAKwC,MAAK9F,KACnBsvF,qBACLrjE,EAAWisD,qBAGTib,IACanzF,KACPyuF,kBACJ79E,GAAO5Q,KAAMyuF,mBACZ1+E,GAAOkc,EAAW/d,OAAMlO,KAAOyuF,yBAE7BjqF,cAAa,IACZsoB,GAAA5lB,QAAS03E,GAAsB5+E,KAAQmzF,SAExC1E,gBAAkBh/E,GAAmBzP,KAAMyuF,kBAI1CzuF,KACHyuF,kBACJxiE,EAAW2wC,UAAUvL,MACrBplC,EAAW2wC,UAAUvL,MACrBthD,GAAOkc,EAAW/d,OAAMlO,KAAOyuF,wBAG3BjqF,cAAa,IACZsoB,GAAA5lB,QAAS03E,GAAoB5+E,KAAQisB,IAE3C1d,GAAM0d,EAAW/d,OAAMlO,KAAOyuF,uBAI7BjqF,cAAa,IAAKsoB,GAAA5lB,QAAS03E,GAAuB5+E,KAAQisB,SAErDgiE,2BAAwBjuF,KAC3BiuF,yBAA2Bje,YAAU,WACxCpsE,EAAKqqF,8BAA2B/oF,EAChCtB,EAAK0uF,qBACJ,KAUPpF,EAAA9sF,UAAAgzF,cAAa,SAAC3F,QACP3kF,IAAI+1E,GAAwB4O,IASnCP,EAAA9sF,UAAAkoC,QAAO,SAACh3B,QACDxI,IAAI+1E,GAAkBvtE,IAU7B47E,EAAA9sF,UAAAwwF,UAAS,SAACzwF,QACH2I,IAAI+1E,GAAoB1+E,IAS/B+sF,EAAA9sF,UAAAizF,QAAO,SAAC79D,QACD1sB,IAAI+1E,GAAkBrpD,IAQ7B03D,EAAA9sF,UAAAsyF,WAAU,eACFX,EAAa/xF,KAAQ2qE,mBAEvBr5D,OAAOpM,KACP6sF,EAAa,KACTuB,EAAgBtuD,iBAAiB+sD,GACjCp/E,EACJo/E,EAAcwB,YACdn2B,WAAWk2B,EAA+B,iBAC1Cl2B,WAAWk2B,EAA2B,aACtCl2B,WAAWk2B,EAA4B,cACvCl2B,WAAWk2B,EAAgC,kBACvC1gF,EACJm/E,EAAcnnD,aACdwyB,WAAWk2B,EAA8B,gBACzCl2B,WAAWk2B,EAA0B,YACrCl2B,WAAWk2B,EAA6B,eACxCl2B,WAAWk2B,EAAiC,mBACzClzE,MAAMzN,IAAWyN,MAAMxN,IAErB0vB,GADLhxB,EAAI,CAAIqB,EAAOC,KAGb21B,QAAQC,KAAI,0EAObF,QAAQh3B,QACRshF,uBAOP1F,EAAA9sF,UAAAwyF,oBAAmB,eACXp9D,EAAIx1B,KAAQuxE,aACd/7C,EAAI,KACFlkB,OAAOpM,EACLouF,EAAgBtuD,iBAAgBhlC,KAAM6uF,WACxCyE,EAAc3gF,OAAS2gF,EAAc1gF,SACvCtB,EAAI,CACFk0B,SAAS8tD,EAAc3gF,MAAO,IAC9B6yB,SAAS8tD,EAAc1gF,OAAQ,MAGnC4iB,EAAK8zD,gBAAgBh4E,KAG3B47E,EAl4CA,CAA2B9rE,EAAAla,6jBCY3BssF,GAlHA,SAAA/vF,GAGK,SACHgwF,EAAYzoF,OAAZpH,EACEH,EAAAI,KAAA7D,OAAAA,KAEM4gE,EAAU51D,EAAQ41D,eACpBA,GAAY51D,EAAQ7K,QAAWygE,EAAQ/yD,MAAMypB,gBAC/CspC,EAAQ/yD,MAAMypB,cAAa,QAO7B1zB,EAAKg9D,QAAUA,GAAoB,KAMnCh9D,EAAK8vF,QAAU,KAMf9vF,EAAKizB,KAAO,KAMZjzB,EAAKozD,aAAY,GAEbhsD,EAAQmxB,SACVv4B,EAAKu4B,OAASnxB,EAAQmxB,QAGpBnxB,EAAQ7K,QACVyD,EAAKgtF,UAAU5lF,EAAQ7K,iBAzCPwzF,GAAAF,EAAAhwF,GAgDpBgwF,EAAArzF,UAAAQ,gBAAe,WACbimC,GAAU7mC,KAAM4gE,SAChBn9D,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAQvByzF,EAAArzF,UAAA62B,OAAM,uBACQJ,MAUd48D,EAAArzF,UAAAg3B,OAAM,SAACrL,QACI8K,MACPgQ,GAAU7mC,KAAM4gE,iBAETv/D,EAAI,EAAGuB,EAAE5C,KAAQg3D,aAAa51D,OAAQC,EAAIuB,IAAMvB,EACvD4E,EAAajG,KAAMg3D,aAAa31D,UAE7B21D,aAAa51D,OAAS,OACtBy1B,KAAO9K,OACH8K,SACK72B,KAAQ0zF,QAAO1zF,KAClB0zF,QACL3nE,EAAI+lE,gCACDhtD,YAAW9kC,KAAM4gE,cACfzkC,SAAW95B,GAAIrC,KACjBg3D,aAAa1zD,KAChBmC,EAAOsmB,EAAK6yD,GAAuB5+E,KAAOm8B,OAAMn8B,OAGpD+rB,EAAIoQ,WASRs3D,EAAArzF,UAAA+7B,OAAM,SAACy3D,KAWPH,EAAArzF,UAAAwwF,UAAS,SAACzwF,QACHuzF,QACU,iBAANvzF,EAAsBwN,SAAS0/E,eAAeltF,GAAUA,GAErEszF,EAhHA,CAAsBryE,EAAAla,meCyUtB2sF,GAxUA,SAAApwF,GAGK,SACHqwF,EAAYl9D,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,IAEzChzB,EAAAH,EAAAI,KAAA7D,KAAA,CACE4gE,QAASjzD,SAASC,cAAa,OAC/BuuB,OAAQnxB,EAAQmxB,OAChBh8B,OAAQ6K,EAAQ7K,gBAOb4zF,WAAapmF,SAASC,cAAa,MAMxChK,EAAKowF,gBACmB9uF,IAAtB8F,EAAQipF,WAA0BjpF,EAAQipF,UAM5CrwF,EAAKswF,eAAiBtwF,EAAKowF,WAM3BpwF,EAAKuwF,0BAA+CjvF,IAAxB8F,EAAQopF,YAMpCxwF,EAAKywF,kBACqBnvF,IAAxB8F,EAAQopF,aAA4BppF,EAAQopF,YAEzCxwF,EAAKywF,eACRzwF,EAAKowF,YAAa,OAGdv6D,OACkBv0B,IAAtB8F,EAAQyuB,UAA0BzuB,EAAQyuB,UAAS,iBAE/C66D,OACiBpvF,IAArB8F,EAAQspF,SAAyBtpF,EAAQspF,SAAQ,eAE7CC,OACwBrvF,IAA5B8F,EAAQupF,gBACJvpF,EAAQupF,gBACR96D,EAAS,UAET+6D,OACsBtvF,IAA1B8F,EAAQwpF,cAA8BxpF,EAAQwpF,cAAa,IAEvDC,OAC0BvvF,IAA9B8F,EAAQypF,kBACJzpF,EAAQypF,kBACRh7D,EAAS,YAES,iBAAb+6D,GAKT5wF,EAAK8wF,eAAiB/mF,SAASC,cAAa,QAC5ChK,EAAK8wF,eAAeC,YAAcH,EAClC5wF,EAAK8wF,eAAej7D,UAAYg7D,GAEhC7wF,EAAK8wF,eAAiBF,MAGlB/oD,OAA0BvmC,IAAlB8F,EAAQygC,MAAsBzgC,EAAQygC,MAAK,IAEzC,iBAALA,GAKT7nC,EAAKgxF,OAASjnF,SAASC,cAAa,QACpChK,EAAKgxF,OAAOD,YAAclpD,EAC1B7nC,EAAKgxF,OAAOn7D,UAAY86D,GAExB3wF,EAAKgxF,OAASnpD,MAGVopD,EACJjxF,EAAKywF,eAAiBzwF,EAAKowF,WAAapwF,EAAK8wF,eAAiB9wF,EAAKgxF,OAMrEhxF,EAAKkxF,cAAgBnnF,SAASC,cAAa,UAC3ChK,EAAKkxF,cAAcC,aAAY,OAAO,UACtCnxF,EAAKkxF,cAAcC,aAAY,gBAAkBrtF,QAAQ9D,EAAKowF,aAC9DpwF,EAAKkxF,cAAcE,MAAQV,EAC3B1wF,EAAKkxF,cAAchwD,YAAY+vD,GAE/BjxF,EAAKkxF,cAAc3wF,iBACjBqB,EACA5B,EAAKqxF,aAAarvF,KAAKhC,IACvB,OAGIsxF,EACJz7D,EAAS,IAATA,mBAIAsN,IACCnjC,EAAKowF,YAAcpwF,EAAKywF,aAAY,gBAAwB,KAC5DzwF,EAAKywF,aAAY,GAAA,qBACdzzB,EAAUh9D,EAAKg9D,eACrBA,EAAQnnC,UAAYy7D,EACpBt0B,EAAQ97B,YAAYlhC,EAAKkxF,eACzBl0B,EAAQ97B,YAAYlhC,EAAKmwF,YAOzBnwF,EAAKuxF,sBAAqB,GAM1BvxF,EAAKq3E,kBAAmB,WAzIFma,GAAAtB,EAAArwF,GAkJxBqwF,EAAA1zF,UAAAi1F,2BAA0B,SAACppE,OAItB,IACGqpE,EAAM,GAMNC,EAAmB,GAErBnB,GAAc,EACZj3D,EAAmBlR,EAAWkR,iBAC3B97B,EAAI,EAAGuB,EAAKu6B,EAAiB/7B,OAAQC,EAAIuB,IAAMvB,EAAC,KACjDo6B,EAAa0B,EAAiB97B,MAC/B8yC,GAAA8lC,OAAOx+C,EAAYxP,EAAWyP,gBAI7B54B,EACJ24B,EAAWzB,MACXyC,eACG35B,OAIC0yF,EAAoB1yF,EAAOwgE,qBAC5BkyB,OAICxyB,EAAewyB,EAAkBvpE,MAClC+2C,KAILoxB,EACEA,IAAuD,IAAxCtxF,EAAOygE,6BAEpB1hE,MAAMC,QAAQkhE,WACPzlD,EAAI,EAAG4F,EAAK6/C,EAAa5hE,OAAQmc,EAAI4F,IAAM5F,EAC5CylD,EAAazlD,KAAM+3E,IACvBC,EAAoBjyF,KAAK0/D,EAAazlD,IACtC+3E,EAAOtyB,EAAazlD,KAAM,QAIxBylD,KAAgBsyB,IACpBC,EAAoBjyF,KAAK0/D,GACzBsyB,EAAOtyB,IAAgB,kBAInBmxB,sBAAoBn0F,KACvBy1F,eAAerB,GAEfmB,GAOTzB,EAAA1zF,UAAAs1F,eAAc,SAACzpE,MACRA,OAQC+2C,EAAYhjE,KAAQq1F,2BAA2BppE,GAE/CiN,EAAU8pC,EAAa5hE,OAAS,UAC7B65E,kBAAoB/hD,SACtB0nC,QAAQ/yD,MAAM68B,QAAUxR,EAAO,GAAA,YAC/B+hD,iBAAmB/hD,IAGtBn3B,EAAOihE,EAAYhjE,KAAOm1F,kCzEvLHznF,QACtBA,EAAKioF,WACVjoF,EAAKu3B,YAAYv3B,EAAKioF,WyEyLtBC,CAAc51F,KAAM+zF,oBAGX1yF,EAAI,EAAGuB,EAAKogE,EAAa5hE,OAAQC,EAAIuB,IAAMvB,EAAC,KAC7Cu/D,EAAUjzD,SAASC,cAAa,MACtCgzD,EAAQx2B,UAAY44B,EAAa3hE,QAC5B0yF,WAAWjvD,YAAY87B,QAGzBu0B,sBAAwBnyB,aA5BlBiY,wBACFra,QAAQ/yD,MAAM68B,QAAO,YACrBuwC,kBAAmB,IAiC9B6Y,EAAA1zF,UAAA60F,aAAY,SAACxwF,GACXA,EAAMpE,sBACDw1F,qBACA3B,eAAcl0F,KAAQg0F,YAM7BF,EAAA1zF,UAAAy1F,cAAa,gBACNj1B,QAAQk1B,UAAUC,OAAO/uD,SACrBgtD,WACPztD,GAAWvmC,KAAM00F,eAAc10F,KAAO40F,QAEtCruD,GAAWvmC,KAAM40F,OAAM50F,KAAO00F,qBAE3BV,YAAUh0F,KAASg0F,gBACnBc,cAAcC,aAAY,gBAAkBrtF,QAAM1H,KAAOg0F,cAQhEF,EAAA1zF,UAAA41F,eAAc,uBACA3B,cAQdP,EAAA1zF,UAAAq1F,eAAc,SAACrB,QACJC,eAAiBD,SAGrBC,aAAeD,OACfxzB,QAAQk1B,UAAUC,OAAM,yBACpB7B,gBAAcl0F,KAChB61F,kBAWT/B,EAAA1zF,UAAA61F,aAAY,SAAChC,QACNC,eAAiBD,OACZI,cAAYr0F,KAASg0F,aAAeC,QAGzC4B,iBASP/B,EAAA1zF,UAAA81F,aAAY,uBACElC,YAQdF,EAAA1zF,UAAA+7B,OAAM,SAACy3D,QACA8B,eAAe9B,EAAS3nE,aAEjC6nE,EAtUA,CAA0BqC,GAAAjvF,ghBCuI1BkvF,GApJA,SAAA3yF,GAGK,SACH4yF,EAAYz/D,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,GAEzChzB,EAAAH,EAAAI,KAAA7D,KAAA,CACE4gE,QAASjzD,SAASC,cAAa,OAC/BuuB,OAAQnxB,EAAQmxB,OAChBh8B,OAAQ6K,EAAQ7K,mBAGZs5B,OACkBv0B,IAAtB8F,EAAQyuB,UAA0BzuB,EAAQyuB,UAAS,YAE/CgS,OAA0BvmC,IAAlB8F,EAAQygC,MAAsBzgC,EAAQygC,MAAK,IAEnD6qD,OACyBpxF,IAA7B8F,EAAQsrF,iBACJtrF,EAAQsrF,iBAAgB,aAO9B1yF,EAAKgxF,OAAS,KAEE,iBAALnpD,GACT7nC,EAAKgxF,OAASjnF,SAASC,cAAa,QACpChK,EAAKgxF,OAAOn7D,UAAY68D,EACxB1yF,EAAKgxF,OAAOD,YAAclpD,IAE1B7nC,EAAKgxF,OAASnpD,EACd7nC,EAAKgxF,OAAOkB,UAAU/mD,IAAIunD,QAGtBhC,EAAWtpF,EAAQspF,SAAWtpF,EAAQspF,SAAQ,iBAE9CppB,EAASv9D,SAASC,cAAa,UACrCs9D,EAAOzxC,UAAYA,EAAS,SAC5ByxC,EAAO6pB,aAAY,OAAO,UAC1B7pB,EAAO8pB,MAAQV,EACfppB,EAAOpmC,YAAYlhC,EAAKgxF,QAExB1pB,EAAO/mE,iBACLqB,EACA5B,EAAKqxF,aAAarvF,KAAKhC,IACvB,OAGIsxF,EACJz7D,EAAS,IAATA,mBAA6CsN,GACzC65B,EAAUh9D,EAAKg9D,eACrBA,EAAQnnC,UAAYy7D,EACpBt0B,EAAQ97B,YAAYomC,GAEpBtnE,EAAK2yF,gBAAkBvrF,EAAQwrF,WAAaxrF,EAAQwrF,gBAAatxF,EAMjEtB,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,IAMrEjyB,EAAK8yF,eAAiCxxF,IAArB8F,EAAQ2rF,UAAyB3rF,EAAQ2rF,SAM1D/yF,EAAKk/B,eAAY59B,EAEbtB,EAAK8yF,WACP9yF,EAAKg9D,QAAQk1B,UAAU/mD,IAAIjI,aA/EZ8vD,GAAAP,EAAA5yF,GAuFnB4yF,EAAAj2F,UAAA60F,aAAY,SAACxwF,GACXA,EAAMpE,sBACuB6E,SAApBqxF,gBAA6Bv2F,KAC/Bu2F,uBAEAM,eAOTR,EAAAj2F,UAAAy2F,YAAW,eAEHrhE,EADGx1B,KAAQi3B,SACAs6C,aACZ/7C,OAKCnkB,EAAWmkB,EAAK4N,mBACLl+B,IAAbmM,SACOolF,UAAY,GAAKplF,GAAY,EAAI1H,KAAKC,KAAQ,EACrD4rB,EAAKiB,QAAO,CACVplB,SAAU,EACVwkB,SAAQ71B,KAAOy2F,UACf3gE,OAAQV,KAGVI,EAAK0O,YAAY,MAUvBmyD,EAAAj2F,UAAA+7B,OAAM,SAACy3D,OACC3nE,EAAa2nE,EAAS3nE,cACvBA,OAGC5a,EAAW4a,EAAWyP,UAAUrqB,YAClCA,GAAQrR,KAAS8iC,UAAS,KACtB72B,EAAS,UAAeoF,EAAQ,eAC7BqlF,UAAS,KACV7rB,EAAQ7qE,KAAQ4gE,QAAQk1B,UAAUjrB,SAAS/jC,IAC5C+jC,GAAyB,IAAbx5D,EAENw5D,GAAyB,IAAbx5D,GAAcrR,KAC9B4gE,QAAQk1B,UAAUl2D,OAAOkH,IAHD9mC,KACxB4gE,QAAQk1B,UAAU/mD,IAAIjI,SAK1B8tD,OAAO/mF,MAAM5B,UAAYA,OAE3B62B,UAAYzxB,IAErBglF,EAlJA,CAAqBF,GAAAjvF,ghBC8HrB4vF,GA9HA,SAAArzF,GAGK,SACHszF,EAAYngE,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,GAEzChzB,EAAAH,EAAAI,KAAA7D,KAAA,CACE4gE,QAASjzD,SAASC,cAAa,OAC/BzN,OAAQ6K,EAAQ7K,mBAGZs5B,OACkBv0B,IAAtB8F,EAAQyuB,UAA0BzuB,EAAQyuB,UAAS,UAE/C/V,OAA0Bxe,IAAlB8F,EAAQ0Y,MAAsB1Y,EAAQ0Y,MAAQ,EAEtDszE,OACwB9xF,IAA5B8F,EAAQgsF,gBACJhsF,EAAQgsF,gBACRv9D,EAAS,MAETw9D,OACyB/xF,IAA7B8F,EAAQisF,iBACJjsF,EAAQisF,iBACRx9D,EAAS,OAETy9D,OACoBhyF,IAAxB8F,EAAQksF,YAA4BlsF,EAAQksF,YAAW,IACnDC,OACqBjyF,IAAzB8F,EAAQmsF,aAA6BnsF,EAAQmsF,aAAY,IAErDC,OACuBlyF,IAA3B8F,EAAQosF,eAA+BpsF,EAAQosF,eAAc,UACzDC,OACwBnyF,IAA5B8F,EAAQqsF,gBACJrsF,EAAQqsF,gBAAe,WAGvBC,EAAY3pF,SAASC,cAAa,UACxC0pF,EAAU79D,UAAYu9D,EACtBM,EAAUvC,aAAY,OAAO,UAC7BuC,EAAUtC,MAAQoC,EAClBE,EAAUxyD,YACU,iBAAXoyD,EACHvpF,SAAS4pF,eAAeL,GACxBA,GAGNI,EAAUnzF,iBACRqB,EACA5B,EAAKqxF,aAAarvF,KAAKhC,EAAM8f,IAC7B,OAGI8zE,EAAa7pF,SAASC,cAAa,UACzC4pF,EAAW/9D,UAAYw9D,EACvBO,EAAWzC,aAAY,OAAO,UAC9ByC,EAAWxC,MAAQqC,EACnBG,EAAW1yD,YACU,iBAAZqyD,EACHxpF,SAAS4pF,eAAeJ,GACxBA,GAGNK,EAAWrzF,iBACTqB,EACA5B,EAAKqxF,aAAarvF,KAAKhC,GAAO8f,IAC9B,OAGIwxE,EACJz7D,EAAS,IAATA,mBAA6CsN,GACzC65B,EAAUh9D,EAAKg9D,eACrBA,EAAQnnC,UAAYy7D,EACpBt0B,EAAQ97B,YAAYwyD,GACpB12B,EAAQ97B,YAAY0yD,GAMpB5zF,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,aAlFtD4hE,GAAAV,EAAAtzF,GA0FjBszF,EAAA32F,UAAA60F,aAAY,SAACvxE,EAAOjf,GAClBA,EAAMpE,sBACDq3F,aAAah0E,IAOpBqzE,EAAA32F,UAAAs3F,aAAY,SAACh0E,OAEL8R,EADGx1B,KAAQi3B,SACAs6C,aACZ/7C,OAKCS,EAAcT,EAAKU,kBACLhxB,IAAhB+wB,EAAyB,KACrBE,EAAUX,EAAKY,mBAAmBH,EAAcvS,QAC7C+yE,UAAY,GACfjhE,EAAKe,gBACPf,EAAKgB,mBAEPhB,EAAKiB,QAAO,CACVkF,KAAMxF,EACNN,SAAQ71B,KAAOy2F,UACf3gE,OAAQV,MAGVI,EAAKiyD,QAAQtxD,MAIrB4gE,EA5HA,CAAmBZ,GAAAjvF,ohBC8BnBywF,GA9CA,SAAAl0F,GAGK,SACHm0F,EAAYhhE,OAAZhzB,EACEH,EAAAI,KAAA7D,OAAAA,KAEMgL,EAAU4rB,GAAyB,UAMzChzB,EAAKi0F,OAAS7sF,EAAQ0Y,MAAQ1Y,EAAQ0Y,MAAQ,EAM9C9f,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,aAnB3CiiE,GAAAF,EAAAn0F,GA4B5Bm0F,EAAAx3F,UAAA0E,YAAW,SAACoyB,OACNmB,GAAY,KACZnB,EAAgBn3B,MAAQgtB,GAAoBG,SAAQ,KAChD+kE,EACJ/6D,EAAgB7K,cAEZN,EAAMmL,EAAgBnL,IACtBtO,EAASyZ,EAAgB3qB,WACzBmX,EAAQuuE,EAAaxnB,UAAQzqE,KAAS63F,OAAM73F,KAAQ63F,OACpDriE,EAAOzJ,EAAIwlD,UACjB14C,GAAAk/D,YAAYviE,EAAM9R,EAAOjG,EAAMzd,KAAOy2F,WACtCxE,EAAa5xF,iBACbg4B,GAAY,SAENA,GAEZu/D,EA5CA,CAA8B/+D,GAAA3xB,ghBC2K9B8wF,GA1JA,SAAAv0F,GAGK,SACHw0F,EAAYrhE,OAAZhzB,EACEH,EAAAI,KAAA7D,KAAA,CACE+3B,SAAU31B,UAGN4I,EAAU4rB,GAAyB,GAMzChzB,EAAKs0F,SAAWltF,EAAQmtF,QAKxBv0F,EAAKw0F,aAAe,KAKpBx0F,EAAKy0F,mBAKLz0F,EAAK00F,UAAW,MAEVnpB,EAAYnkE,EAAQmkE,UACtBnkE,EAAQmkE,UACRlF,GAAIkB,GAAgBO,WAMxB9nE,EAAKsrE,WAAalkE,EAAQutF,YACtBtuB,GAAIS,GAAmByE,GACvBA,EAMJvrE,EAAK40F,YAAa,WAhDAC,GAAAR,EAAAx0F,GAuDpBw0F,EAAA73F,UAAAw3B,gBAAe,SAACV,QACJohE,gBACHA,UAAW,OACXrhE,SAASs6C,UAAUmb,wB5H6MRngF,EAAYgU,E4H3MxB2X,EAAcl4B,KAAQk4B,eACtBwgE,EAAWxmB,GAAAwmB,SAAqBxgE,MAClCA,EAAe92B,QAAMpB,KAASq4F,4BACvBH,UAAQl4F,KACVk4F,SAAS91B,OAAOs2B,EAAS,GAAIA,EAAS,SAEpCN,aAAY,KACb10E,EAAK,MACJ00E,aAAa,GAAKM,EAAS,GAChCA,EAAS,GAAC14F,KAASo4F,aAAa,IAG5B5iE,EADM0B,EAAgBnL,IACXwlD,U5H+LHhlE,E4H9LEmX,E5H8LUnD,E4H9LHiV,EAAK+gC,gB5H+LlChqD,EAAW,IAAMgU,EACjBhU,EAAW,IAAMgU,E4H/LX3G,GAAiB8J,EAAO8R,EAAK4N,eAC7B5N,EAAKq2D,qBAAqBnoE,cAEdw0E,eAGTA,SAAS32F,aAEX62F,aAAeM,OACfL,mBAAqBngE,EAAe92B,OACzC81B,EAAgB7K,cAAchsB,kBAQhC43F,EAAA73F,UAAA03B,cAAa,SAACZ,OACNnL,EAAMmL,EAAgBnL,IACtByJ,EAAOzJ,EAAIwlD,aACkB,SAA1Br5C,eAAe92B,OAAY,UACxBo3F,YAAUx4F,KAASk4F,UAAQl4F,KAASk4F,SAAS12F,MAAG,KAClD0X,EAAQlZ,KAAQk4F,SAASS,cACzB5rF,EAAK/M,KAAQk4F,SAAShrD,WACtB/7B,EAASqkB,EAAKG,oBACdijE,EAAW7sE,EAAI6lE,+BAA+BzgF,GAC9CmM,EAAOyO,EAAI+kE,+BAA8B,CAC7C8H,EAAS,GAAK1/E,EAAWvP,KAAKwD,IAAIJ,GAClC6rF,EAAS,GAAK1/E,EAAWvP,KAAKuD,IAAIH,KAEpCyoB,EAAKI,gBAAe,CAClBzkB,OAAQqkB,EAAKO,qBAAqBzY,GAClCuY,SAAU,IACVC,OAAQV,iBAGHkjE,gBACFA,UAAW,EAChB9iE,EAAKm3D,mBAEA,cAEEuL,eAGFA,SAAS32F,aAEX62F,aAAe,MACb,GASXH,EAAA73F,UAAAu3B,gBAAe,SAACT,WACLgB,eAAe92B,OAAS,GAACpB,KAASkvE,WAAWh4C,GAAe,KAE7D1B,EADM0B,EAAgBnL,IACXwlD,sBACZ6mB,aAAe,KAEhB5iE,EAAKe,gBACPf,EAAKgB,wBAEE0hE,UAAQl4F,KACVk4F,SAAS32F,aAIXi3F,WAAUx4F,KAAQk4B,eAAe92B,OAAS,GACxC,SAEA,GAGb62F,EAxJA,CAAsB/lB,GAAAhrE,ghBC0FtB2xF,GA9FA,SAAAp1F,GAGK,SACHq1F,EAAYliE,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,UAEzChzB,EAAAH,EAAAI,KAAA7D,KAAA,CACE+3B,SAAU31B,WAOP8sE,WAAalkE,EAAQmkE,UAAYnkE,EAAQmkE,UAAY9E,GAM1DzmE,EAAKm1F,gBAAa7zF,EAMlBtB,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,aA3BhDmjE,GAAAF,EAAAr1F,GAkCvBq1F,EAAA14F,UAAAw3B,gBAAe,SAACV,MACTq0C,GAAUr0C,QAITnL,EAAMmL,EAAgBnL,IACtByJ,EAAOzJ,EAAIwlD,aACb/7C,EAAK+zD,iBAAiBl4E,WAAaiyE,QAGjChyE,EAAOya,EAAIiY,UACXp0B,EAASsnB,EAAgBtK,MACzBq4D,EAAQt7E,KAAKoP,MAAMzH,EAAK,GAAK,EAAI1B,EAAO,GAAIA,EAAO,GAAK0B,EAAK,GAAK,WAChDpM,SAAf6zF,WAAwB,KACzBr1E,EAAQuhE,EAAKjlF,KAAQ+4F,WAC3BvjE,EAAK22D,wBAAwBzoE,QAE1Bq1E,WAAa9T,KAQpB6T,EAAA14F,UAAA03B,cAAa,SAACZ,UACPq0C,GAAUr0C,KAIHA,EAAgBnL,IACXwlD,UACZob,eAAc3sF,KAAMy2F,YAClB,IAQTqC,EAAA14F,UAAAu3B,gBAAe,SAACT,WACTq0C,GAAUr0C,QAKb+zC,GAAkB/zC,KAAel3B,KAC5BkvE,WAAWh4C,MAEJA,EAAgBnL,IACxBwlD,UAAUmb,wBACTqM,gBAAa7zF,GACX,KAKb4zF,EA5FA,CAAyB5mB,GAAAhrE,oLC5BtB,8dAiIH+xF,GA5HA,SAAAx1F,GAGK,SACHy1F,EAAYz/D,OAAZ71B,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKutC,UAAY,KAMjBvtC,EAAK+2E,SAAWhtE,SAASC,cAAa,OACtChK,EAAK+2E,SAAS9sE,MAAM48B,SAAQ,WAC5B7mC,EAAK+2E,SAAS9sE,MAAMypB,cAAa,OACjC1zB,EAAK+2E,SAASlhD,UAAS,UAAeA,EAMtC71B,EAAKizB,KAAO,KAMZjzB,EAAKu1F,YAAc,KAMnBv1F,EAAKw1F,UAAY,cAtCGC,GAAAH,EAAAz1F,GA4CtBy1F,EAAA94F,UAAAQ,gBAAe,gBACRw2B,OAAO,OAMd8hE,EAAA94F,UAAAk5F,QAAO,eACCC,EAAUv5F,KAAQm5F,YAClBK,EAAQx5F,KAAQo5F,UAChBK,EAAE,KACF5rF,EAAK7N,KAAQ26E,SAAS9sE,MAC5BA,EAAM88B,KAAOhhC,KAAKsG,IAAIspF,EAAW,GAAIC,EAAS,IAAMC,EACpD5rF,EAAM0jF,IAAM5nF,KAAKsG,IAAIspF,EAAW,GAAIC,EAAS,IAAMC,EACnD5rF,EAAM8E,MAAQhJ,KAAK8mB,IAAI+oE,EAAS,GAAKD,EAAW,IAAME,EACtD5rF,EAAM+E,OAASjJ,KAAK8mB,IAAI+oE,EAAS,GAAKD,EAAW,IAAME,GAMzDP,EAAA94F,UAAAg3B,OAAM,SAACrL,WACI8K,KAAI,MACNA,KAAKg7D,sBAAsB5sD,YAAWjlC,KAAM26E,cAC3C9sE,EAAK7N,KAAQ26E,SAAS9sE,MAC5BA,EAAM88B,KAAI,UACV98B,EAAM0jF,IAAG,UACT1jF,EAAM8E,MAAK,UACX9E,EAAM+E,OAAM,eAETikB,KAAO9K,OACH8K,MAAI72B,KACN62B,KAAKg7D,sBAAsB/sD,YAAW9kC,KAAM26E,WAQrDue,EAAA94F,UAAAs5F,UAAS,SAACH,EAAYC,QACfL,YAAcI,OACdH,UAAYI,OACZG,8BACAL,WAMPJ,EAAA94F,UAAAu5F,uBAAsB,eACdJ,EAAUv5F,KAAQm5F,YAClBK,EAAQx5F,KAAQo5F,UAOhBnrF,EANM,CACVsrF,GACCA,EAAW,GAAIC,EAAS,IACzBA,GACCA,EAAS,GAAID,EAAW,KAEAxtE,IAAG/rB,KACvB62B,KAAKi6D,+BAA8B9wF,KACnC62B,MAGP5oB,EAAY,GAAKA,EAAY,GAAGO,aACtB2iC,eAGHA,UAAU7uB,eAAc,CAAErU,IAHdjO,KACZmxC,UAAS,IAAOtc,GAAA3tB,QAAO,CAAE+G,KASlCirF,EAAA94F,UAAAglB,YAAW,uBACG+rB,WAEhB+nD,EA1HA,CAAwB14F,6dC2BlBo5F,GAMI,WANJA,GAaG,UAbHA,GAoBE,SApBFA,GA2BK,YAQXC,GAAA,SAAAp2F,GAKK,SACHq2F,EAAY/5F,EAAMwM,EAAY2qB,OAA9BtzB,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAQV4D,EAAK2I,WAAaA,EAOlB3I,EAAKszB,gBAAkBA,WAtBO6iE,GAAAD,EAAAr2F,GAwBlCq2F,EAxBA,CAAkCj6F,GA6MlCm6F,GA7JA,SAAAv2F,GAGK,SACHw2F,EAAYrjE,OAAZhzB,EACEH,EAAAI,KAAA7D,OAAAA,KAKA4D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,OAECwE,EAAU4rB,GAAyB,UAMzChzB,EAAKs2F,KAAI,IAAOC,GAAAjzF,QAAU8D,EAAQyuB,WAAS,cAM3C71B,EAAKw2F,cAA+Bl1F,IAApB8F,EAAQqvF,QAAwBrvF,EAAQqvF,QAAU,GAE9DrvF,EAAQsvF,WACV12F,EAAK02F,SAAWtvF,EAAQsvF,UAO1B12F,EAAKu1F,YAAc,KAMnBv1F,EAAKsrE,WAAalkE,EAAQmkE,UAAYnkE,EAAQmkE,UAAYlE,GAM1DrnE,EAAK22F,iBAAmBvvF,EAAQwvF,gBAC5BxvF,EAAQwvF,gBACR52F,EAAK62F,gCA1DSV,GAAAE,EAAAx2F,GAsEpBw2F,EAAA75F,UAAAq6F,uBAAsB,SAACvjE,EAAiBqiE,EAAYC,OAC5C7mF,EAAQ6mF,EAAS,GAAKD,EAAW,GACjC3mF,EAAS4mF,EAAS,GAAKD,EAAW,UACjC5mF,EAAQA,EAAQC,EAASA,GAAM5S,KAASo6F,UAQjDH,EAAA75F,UAAAglB,YAAW,uBACG80E,KAAK90E,eAOnB60E,EAAA75F,UAAAw3B,gBAAe,SAACV,QACTgjE,KAAKR,UAAS15F,KAAMm5F,YAAajiE,EAAgBtK,YAEjDpoB,cAAa,IACZq1F,GACFD,GACA1iE,EAAgB3qB,WAChB2qB,KAUN+iE,EAAA75F,UAAA03B,cAAa,SAACZ,QACPgjE,KAAK9iE,OAAO,UAEXsjE,EAAW16F,KAAQu6F,iBACvBrjE,EAAel3B,KACVm5F,YACLjiE,EAAgBtK,cAEd8tE,GAAW16F,KACRs6F,SAASpjE,QAEX1yB,cAAa,IACZq1F,GACFa,EAAcd,GAA0BA,GACxC1iE,EAAgB3qB,WAChB2qB,KAGG,GAQT+iE,EAAA75F,UAAAu3B,gBAAe,SAACT,gBACLg4C,WAAWh4C,UACbiiE,YAAcjiE,EAAgBtK,WAC9BstE,KAAK9iE,OAAOF,EAAgBnL,UAC5BmuE,KAAKR,UAAS15F,KAAMm5F,YAAWn5F,KAAOm5F,kBACtC30F,cAAa,IACZq1F,GACFD,GACA1iE,EAAgB3qB,WAChB2qB,KAGG,IAUX+iE,EAAA75F,UAAAk6F,SAAQ,SAAC71F,KACXw1F,EA3JA,CAAsB/nB,GAAAhrE,meClCtByzF,GApDA,SAAAl3F,GAGK,SACHm3F,EAAYhkE,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,GAEnCu4C,EAAYnkE,EAAQmkE,UAAYnkE,EAAQmkE,UAAY/D,UAE1DxnE,EAAAH,EAAAI,KAAA7D,KAAA,CACEmvE,UAAWA,EACX11C,UAAWzuB,EAAQyuB,WAAS,cAC5B4gE,QAASrvF,EAAQqvF,iBAOd5D,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,IAMrEjyB,EAAKi3F,UAAuB31F,IAAhB8F,EAAQ8vF,KAAoB9vF,EAAQ8vF,aAzB7BC,GAAAH,EAAAn3F,GAgCrBm3F,EAAAx6F,UAAAk6F,SAAQ,SAAC71F,OAED+wB,EADGx1B,KAAQi3B,SAC8Cs6C,UAC3DzsD,EAAQ9kB,KAAQolB,sBAEXy1E,KAAI,KACLzP,EAAgB51D,EAAKu1D,yBAAyBjmE,GAC9C1T,EAAaokB,EAAK00D,+BAA+BkB,GACjD4P,EAASxlE,EAAK+gC,gBAAkBnlD,GACtC0T,EAAWA,EAASzF,SACXkB,MAAMy6E,EAASA,GAG1BxlE,EAAKs1D,YAAYhmE,EAAQ,CACvB+Q,SAAQ71B,KAAOy2F,UACf3gE,OAAQV,MAGdwlE,EAlDA,CAAuBK,GAAA/zF,sDCvBvBg0F,GACQ,GADRA,GAEM,GAFNA,GAGS,GAHTA,GAIQ,6dCgHRC,GA1FA,SAAA13F,GAGK,SACH23F,EAAYxkE,OAAZhzB,EACEH,EAAAI,KAAA7D,OAAAA,KAEMgL,EAAU4rB,GAAW,UAO3BhzB,EAAKy3F,kBAAiB,SAAankE,UAE/Bi0C,GAAej0C,IAAoBm0C,GAAkBn0C,IAQzDtzB,EAAKsrE,gBACmBhqE,IAAtB8F,EAAQmkE,UACJnkE,EAAQmkE,UACRvrE,EAAKy3F,kBAMXz3F,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,IAMrEjyB,EAAK03F,iBACoBp2F,IAAvB8F,EAAQuwF,WAA2BvwF,EAAQuwF,WAAa,aAxCpCC,GAAAJ,EAAA33F,GAmDxB23F,EAAAh7F,UAAA0E,YAAW,SAACoyB,OACNmB,GAAY,KACZnB,EAAgBn3B,MAAQyF,EAAiB,KACrCi2F,EACJvkE,EAAgB7K,cAEZqvE,EAAUD,EAASC,gBAElBxsB,WAAWh4C,KACfwkE,GAAWR,IACVQ,GAAWR,IACXQ,GAAWR,IACXQ,GAAWR,IAAU,KAGjB1lE,EADM0B,EAAgBnL,IACXwlD,UACXoqB,EAAgBnmE,EAAK+gC,gBAAav2D,KAAUs7F,YAC9C19E,EAAS,EACXC,EAAS,EACP69E,GAAWR,GACbr9E,GAAU89E,EACDD,GAAWR,GACpBt9E,GAAU+9E,EACDD,GAAWR,GACpBt9E,EAAS+9E,EAET99E,EAAS89E,MAELj4E,EAAK,CAAI9F,EAAQC,GACvBjE,GAAiB8J,EAAO8R,EAAK4N,eAC7BvK,GAAA+iE,IAAIpmE,EAAM9R,EAAK1jB,KAAOy2F,WACtBgF,EAASp7F,iBACTg4B,GAAY,UAGRA,GAEZ+iE,EAxFA,CAA0BviE,GAAA3xB,ghBC2D1B20F,GA/DA,SAAAp4F,GAGK,SACHq4F,EAAYllE,OAAZhzB,EACEH,EAAAI,KAAA7D,OAAAA,KAEMgL,EAAU4rB,GAAyB,UAMzChzB,EAAKsrE,WAAalkE,EAAQmkE,UAAYnkE,EAAQmkE,UAAY9D,GAM1DznE,EAAKi0F,OAAS7sF,EAAQ0Y,MAAQ1Y,EAAQ0Y,MAAQ,EAM9C9f,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,aAzB9CkmE,GAAAD,EAAAr4F,GAoCzBq4F,EAAA17F,UAAA0E,YAAW,SAACoyB,OACNmB,GAAY,KAEdnB,EAAgBn3B,MAAQyF,GACxB0xB,EAAgBn3B,MAAQyF,EAAkB,KAEpCi2F,EACJvkE,EAAgB7K,cAEZ2vE,EAAWP,EAASO,iBAEnB9sB,WAAWh4C,KACf8kE,GAAQ,IAAQC,WAAW,IAAMD,GAAQ,IAAQC,WAAW,IAAC,KAExDlwE,EAAMmL,EAAgBnL,IACtBrI,EACJs4E,GAAQ,IAAQC,WAAW,GAACj8F,KAAS63F,QAAM73F,KAAS63F,OAChDriE,EAAOzJ,EAAIwlD,UACjB14C,GAAAk/D,YAAYviE,EAAM9R,OAAOxe,EAASlF,KAAOy2F,WACzCgF,EAASp7F,iBACTg4B,GAAY,UAGRA,GAEZyjE,EA7DA,CAA2BjjE,GAAA3xB,SC+F3Bg1F,GAnHA,WAMK,SACHC,EAAYC,EAAOC,EAAaC,GAI3Bt8F,KACEu8F,OAASH,EAKXp8F,KACEw8F,aAAeH,EAKjBr8F,KACEy8F,OAASH,EAKXt8F,KACEosC,QAAO,GAKTpsC,KACEysC,OAAS,EAKXzsC,KACE08F,iBAAmB,SAM1BP,EAAA/7F,UAAAmB,MAAK,gBACE6qC,QAAQhrC,OAAS,OACjBqrC,OAAS,OACTiwD,iBAAmB,GAO1BP,EAAA/7F,UAAAgiE,OAAM,SAAC51D,EAAGC,QACH2/B,QAAQ9oC,KAAKkJ,EAAGC,EAAGijE,KAAKC,QAM/BwsB,EAAA/7F,UAAAoB,IAAG,mBACQ4qC,QAAQhrC,OAAS,SAGjB,MAEHk7F,EAAQ5sB,KAAKC,MAAG3vE,KAAUy8F,OAC1BE,EAAS38F,KAAQosC,QAAQhrC,OAAS,UAC/BgrC,QAAQuwD,EAAY,GAAKL,SAGzB,UAILM,EAAaD,EAAY,EACtBC,EAAa,GAAC58F,KAASosC,QAAQwwD,EAAa,GAAKN,GACtDM,GAAc,MAGV/mE,EAAQ71B,KAAQosC,QAAQuwD,EAAY,GAAC38F,KAASosC,QAAQwwD,EAAa,MAIrE/mE,EAAW,IAAO,GAAE,OACf,MAGHnnB,EAAE1O,KAAQosC,QAAQuwD,GAAS38F,KAASosC,QAAQwwD,GAC5CjuF,EAAE3O,KAAQosC,QAAQuwD,EAAY,GAAC38F,KAASosC,QAAQwwD,EAAa,eAC9DnwD,OAAS9iC,KAAKoP,MAAMpK,EAAID,QACxBguF,iBAAmB/yF,KAAKqP,KAAKtK,EAAKA,EAAKC,EAAKA,GAAMknB,OAC3C6mE,iBAAgB18F,KAAQw8F,cAMtCL,EAAA/7F,UAAAu4F,YAAW,uBACI6D,aAAYx8F,KAAQ08F,kBAAgB18F,KAASu8F,QAM5DJ,EAAA/7F,UAAA8sC,SAAQ,uBACMT,QAEhB0vD,EAjHA,0iBCEaU,GAAI,CACfC,SAAQ,WACRC,MAAK,SA0RPC,GA/PA,SAAAv5F,GAGK,SACHw5F,EAAYrmE,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,IAEzChzB,EAAAH,EAAAI,KAAA7D,KACgEgL,IAAOhL,MAOlEk9F,YAAc,EAMnBt5F,EAAKu5F,WAAa,EAMlBv5F,EAAKsnB,eAAiChmB,IAArB8F,EAAQqb,SAAyBrb,EAAQqb,SAAW,EAMrEziB,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,IAMrEjyB,EAAKw5F,cAA+Bl4F,IAApB8F,EAAQqyF,QAAwBryF,EAAQqyF,QAAU,GAMlEz5F,EAAK05F,gBACmBp4F,IAAtB8F,EAAQuyF,WAA0BvyF,EAAQuyF,UAM5C35F,EAAK45F,0BAC6Bt4F,IAAhC8F,EAAQm5E,qBACJn5E,EAAQm5E,wBAGRhV,EAAYnkE,EAAQmkE,UAAYnkE,EAAQmkE,UAAYnE,UAM1DpnE,EAAKsrE,WAAalkE,EAAQutF,YACtBtuB,GAAIS,GAAmByE,GACvBA,EAMJvrE,EAAK65F,YAAc,KAMnB75F,EAAK85F,gBAAax4F,EAMlBtB,EAAK+5F,WAML/5F,EAAK0pE,WAAQpoE,EAObtB,EAAKg6F,kBAAoB,IAKzBh6F,EAAKi6F,mBAOLj6F,EAAKk6F,cAAgB,aA5GIC,GAAAd,EAAAx5F,GAkH3Bw5F,EAAA78F,UAAA49F,gBAAe,gBACRH,wBAAqB34F,EAChBlF,KAAQi3B,SAASs6C,UACtBob,oBACHznF,EAASlF,KACJm9F,WAAUn9F,KAASm9F,WAAa,EAAI,GAAI,EAAM,EAACn9F,KAC/Cy9F,cAUTR,EAAA78F,UAAA0E,YAAW,SAACoyB,YACAg4C,WAAWh4C,GAAe,OAC3B,KAEIA,EAAgBn3B,OAChByF,EAAe,OACnB,MAeLke,EAZEqI,EAAMmL,EAAgBnL,IACtBkyE,EACJ/mE,EAAgB7K,iBAElB4xE,EAAW59F,sBAEFi9F,aAAUt9F,KACZy9F,YAAcvmE,EAAgB3qB,YAMjC2qB,EAAgBn3B,MAAQyF,IAC1Bke,EAAQu6E,EAAWpgF,OACf3T,IAAW+zF,EAAWC,YAAcC,WAAWC,kBACjD16E,GAASrZ,IAEP4zF,EAAWC,YAAcC,WAAWE,iBACtC36E,GAAS,KAIC,IAAVA,EAAW,OACN,OAEFy5E,WAAaz5E,MAGdisD,EAAMD,KAAKC,WAEOzqE,SAAfw4F,aAAwB19F,KAC1B09F,WAAa/tB,UAGVrC,OAASqC,EAAG3vE,KAAQ09F,WAAU19F,KAAQ49F,qBAAiB59F,KAC1DstE,MAAQ3jE,KAAK8mB,IAAI/M,GAAS,EAAIm5E,GAAKC,SAAWD,GAAKE,WAGpDvnE,EAAOzJ,EAAIwlD,kBAEVjE,QAAUuvB,GAAKC,WAClBtnE,EAAKg0D,2BAAsBxpF,KAAWw9F,iCAE/BK,mBACPjuB,aAAY5vE,KAAM69F,qBAEdroE,EAAKe,gBACPf,EAAKgB,mBAEPhB,EAAKk3D,yBAEFmR,mBAAqB7tB,WAAUhwE,KAC7Bg+F,gBAAgBp4F,KAAI5F,MAAAA,KACpBo9F,UAEP5nE,EAAKy2D,YAAYvoE,EAAK1jB,KAAQ89F,cAAa99F,KAAOy9F,kBAC7CC,WAAa/tB,GACX,OAGJutB,aAAex5E,MAEd46E,EAAW30F,KAAKuG,IAAGlQ,KAAMo9F,UAAYztB,EAAG3vE,KAAQ09F,YAAa,UAEnE9tB,aAAY5vE,KAAM29F,iBACbA,WAAa3tB,WAAUhwE,KACrBu+F,iBAAiB34F,KAAI5F,KAAO+rB,GACjCuyE,IAGK,GAOTrB,EAAA78F,UAAAm+F,iBAAgB,SAACxyE,OACTyJ,EAAOzJ,EAAIwlD,UACb/7C,EAAKe,gBACPf,EAAKgB,uBAEH9S,GACDtO,GAAKpV,KACCk9F,aAAWl9F,KACVkrB,UAASlrB,KAAQ89F,cAAa99F,KAC/BkrB,UAASlrB,KAAQ89F,eAAa99F,KAC5B89F,eACPtoE,EAAKg0D,0BAAsBxpF,KAAWw9F,wBAExC95E,EAAQA,EAASA,EAAQ,EAAI,GAAI,EAAM,GAEzCmV,GAAAk/D,YAAYviE,EAAM9R,EAAK1jB,KAAOy9F,YAAWz9F,KAAOy2F,gBAE3CnpB,WAAQpoE,OACRg4F,YAAc,OACdO,YAAc,UACdC,gBAAax4F,OACby4F,gBAAaz4F,GASpB+3F,EAAA78F,UAAAo+F,eAAc,SAACjB,QACRD,WAAaC,EACbA,IAASv9F,KACPy9F,YAAc,OAGzBR,EA7PA,CAA6BpkE,GAAA3xB,ghBCyH7Bu3F,GA5IA,SAAAh7F,GAGK,SACHi7F,EAAY9nE,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,GAEnC81C,EACJ1hE,SAGG0hE,EAAe30C,WAClB20C,EAAe30C,SAAW31B,IAG5BwB,EAAAH,EAAAI,KAAA7D,KAAM0sE,IAAc1sE,MAMf4sC,QAAU,KAMfhpC,EAAKm1F,gBAAa7zF,EAMlBtB,EAAK+6F,WAAY,EAMjB/6F,EAAKg7F,eAAiB,EAMtBh7F,EAAKi7F,gBAAmC35F,IAAtB8F,EAAQ8zF,UAA0B9zF,EAAQ8zF,UAAY,GAMxEl7F,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,aAnD/CkpE,GAAAL,EAAAj7F,GA0DxBi7F,EAAAt+F,UAAAw3B,gBAAe,SAACV,OACV8nE,EAAgB,EAEdC,EAAMj/F,KAAQk4B,eAAe,GAC7BgnE,EAAMl/F,KAAQk4B,eAAe,GAG7BnrB,EAAQpD,KAAKoP,MACjBmmF,EAAO1nE,QAAUynE,EAAOznE,QACxB0nE,EAAO3nE,QAAU0nE,EAAO1nE,iBAGFryB,SAAf6zF,WAAwB,KACzBr1E,EAAQ3W,EAAK/M,KAAQ+4F,gBACtB6F,gBAAkBl7E,QACbi7E,WAAah1F,KAAK8mB,IAAGzwB,KAAM4+F,gBAAc5+F,KAAS6+F,aAAU7+F,KAC/D2+F,WAAY,GAEnBK,EAAgBt7E,OAEbq1E,WAAahsF,MAEZgf,EAAMmL,EAAgBnL,IACtByJ,EAAOzJ,EAAIwlD,aACb/7C,EAAK+zD,iBAAiBl4E,WAAaiyE,QAOjC6N,EAAmBplE,EAAI8uD,cAAcuW,wBACrCsH,EAAWxmB,GAAAwmB,SAAoB14F,KAAMk4B,gBAC3CwgE,EAAS,IAAMvH,EAAiBxmD,KAChC+tD,EAAS,IAAMvH,EAAiBI,SAC3B3kD,QAAU7gB,EAAI+kE,+BAA+B4H,QAGzCiG,YACP5yE,EAAIoQ,SACJ3G,EAAK22D,uBAAuB6S,EAAah/F,KAAO4sC,YASpD8xD,EAAAt+F,UAAA03B,cAAa,SAACZ,gBACHgB,eAAe92B,OAAS,KACnB81B,EAAgBnL,IACXwlD,UACZob,eAAc3sF,KAAMy2F,YAClB,IAWXiI,EAAAt+F,UAAAu3B,gBAAe,SAACT,WACLgB,eAAe92B,QAAU,EAAC,KAC3B2qB,EAAMmL,EAAgBnL,gBACvB6gB,QAAU,UACVmsD,gBAAa7zF,OACby5F,WAAY,OACZC,eAAiB,OACZ5mE,wBACRjM,EAAIwlD,UAAUmb,oBAET,SAEA,GAGbgS,EA1IA,CAA0BxsB,GAAAhrE,ghBCoH1Bi4F,GAvHA,SAAA17F,GAGK,SACH27F,EAAYxoE,OAAZhzB,EAAA5D,KACQgL,EAAU4rB,GAAyB,GAEnC81C,EACJ1hE,SAGG0hE,EAAe30C,WAClB20C,EAAe30C,SAAW31B,IAG5BwB,EAAAH,EAAAI,KAAA7D,KAAM0sE,IAAc1sE,MAMf4sC,QAAU,KAMfhpC,EAAK6yF,eAAiCvxF,IAArB8F,EAAQ6qB,SAAyB7qB,EAAQ6qB,SAAW,IAMrEjyB,EAAKy7F,mBAAgBn6F,EAMrBtB,EAAK07F,gBAAkB,WAvCHC,GAAAH,EAAA37F,GA8CtB27F,EAAAh/F,UAAAw3B,gBAAe,SAACV,OACVsoE,EAAa,EAEXP,EAAMj/F,KAAQk4B,eAAe,GAC7BgnE,EAAMl/F,KAAQk4B,eAAe,GAC7BxpB,EAAKuwF,EAAO1nE,QAAU2nE,EAAO3nE,QAC7B5oB,EAAKswF,EAAOznE,QAAU0nE,EAAO1nE,QAG7Bte,EAAWvP,KAAKqP,KAAKtK,EAAKA,EAAKC,EAAKA,QAEfzJ,SAAlBm6F,gBACPG,EAAUx/F,KAAQq/F,cAAgBnmF,QAE/BmmF,cAAgBnmF,MAEf6S,EAAMmL,EAAgBnL,IACtByJ,EAAOzJ,EAAIwlD,UAEC,GAAdiuB,IAAiBx/F,KACds/F,gBAAkBE,OAInBrO,EAAmBplE,EAAI8uD,cAAcuW,wBACrCsH,EAAWxmB,GAAAwmB,SAAoB14F,KAAMk4B,gBAC3CwgE,EAAS,IAAMvH,EAAiBxmD,KAChC+tD,EAAS,IAAMvH,EAAiBI,SAC3B3kD,QAAU7gB,EAAI+kE,+BAA+B4H,GAGlD3sE,EAAIoQ,SACJ3G,EAAKu2D,yBAAyByT,EAAUx/F,KAAO4sC,UAQjDwyD,EAAAh/F,UAAA03B,cAAa,SAACZ,WACHgB,eAAe92B,OAAS,EAAC,KAE1Bo0B,EADM0B,EAAgBnL,IACXwlD,UACXrwE,EAASlB,KAAQs/F,gBAAkB,EAAI,GAAI,SACjD9pE,EAAKm3D,eAAc3sF,KAAMy2F,UAAWv1F,IAC7B,SAEA,GASXk+F,EAAAh/F,UAAAu3B,gBAAe,SAACT,WACLgB,eAAe92B,QAAU,EAAC,KAC3B2qB,EAAMmL,EAAgBnL,gBACvB6gB,QAAU,UACVyyD,mBAAgBn6F,OAChBo6F,gBAAkB,OACbtnE,wBACRjM,EAAIwlD,UAAUmb,oBAET,SAEA,GAGb0S,EArHA,CAAwBltB,GAAAhrE,ueC4DxBu4F,GAvBA,SAAAh8F,GAGK,SACHi8F,EAAY10F,UACVA,EAAU1I,EAAM,GAAK0I,IACRsiF,WACXtiF,EAAQsiF,kBCdW12D,OACjB5rB,EAAU4rB,GAAyB,GAEnC02D,EAAQ,IAAOpmB,GAAAhgE,oBAEgBhC,IAAjB8F,EAAQ2wB,MAAqB3wB,EAAQ2wB,OAEvD2xD,EAAShqF,KAAI,IAAKq8F,GAAAz4F,QAAK8D,EAAQ40F,oBAGQ16F,IAAnB8F,EAAQsV,QAAuBtV,EAAQsV,SAE3DgtE,EAAShqF,KAAI,IAAKu8F,GAAA34F,QAAO8D,EAAQ80F,sBAIT56F,IAAxB8F,EAAQ+0F,aAA4B/0F,EAAQ+0F,cAE5CzS,EAAShqF,KAAI,IAAK08F,GAAA94F,QAAY8D,EAAQi1F,qBAGjC3S,EDPgB4S,IAEhBl1F,EAAQuiF,eACXviF,EAAQuiF,sBEiBW32D,OACjB5rB,EAAU4rB,GAAyB,GAEnC22D,EAAY,IAAOrmB,GAAAhgE,QAEnBixF,EAAO,IAAO+D,IAAQ,KAAQ,IAAM,iBAGTh3F,IAA/B8F,EAAQm1F,oBACJn1F,EAAQm1F,qBAGZ5S,EAAajqF,KAAI,IAAK88F,GAAAl5F,eAIMhC,IAA5B8F,EAAQq1F,iBAAgCr1F,EAAQq1F,kBAEhD9S,EAAajqF,KAAI,IACXg9F,GAAAp5F,QAAe,CACjBwc,MAAO1Y,EAAQu1F,UACf1qE,SAAU7qB,EAAQw1F,sBAKYt7F,IAApB8F,EAAQy1F,SAAwBz1F,EAAQy1F,UAEtDlT,EAAajqF,KAAI,IACXo9F,GAAAx5F,QAAO,CACTqxF,YAAavtF,EAAQutF,YACrBJ,QAASA,WAMWjzF,IAAxB8F,EAAQ21F,aAA4B31F,EAAQ21F,cAE5CpT,EAAajqF,KAAI,IAAKs9F,GAAA15F,eAGgBhC,IAAtB8F,EAAQ61F,WAA0B71F,EAAQ61F,YAE1DtT,EAAajqF,KAAI,IACXw9F,GAAA55F,QAAS,CACX2uB,SAAU7qB,EAAQw1F,sBAKct7F,IAArB8F,EAAQ+1F,UAAyB/1F,EAAQ+1F,YAExDxT,EAAajqF,KAAI,IAAK09F,GAAA95F,SACtBqmF,EAAajqF,KAAI,IACX29F,GAAA/5F,QAAY,CACdwc,MAAO1Y,EAAQu1F,UACf1qE,SAAU7qB,EAAQw1F,uBAMKt7F,IAA3B8F,EAAQk2F,gBAA+Bl2F,EAAQk2F,iBAE/C3T,EAAajqF,KAAI,IACX69F,GAAAj6F,QAAc,CAChBqxF,YAAavtF,EAAQutF,YACrB1iE,SAAU7qB,EAAQw1F,sBAMIt7F,IAA1B8F,EAAQo2F,eAA8Bp2F,EAAQo2F,gBAE9C7T,EAAajqF,KAAI,IACX+9F,GAAAn6F,QAAQ,CACV2uB,SAAU7qB,EAAQw1F,gBAKjBjT,EFpGoB+T,CAAmB,CACxC/I,aAAa,KAIjB90F,EAAAI,KAAA7D,KAAMgL,IAAOhL,YAfCuhG,GAAA7B,EAAAj8F,GAkBhBi8F,EAAAt/F,UAAAk9B,eAAc,sBACDkkE,GAAAt6F,QAAoBlH,OAEnC0/F,EArBA,CAAkB+B,GAAAv6F,2uBGyPlBw6F,GAvOA,SAAAj+F,GAKK,SACHk+F,EAAY99C,EAAW9pB,EAAOnD,OAA9BhzB,EACEH,EAAAI,KAAA7D,OAAAA,KAEMgL,EAAU4rB,GAAyB,UAKzChzB,EAAKigD,UAAYA,EAMjBjgD,EAAKm2B,MAAQA,EAQbn2B,EAAKg+F,YAAc,KAQnBh+F,EAAKb,IAAG,GAMRa,EAAKi+F,iBACoB38F,IAAvB8F,EAAQksE,WAA2B,IAAMlsE,EAAQksE,WAOnDtzE,EAAKk+F,kBAAiB,YAlDPC,GAAAJ,EAAAl+F,GAwDjBk+F,EAAAvhG,UAAAwG,QAAO,gBACApC,cAAcgB,IAMrBm8F,EAAAvhG,UAAA4hG,QAAO,aAKPL,EAAAvhG,UAAA+3E,OAAM,uBACQp1E,IAAG,IAAM/C,KAAQ6jD,WAS/B89C,EAAAvhG,UAAAg0E,eAAc,oBACFwtB,4BAINh+C,EAAI5jD,KAAQ4hG,kBAOVh+C,EAAKlnB,YAAcy2C,eAGhB0uB,YAAc,EACZj+C,EAETA,EAAOA,EAAKg+C,kBACLh+C,gBAUX+9C,EAAAvhG,UAAA6hG,oBAAmB,mBACPL,iBAINh+C,EAAI5jD,KAAQ4hG,YACZlgC,EAAI1hE,WAGF4jD,EAAKlnB,YAAcy2C,GAAgB,CAIrCvvB,EAAKg+C,YAAc,WAEVh+C,EAAKlnB,YAAcy2C,GAG5BzR,EAAO9d,EACEA,EAAKlnB,YAAcy2C,GAG5BzR,EAAKkgC,YAAch+C,EAAKg+C,YAExBlgC,EAAO9d,EAETA,EAAO8d,EAAKkgC,kBACLh+C,KAQX+9C,EAAAvhG,UAAA8hG,aAAY,uBACEr+C,WAMd89C,EAAAvhG,UAAAs8B,SAAQ,uBACM3C,OAWd4nE,EAAAvhG,UAAAyjE,SAAQ,SAAC9pC,WACEA,QAAUo5C,IAAenzE,KAAS+5B,MAAQA,EAAK,MAAA,IAC5C1yB,MAAK,qCAEZ0yB,MAAQA,OACRnzB,WAUP+6F,EAAAvhG,UAAAk/B,KAAI,WACFl4B,MASFu6F,EAAAvhG,UAAAi1E,SAAQ,SAACzvD,EAAI0vD,YACDusB,YAAW,OACZ,MAGL53E,EAAKjqB,KAAQ8hG,kBAAkBl8E,MAC9BqE,OAGgB,IAAVA,EAAY,OACd,OAHPA,EAAQqrD,OACHwsB,kBAAkBl8E,GAAMqE,MAKzBvG,EAAQ4xD,EAAOrrD,EAAQ,IAAO,UAChCvG,GAAK1jB,KAAS6hG,YACT,EAEF3sE,GAAOxR,EAAK1jB,KAAQ6hG,cAU7BF,EAAAvhG,UAAAg1E,aAAY,SAACxvD,gBACDi8E,cAG4B,SAA1BC,kBAAkBl8E,IAOhC+7E,EAAAvhG,UAAAw3E,cAAa,SAAChyD,QACHi8E,cAAW7hG,KACb8hG,kBAAkBl8E,IAAM,IAGnC+7E,EArOA,CAAmB16F,EAAAC,ueCuFnBi7F,GAzJA,SAAA1+F,GAQK,SACH2+F,EACEv+C,EACA9pB,EACAg8B,EACAC,EACAqsC,EACAzrE,OANFhzB,EAQEH,EAAAI,KAAA7D,KAAM6jD,EAAW9pB,EAAOnD,IAAW52B,YAMnC4D,EAAK01D,aAAetD,EAQpBpyD,EAAKuzD,KAAOpB,EAEZnyD,EAAKb,IAAMgzD,EAMXnyD,EAAK0tC,OAAM,IAAO1mC,MACE,OAAhBorD,IACFpyD,EAAK0tC,OAAO0kB,YAAcA,GAO5BpyD,EAAKwzD,UAAY,KAMjBxzD,EAAK0+F,kBAAoBD,WAtDLE,GAAAH,EAAA3+F,GA8DtB2+F,EAAAhiG,UAAAqjC,SAAQ,uBACM6N,QAOd8wD,EAAAhiG,UAAA0xC,SAAQ,SAAC8uB,QACFtvB,OAASsvB,OACT7mC,MAAQo5C,QACR3b,sBACA5wD,WAQPw7F,EAAAhiG,UAAAm3D,kBAAiB,WA+DhB,IAEKiB,OAhECz+B,MAAQo5C,QACR3b,sBACAlmB,SA8DDknB,EAAMzyB,GAAsB,EAAG,IACjCmJ,UAAS,gBACbspB,EAAIJ,SAAS,EAAG,EAAG,EAAG,GACfI,EAAIpyB,aAhEJx/B,WAQPw7F,EAAAhiG,UAAAq3D,iBAAgB,eACRpqB,EAAKrtC,KAAyCsxC,OAChDjE,EAAMm1D,cAAgBn1D,EAAMo1D,cAAaziG,KACtC+5B,MAAQo5C,QAERp5C,MAAQo5C,QAEV3b,sBACA5wD,WAOPw7F,EAAAhiG,UAAAk/B,KAAI,gBACOvF,OAASo5C,UACXp5C,MAAQo5C,QACR7hC,OAAM,IAAO1mC,MACQ,YAAjB0uD,eAAqBt5D,KACvBsxC,OAAO0kB,YAAWh2D,KAAQs5D,oBAG1Bv/B,OAASo5C,UACXp5C,MAAQo5C,QACRvsE,eACA07F,kBAAiBtiG,KAAAA,KAAYm3D,WAC7BC,UAAYkB,GAAAC,YAAWv4D,KACrBsxC,OAAMtxC,KACNy3D,iBAAiB7xD,KAAI5F,MAAAA,KACrBu3D,kBAAkB3xD,KAAI5F,SAUjCoiG,EAAAhiG,UAAAo3D,eAAc,gBACHJ,iBACFA,iBACAA,UAAY,OAGvBgrC,EA5IA,CAAwBM,GAAAx7F,sDCWpBy7F,GCueJC,GAzcA,WAQK,SACHC,EACE9hF,EACA+hF,EACAC,EACAC,EACAC,EACAC,GAKGljG,KACEmjG,YAAcpiF,EAKhB/gB,KACEojG,YAAcN,EAEkD,IACjEO,EAAiB,GACfC,EAAe/mF,GAAYvc,KAAMojG,YAAWpjG,KAAOmjG,aAMtDnjG,KACEujG,cAAa,SAAar3F,OACvBnJ,EAAMmJ,EAAE,GAAC,IAAUA,EAAE,UACtBm3F,EAAkBtgG,KACrBsgG,EAAkBtgG,GAAOugG,EAAap3F,IAEjCm3F,EAAkBtgG,IAMxB/C,KACEwjG,iBAAmBR,EAKrBhjG,KACEyjG,uBAAyBR,EAAiBA,EAK5CjjG,KACE0jG,WAAU,GAMZ1jG,KACE2jG,iBAAkB,EAKpB3jG,KACE4jG,kBAAiB5jG,KACfmjG,YAAYhvF,cACf6uF,KAAehjG,KACVmjG,YAAY9uF,aACnBxD,GAASmyF,IAAoBnyF,GAAQ7Q,KAAMmjG,YAAY9uF,aAKtDrU,KACE6jG,kBAAiB7jG,KAAQmjG,YAAY9uF,YACtCxD,GAAQ7Q,KAAMmjG,YAAY9uF,aAC1B,KAKDrU,KACE8jG,kBAAiB9jG,KAAQojG,YAAY/uF,YACtCxD,GAAQ7Q,KAAMojG,YAAY/uF,aAC1B,SAEE0vF,EAAqBtzF,GAAWsyF,GAChCiB,EAAsBxzF,GAAYuyF,GAClCkB,EAAyB1zF,GAAewyF,GACxCmB,EAAwB5zF,GAAcyyF,GACtCoB,EAAankG,KAAQujG,cAAcQ,GACnCK,EAAcpkG,KAAQujG,cAAcS,GACpCK,EAAiBrkG,KAAQujG,cAAcU,GACvCK,EAAgBtkG,KAAQujG,cAAcW,GAYtCK,EArIc,IAuIjBrB,EACGv5F,KAAKuG,IACH,EACAvG,KAAK40B,KACH/oB,GACE9E,GAAQqyF,IACLG,EACCA,EADD,UAOT,WAEDsB,SACHT,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QAGOZ,gBAAe,KAClBc,EAAYl1F,EAAAA,OACXm0F,WAAW/nF,SAAO,SAAW+oF,EAAUrjG,EAAGJ,GAC7CwjG,EAAY96F,KAAKsG,IACfw0F,EACAC,EAAS5hG,OAAO,GAAG,GACnB4hG,EAAS5hG,OAAO,GAAG,GACnB4hG,EAAS5hG,OAAO,GAAG,YAMlB4gG,WAAW/nF,QAAO,SACX+oF,MAEN/6F,KAAKuG,IACHw0F,EAAS5hG,OAAO,GAAG,GACnB4hG,EAAS5hG,OAAO,GAAG,GACnB4hG,EAAS5hG,OAAO,GAAG,IAEnB2hG,EAASzkG,KACN6jG,kBAAoB,EAAC,KAEpBc,EAAW,EACdD,EAAS5hG,OAAO,GAAG,GAAI4hG,EAAS5hG,OAAO,GAAG,KAC1C4hG,EAAS5hG,OAAO,GAAG,GAAI4hG,EAAS5hG,OAAO,GAAG,KAC1C4hG,EAAS5hG,OAAO,GAAG,GAAI4hG,EAAS5hG,OAAO,GAAG,KAEzC6hG,EAAY,GAAG,GAAKF,EAASzkG,KAAQ6jG,kBAAoB,IAC3Dc,EAAY,GAAG,IAAC3kG,KAAU6jG,mBAExBc,EAAY,GAAG,GAAKF,EAASzkG,KAAQ6jG,kBAAoB,IAC3Dc,EAAY,GAAG,IAAC3kG,KAAU6jG,mBAExBc,EAAY,GAAG,GAAKF,EAASzkG,KAAQ6jG,kBAAoB,IAC3Dc,EAAY,GAAG,IAAC3kG,KAAU6jG,uBAMtB30F,EAAOvF,KAAKsG,IAChB00F,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJh7F,KAAKuG,IAChBy0F,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAENz1F,EAAIlP,KAAQ6jG,kBAAoB,IACzCa,EAAS5hG,OAAS6hG,KAGtB/+F,KAAI5F,OAIVqjG,EAAiB,UAanBR,EAAAziG,UAAAwkG,aAAY,SAAC9jG,EAAGC,EAAGmL,EAAG24F,EAAMC,EAAMC,QAC3BrB,WAAWpgG,KAAI,CAClBR,OAAM,CAAG+hG,EAAMC,EAAMC,GACrB5kG,OAAM,CAAGW,EAAGC,EAAGmL,MAoBnB22F,EAAAziG,UAAAokG,SAAQ,SAAC1jG,EAAGC,EAAGmL,EAAGC,EAAG04F,EAAMC,EAAMC,EAAMC,EAAMT,OACrCU,EAAmBj3F,GAAc,CAAE62F,EAAMC,EAAMC,EAAMC,IACrDE,EAAellG,KAAQ6jG,kBACzBhzF,GAASo0F,GAAgBjlG,KAAS6jG,kBAClC,KACEsB,EAAgBnlG,KAA+B6jG,kBAI/CuB,EAAMplG,KACLmjG,YAAYhvF,YACjB+wF,EAAkB,IAClBA,EAAkB,EAEhBG,GAAmB,KAEnBd,EAAiB,EAAC,SACXnB,YAAY1uF,YAAQ1U,KAAW8jG,kBAItCuB,EADEx0F,GAFuB7C,GAAc,CAAElN,EAAGC,EAAGmL,EAAGC,KAEvBnM,KAAS8jG,kBA5QjB,KA8QuBuB,GAEvCD,GAAMplG,KAASmjG,YAAYzuF,YAAcwwF,IAC5CG,EACEH,EAlRiB,KAkRuBG,SAIzCA,GAAgBrlG,KAASwjG,kBAE1B8B,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,MAErB1yF,GAAW0yF,EAAgBjlG,KAAOwjG,uBAOvC+B,EAAc,OAEbF,GAEAC,SAAST,EAAK,KACdS,SAAST,EAAK,KACdS,SAASR,EAAK,KACdQ,SAASR,EAAK,KACdQ,SAASP,EAAK,KACdO,SAASP,EAAK,KACdO,SAASN,EAAK,KACdM,SAASN,EAAK,QAEXT,EAAiB,EACnBc,GAAmB,UAUF,IANjBE,GACID,SAAST,EAAK,KAAQS,SAAST,EAAK,IAAU,EAAJ,IAC1CS,SAASR,EAAK,KAAQQ,SAASR,EAAK,IAAU,EAAJ,IAC1CQ,SAASP,EAAK,KAAQO,SAASP,EAAK,IAAU,EAAJ,IAC1CO,SAASN,EAAK,KAAQM,SAASN,EAAK,IAAU,EAAJ,KAG7B,GAAfO,GACe,GAAfA,GACe,GAAfA,EAAgB,UAQpBhB,EAAiB,EAAC,KACfc,EAAgB,KACbl0F,EAAM,EAAKrQ,EAAE,GAAKoL,EAAE,IAAM,GAAIpL,EAAE,GAAKoL,EAAE,IAAM,GAC7Cs5F,EAASxlG,KAAQujG,cAAcpyF,GAEjCzC,OAAE,KACF02F,EAKF12F,GAHGyH,GAAO0uF,EAAK,GAAIM,GACfhvF,GAAO4uF,EAAK,GAAII,IAClB,EACqBhvF,GAAOqvF,EAAU,GAAIL,QAE5Cz2F,GAAMm2F,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,OAErC72F,GAAMk2F,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE/CH,EAD8B32F,EAAKA,EAAKC,EAAKA,EACL3O,KAAQyjG,0BAE9C4B,EAAgB,IACd17F,KAAK8mB,IAAI3vB,EAAE,GAAKoL,EAAE,KAAOvC,KAAK8mB,IAAI3vB,EAAE,GAAKoL,EAAE,IAAC,KAExCu5F,EAAE,EAAK1kG,EAAE,GAAKmL,EAAE,IAAM,GAAInL,EAAE,GAAKmL,EAAE,IAAM,GACzCw5F,EAAK1lG,KAAQujG,cAAckC,GAC3BE,EAAE,EAAKx5F,EAAE,GAAKrL,EAAE,IAAM,GAAIqL,EAAE,GAAKrL,EAAE,IAAM,GACzC8kG,EAAK5lG,KAAQujG,cAAcoC,QAE5BnB,SACH1jG,EACAC,EACA0kG,EACAE,EACAd,EACAC,EACAY,EACAE,EACArB,EAAiB,QAEdC,SACHmB,EACAF,EACAv5F,EACAC,EACAy5F,EACAF,EACAX,EACAC,EACAT,EAAiB,YAIbsB,EAAE,EAAK/kG,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzC+kG,EAAK9lG,KAAQujG,cAAcsC,GAC3BE,EAAE,EAAK75F,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzC65F,EAAKhmG,KAAQujG,cAAcwC,QAE5BvB,SACH1jG,EACA+kG,EACAE,EACA55F,EACA04F,EACAiB,EACAE,EACAhB,EACAT,EAAiB,QAEdC,SACHqB,EACA9kG,EACAmL,EACA65F,EACAD,EACAhB,EACAC,EACAiB,EACAzB,EAAiB,cAOrBa,EAAM,UACExB,kBAAiB,YAGtBD,iBAAkB,EAOE,IAAR,GAAd4B,IAAuBvlG,KACrB4kG,aAAa9jG,EAAGoL,EAAGC,EAAG04F,EAAME,EAAMC,GAEd,IAAR,GAAdO,IAAuBvlG,KACrB4kG,aAAa9jG,EAAGoL,EAAGnL,EAAG8jG,EAAME,EAAMD,GAErCS,IAEyB,IAAR,GAAdA,IAAuBvlG,KACrB4kG,aAAa7jG,EAAGoL,EAAGrL,EAAGgkG,EAAME,EAAMH,GAEd,IAAR,EAAdU,IAAuBvlG,KACrB4kG,aAAa7jG,EAAGoL,EAAGD,EAAG44F,EAAME,EAAMD,MAU7ClC,EAAAziG,UAAA6lG,sBAAqB,eACb/3F,GtJnSAqB,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,esJqS9Bm0F,WAAW/nF,SAAO,SAAW+oF,EAAUrjG,EAAGJ,OACvC80D,EAAM2uC,EAAS5hG,OACrBsL,GAAiBF,EAAQ6nD,EAAI,IAC7B3nD,GAAiBF,EAAQ6nD,EAAI,IAC7B3nD,GAAiBF,EAAQ6nD,EAAI,OAGxB7nD,GAMT20F,EAAAziG,UAAA8lG,aAAY,uBACExC,YAEhBb,EAvcA,GCnCasD,GAAwB,CACnC5oC,uBAAuB,EACvB6oC,yBAAyB,GFcxB,SACMC,GAAiB7tC,EAAK53B,EAAI0lE,EAAIvlE,EAAIwlE,GACzC/tC,EAAIpS,YACJoS,EAAInS,OAAO,EAAG,GACdmS,EAAI9oB,OAAO9O,EAAI0lE,GACf9tC,EAAI9oB,OAAO3O,EAAIwlE,GACf/tC,EAAI7oB,YACJ6oB,EAAIntB,OACJmtB,EAAIlS,OACJkS,EAAIJ,SAAS,EAAG,EAAGzuD,KAAKuG,IAAI0wB,EAAIG,GAAM,EAAGp3B,KAAKuG,IAAIo2F,EAAIC,IACtD/tC,EAAI5sB,UAUH,SACM46D,GAA8B7kG,EAAMiO,UAGzCjG,KAAK8mB,IAAI9uB,EAAc,EAATiO,GAAc,KAAO,GACnCjG,KAAK8mB,IAAI9uB,EAAc,EAATiO,EAAa,GAAK,QAAc,WA2ClC62F,GACd1lF,EACA+hF,EACAtd,EACAE,OAEMH,EAAe/oE,GAAUgpE,EAAcsd,EAAY/hF,GAGrD0kE,EAAmBvqE,GACrB4nF,EACApd,EACAF,GAGIkhB,EAAsB5D,EAAWvuF,wBACXrP,IAAxBwhG,IACFjhB,GAAoBihB,OAEhBC,EAAsB5lF,EAAWxM,wBACXrP,IAAxByhG,IACFlhB,GAAoBkhB,OAOhBC,EAAe7lF,EAAW1M,gBAC3BuyF,GAAgBh4F,GAAmBg4F,EAAcrhB,GAAY,KAC1DshB,EACJ3rF,GAAmB6F,EAAY0kE,EAAkBF,GACjDE,EACE6f,SAASuB,IAAuBA,EAAqB,IACvDphB,GAAoBohB,UAIjBphB,WAmEOqhB,GACdn0F,EACAC,EACA8wB,EACA+hD,EACAmhB,EACAlhB,EACAqd,EACAgE,EACAC,EACA9nC,EACA+nC,EACAC,OAEMl8D,EAAUjF,GACdp8B,KAAK4d,MAAMmc,EAAa/wB,GACxBhJ,KAAK4d,MAAMmc,EAAa9wB,OAE1BtQ,EAAO0oC,EAASk8D,GAEO,IAAnBF,EAAQ5lG,OAAY,OACf4pC,EAAQ5E,gBAKR+gE,EAAW7+F,UACXqB,KAAK4d,MAAMjf,EAAQo7B,GAAcA,EAH1CsH,EAAQzqB,MAAMmjB,EAAYA,GAM1BsH,EAAQytB,yBAAwB,cAE1B2uC,GrJxCE73F,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,GqJyCrCy3F,EAAQrrF,SAAO,SAAWo6C,EAAK10D,EAAGJ,OrJiFb8N,EAASC,EAATD,EqJhFZq4F,GrJgFqBp4F,EqJhFH+mD,EAAI7nD,QrJiFnB,GAAKa,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,WqJxFjBq4F,EAAqBx2F,GAASu2F,GAC9BE,EAAsBx2F,GAAUs2F,GAChCG,EAAgBxhE,GACpBp8B,KAAK4d,MAAOmc,EAAa2jE,EAAsB5hB,GAC/C97E,KAAK4d,MAAOmc,EAAa4jE,EAAuB7hB,IAElDnjF,EAAOilG,EAAeL,OAEhBM,EAAc9jE,EAAa+hD,EAEjCuhB,EAAQrrF,SAAO,SAAWo6C,EAAK10D,EAAGJ,OAC1BwmG,EAAO1xC,EAAI7nD,OAAO,GAAKk5F,EAAiB,GACxCM,IAAS3xC,EAAI7nD,OAAO,GAAKk5F,EAAiB,IAC1CO,EAAW92F,GAASklD,EAAI7nD,QACxB05F,EAAY92F,GAAUilD,EAAI7nD,QAG5B6nD,EAAI1oB,MAAM16B,MAAQ,GAAKojD,EAAI1oB,MAAMz6B,OAAS,GAC5C20F,EAAc57D,UACZoqB,EAAI1oB,MACJ6xB,EACAA,EACAnJ,EAAI1oB,MAAM16B,MAAQ,EAAIusD,EACtBnJ,EAAI1oB,MAAMz6B,OAAS,EAAIssD,EACvBuoC,EAAOD,EACPE,EAAOF,EACPG,EAAWH,EACXI,EAAYJ,UAKZK,EAAgBp3F,GAAWsyF,UAEjCgE,EAAcb,eAAevqF,SAAO,SAAW+oF,EAAUrjG,EAAGJ,GAoBvD,IACG6B,EAAS4hG,EAAS5hG,OAClB3C,EAASukG,EAASvkG,OACpB0R,EAAK/O,EAAO,GAAG,GACjBmP,EAAKnP,EAAO,GAAG,GACbgP,EAAKhP,EAAO,GAAG,GACjBoP,EAAKpP,EAAO,GAAG,GACbiP,EAAKjP,EAAO,GAAG,GACjBqP,EAAKrP,EAAO,GAAG,GAEXglG,EAAKX,GAAYhnG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,GACpDqiB,EAAKZ,IACPhnG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,GAEjC9kD,EAAKumE,GAAYhnG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,GACpD4gB,EAAKa,IACPhnG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,GAEjC3kD,EAAKomE,GAAYhnG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,GACpD6gB,EAAKY,IACPhnG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,GAMjCsiB,EAAwBn2F,EACxBo2F,EAAwBh2F,EAC9BJ,EAAK,EACLI,EAAK,MAYCi2F,WnJ5NwB76F,WAC1BlM,EAAIkM,EAAIjM,OAELC,EAAI,EAAGA,EAAIF,EAAGE,IAAC,SAElB8mG,EAAS9mG,EACT+mG,EAAQz+F,KAAK8mB,IAAIpjB,EAAIhM,GAAGA,IACnB+U,EAAI/U,EAAI,EAAG+U,EAAIjV,EAAGiV,IAAC,KACpBiyF,EAAW1+F,KAAK8mB,IAAIpjB,EAAI+I,GAAG/U,IAC7BgnG,EAAWD,IACbA,EAAQC,EACRF,EAAS/xF,MAIC,IAAVgyF,EAAW,OACN,SAIH3mG,EAAM4L,EAAI86F,GAChB96F,EAAI86F,GAAU96F,EAAIhM,GAClBgM,EAAIhM,GAAKI,UAGA8b,EAAIlc,EAAI,EAAGkc,EAAIpc,EAAGoc,YACnB+qF,GAAQj7F,EAAIkQ,GAAGlc,GAAKgM,EAAIhM,GAAGA,GACxByc,EAAIzc,EAAGyc,EAAI3c,EAAI,EAAG2c,IACrBzc,GAAKyc,EACPzQ,EAAIkQ,GAAGO,GAAK,EAEZzQ,EAAIkQ,GAAGO,IAAMwqF,EAAOj7F,EAAIhM,GAAGyc,WAO7BtR,EAAC,IAAO3K,MAAMV,GACX4R,EAAI5R,EAAI,EAAG4R,GAAK,EAAGA,IAAC,CAC3BvG,EAAEuG,GAAK1F,EAAI0F,GAAG5R,GAAKkM,EAAI0F,GAAGA,WACjBuW,EAAIvW,EAAI,EAAGuW,GAAK,EAAGA,IAC1Bjc,EAAIic,GAAGnoB,IAAMkM,EAAIic,GAAGvW,GAAKvG,EAAEuG,UAGxBvG,EmJ+Ke+7F,CANC,EALrBz2F,GAAMk2F,EACN91F,GAAM+1F,EAKK,EAAG,EAAGrnE,EAAKknE,IAJtB/1F,GAAMi2F,EACN71F,GAAM81F,EAIK,EAAG,EAAGlnE,EAAK+mE,IACnB,EAAG,EAAGh2F,EAAII,EAAIo0F,EAAKyB,IACnB,EAAG,EAAGh2F,EAAII,EAAIo0F,EAAKwB,QAGjBG,MAILl9D,EAAQK,OACRL,EAAQob,YAjRT,mBAEgClhD,IAA7By9F,GAAsC,KAClCnqC,EAAM7qD,SAASC,cAAa,UAAW04B,WAAU,MACvDkyB,EAAIC,yBAAwB,UAC5BD,EAAItpB,UAAS,wBACbm3D,GAAiB7tC,EAAK,EAAG,EAAG,EAAG,GAC/B6tC,GAAiB7tC,EAAK,EAAG,EAAG,EAAG,OACzB72D,EAAO62D,EAAIrR,aAAa,EAAG,EAAG,EAAG,GAAGxlD,KAC1CghG,GACE6D,GAA8B7kG,EAAM,IACpC6kG,GAA8B7kG,EAAM,IACpC6kG,GAA8B7kG,EAAM,UAGjCghG,GAqQH6F,IACAtB,IAAuBf,GAAwB,CAG/Cn7D,EAAQqb,OAAOzlB,EAAI0lE,WAGbmC,EAAKX,EAAKlnE,EACV8nE,EAAKX,EAAKzB,EACP/2D,EAAO,EAAGA,EAHL,EAGmBA,IAE/BvE,EAAQ0E,OACN9O,EAAKumE,GAAa53D,EAAO,GAAKk5D,EANpB,GAOVnC,EAAKa,EAAY53D,EAAOm5D,EAAE,IAGhBC,GAARp5D,GACFvE,EAAQ0E,OACN9O,EAAKumE,GAAa53D,EAAO,GAAKk5D,EAZtB,GAaRnC,EAAKa,GAAa53D,EAAO,GAAKm5D,EAAE,IAKtC19D,EAAQ0E,OAAO3O,EAAIwlE,QAEnBv7D,EAAQqb,OAAOzlB,EAAI0lE,GACnBt7D,EAAQ0E,OAAOo4D,EAAIC,GACnB/8D,EAAQ0E,OAAO3O,EAAIwlE,GAGrBv7D,EAAQsb,OAERtb,EAAQ/+B,UACNi8F,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZJ,EACAC,GAGF/8D,EAAQlqB,UACNsmF,EAAiB,GAAKY,EACtBZ,EAAiB,GAAKa,GAGxBj9D,EAAQzqB,MACNklE,EAAmB/hD,GAClB+hD,EAAmB/hD,GAGtBsH,EAAQW,UAAU47D,EAAcnhE,OAAQ,EAAG,GAC3C4E,EAAQY,cAGNq7D,IACFj8D,EAAQK,OAERL,EAAQytB,yBAAwB,cAChCztB,EAAQoD,YAAW,QACnBpD,EAAQmE,UAAY,EAEpB43D,EAAcb,eAAevqF,SAAO,SAAW+oF,EAAUrjG,EAAGJ,OACpDd,EAASukG,EAASvkG,OAClB2nG,GAAM3nG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,EACzCqiB,IAAO5nG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,EAC1C9kD,GAAMzgC,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,EACzC4gB,IAAOnmG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,EAC1C3kD,GAAM5gC,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,EACzC6gB,IAAOpmG,EAAO,GAAG,GAAK0nG,EAAc,IAAMniB,EAEhD16C,EAAQob,YACRpb,EAAQqb,OAAOzlB,EAAI0lE,GACnBt7D,EAAQ0E,OAAOo4D,EAAIC,GACnB/8D,EAAQ0E,OAAO3O,EAAIwlE,GACnBv7D,EAAQ2E,YACR3E,EAAQ2B,YAGV3B,EAAQY,WAEHZ,EAAQ5E,qeGpEjBwiE,GA3UA,SAAAnlG,GAeK,SACHolG,EACE9nF,EACA+nF,EACAhG,EACAiG,EACAllD,EACAmlD,EACAtlE,EACAw7B,EACA+pC,EACAC,EACAjC,EACAC,OAZFtjG,EAcEH,EAAAI,KAAA7D,KAAM6jD,EAAWsvB,KAAcnzE,KAM/B4D,EAAKulG,kBAAmCjkG,IAApB+hG,GAAgCA,EAMpDrjG,EAAKwlG,gBAAkBlC,EAMvBtjG,EAAKy+C,YAAc3e,EAMnB9/B,EAAKylG,QAAUnqC,EAMft7D,EAAKmoC,QAAU,KAMfnoC,EAAK0lG,gBAAkBR,EAMvBllG,EAAK2lG,gBAAkBR,EAMvBnlG,EAAK4lG,kBAAoBR,GAAsCnlD,EAM/DjgD,EAAK6lG,aAAY,GAMjB7lG,EAAK8lG,qBAAuB,KAM5B9lG,EAAK+lG,SAAW,MAEV5G,EAAegG,EAAetyB,mBAClC7yE,EAAK4lG,mBAEDI,EAAkBhmG,EAAK2lG,gBAAgBl1F,YACzC2uF,EAAkBp/F,EAAK0lG,gBAAgBj1F,YAErCw1F,EAAsBD,EACxBv3F,GAAgB0wF,EAAc6G,GAC9B7G,KAEiC,IAAjCryF,GAAQm5F,UAGVjmG,EAAKm2B,MAAQo5C,SAIT22B,EAAmB/oF,EAAW1M,YAChCy1F,IAIA9G,EAHGA,EAGe3wF,GAAgB2wF,EAAiB8G,GAFjCA,OAMhBpkB,EAAmBqjB,EAAexyC,cACtC3yD,EAAK4lG,kBAAkB,IAGnB/jB,WHHR1kE,EACA+hF,EACAC,EACArd,OAEMF,EAAez0E,GAAUgyF,GAC3Btd,EAAmBghB,GACrB1lF,EACA+hF,EACAtd,EACAE,WAGG4f,SAAS7f,IAAqBA,GAAoB,IACrDt1E,GAAc4yF,GAAY,SAAY9xF,UACpCw0E,EAAmBghB,GACjB1lF,EACA+hF,EACA7xF,EACAy0E,GAEK4f,SAAS7f,IAAqBA,EAAmB,KAIrDA,EGtBoBskB,CACvBhpF,EACA+hF,EACA+G,EACAnkB,OAGG4f,SAAS7f,IAAqBA,GAAoB,SAGrD7hF,EAAKm2B,MAAQo5C,SAIT62B,OACmB9kG,IAAvBgkG,EAAmCA,ECjKV,MDuK3BtlG,EAAKqmG,eAAc,IAAOrH,GACxB7hF,EACA+hF,EACA+G,EACA7G,EACAvd,EAAmBukB,EACnBtkB,GAGgD,IAA9C9hF,EAAKqmG,eAAe/D,eAAe9kG,cAErCwC,EAAKm2B,MAAQo5C,KAIfvvE,EAAK+lG,SAAWb,EAAep0B,kBAAkB+Q,OAC7CmhB,EAAehjG,EAAKqmG,eAAehE,2BAEnCjD,IACEjiF,EAAW5M,YACbyyF,EAAa,GAAKxxF,GAChBwxF,EAAa,GACb5D,EAAgB,GAChBA,EAAgB,IAElB4D,EAAa,GAAKxxF,GAChBwxF,EAAa,GACb5D,EAAgB,GAChBA,EAAgB,KAGlB4D,EAAev0F,GAAgBu0F,EAAc5D,IAI5CtyF,GAAQk2F,YAGLsD,EAAcpB,EAAe9zB,0BACjC4xB,EACAhjG,EAAK+lG,UAGEQ,EAAOD,EAAYh7F,KAAMi7F,GAAQD,EAAY96F,KAAM+6F,IAAI,IAAA,IACrDC,EAAOF,EAAY/6F,KAAMi7F,GAAQF,EAAY76F,KAAM+6F,IAAI,KACxDxmD,EAAOqlD,EAAgBrlG,EAAK+lG,SAAUQ,EAAMC,EAAM1mE,GACpDkgB,GACFhgD,EAAK6lG,aAAanmG,KAAKsgD,GAKI,IAA7BhgD,EAAK6lG,aAAaroG,SACpBwC,EAAKm2B,MAAQo5C,SAjBfvvE,EAAKm2B,MAAQo5C,mBAzLMk3B,GAAAxB,EAAAplG,GAmNvBolG,EAAAzoG,UAAAqjC,SAAQ,uBACMsI,SAMd88D,EAAAzoG,UAAAkqG,WAAU,eACFtD,EAAO,WACRyC,aAAa9tF,QAAO,SACbioC,EAAMviD,EAAGJ,GACb2iD,GAAQA,EAAKlnB,YAAcy2C,IAC7B6zB,EAAQ1jG,KAAI,CACV4K,OAAMlO,KAAOspG,gBAAgB7yB,mBAAmB7yB,EAAKC,WACrDxW,MAAOuW,EAAKngB,cAGhB79B,KAAI5F,YAEHypG,aAAaroG,OAAS,EAEJ,IAAnB4lG,EAAQ5lG,OAAYpB,KACjB+5B,MAAQo5C,YAEPgB,EAACn0E,KAAQwpG,kBAAkB,GAC3Bl4F,EAAItR,KAAQupG,gBAAgBgB,YAAYp2B,GACxCxhE,EAAmB,iBAAJrB,EAAoBA,EAAOA,EAAK,GAC/CsB,EAAoB,iBAAJtB,EAAoBA,EAAOA,EAAK,GAChDo0E,EAAgB1lF,KAAQupG,gBAAgBhzC,cAAc4d,GACtDsR,EAAgBzlF,KAAQspG,gBAAgB/yC,cAAav2D,KACpD2pG,UAGD5G,EAAY/iG,KAAQupG,gBAAgB9yB,mBAAkBz2E,KACrDwpG,wBAEFz9D,QAAU+6D,GACbn0F,EACAC,EAAM5S,KACDqiD,YACLojC,EAAgBzlF,KACXspG,gBAAgBj1F,YACrBqxE,EACAqd,EAAY/iG,KACPiqG,eACLjD,EAAOhnG,KACFqpG,QAAOrpG,KACPmpG,aAAYnpG,KACZopG,sBAGFrvE,MAAQo5C,QAEVvsE,WAMPiiG,EAAAzoG,UAAAk/B,KAAI,mBACOvF,OAASo5C,GAAc,MACzBp5C,MAAQo5C,QACRvsE,cAED4jG,EAAa,OAEZd,qBAAoB,QACpBD,aAAa9tF,QAAO,SACbioC,EAAMviD,EAAGJ,OACX84B,EAAQ6pB,EAAKlnB,cACf3C,GAASo5C,IAAkBp5C,GAASo5C,GAAiB,CACvDq3B,QAEMC,EAAkBhlG,EACtBm+C,EACAp+C,GAAgB,SACN4G,OACFs+F,EAAQ9mD,EAAKlnB,WAEjBguE,GAASv3B,IACTu3B,GAASv3B,IACTu3B,GAASv3B,KAETltE,EAAcwkG,GAEK,MADnBD,SAEOG,wBACAL,4BAMRZ,qBAAqBpmG,KAAKmnG,KAEjC7kG,KAAI5F,OAGW,IAAfwqG,EACFx6B,WAAUhwE,KAAMsqG,WAAW1kG,KAAI5F,MAAQ,QAElCypG,aAAa9tF,SAAO,SAAWioC,EAAMviD,EAAGJ,GAC7B2iD,EAAKlnB,YACNy2C,IACXvvB,EAAKtkB,YAUfupE,EAAAzoG,UAAAuqG,iBAAgB,gBACTjB,qBAAqB/tF,QAAQ1V,QAC7ByjG,qBAAuB,MAEhCb,EAzUA,CAAyBnG,GAAAx7F,kDELtB,IAkPH0jG,GAjPA,WAGK,SACHC,EAAYC,GAKP9qG,KACE+qG,mBACmB7lG,IAAtB4lG,EAAkCA,EAAoB,KAKrD9qG,KACEgrG,OAAS,EAKXhrG,KACEirG,SAAQ,GAKVjrG,KACEkrG,QAAU,KAKZlrG,KACEmrG,QAAU,YAMjBN,EAAAzqG,UAAAw1D,eAAc,uBACAm1C,cAAgB,GAAC/qG,KAAS+/E,WAAQ//E,KAAU+qG,eAM1DF,EAAAzqG,UAAAo+B,MAAK,gBACEwsE,OAAS,OACTC,SAAQ,QACRC,QAAU,UACVC,QAAU,MAOjBN,EAAAzqG,UAAAgrG,YAAW,SAACroG,eACEkoG,SAASjoG,eAAeD,IAStC8nG,EAAAzqG,UAAAub,QAAO,SAACtP,WACFg/F,EAAKrrG,KAAQkrG,QACVG,GACLh/F,EAAEg/F,EAAMC,OAAQD,EAAME,KAAIvrG,MAC1BqrG,EAAQA,EAAMG,OASlBX,EAAAzqG,UAAAiI,IAAG,SAACtF,EAAK6zB,OACDy0E,EAAKrrG,KAAQirG,SAASloG,UAC5B4I,QAAiBzG,IAAVmmG,EAAqB,IACxBA,IAAKrrG,KAAUmrG,UAERE,IAAKrrG,KAAUkrG,cACnBA,QAAOlrG,KAA8BkrG,QAAQM,WAC7CN,QAAQO,MAAQ,OAErBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,OAE5BH,EAAMG,MAAQ,KACdH,EAAMI,MAAKzrG,KAAQmrG,aACdA,QAAQK,MAAQH,OAChBF,QAAUE,GAXNA,EAAMC,QAoBjBT,EAAAzqG,UAAAw/B,OAAM,SAAC78B,OACCsoG,EAAKrrG,KAAQirG,SAASloG,UAC5B4I,QAAiBzG,IAAVmmG,EAAqB,IACxBA,IAAKrrG,KAAUmrG,cACZA,QAAgCE,EAAMI,WAClCN,UAAOnrG,KACTmrG,QAAQK,MAAQ,OAEdH,IAAKrrG,KAAUkrG,cACnBA,QAAgCG,EAAMG,WAClCN,UAAOlrG,KACTkrG,QAAQO,MAAQ,QAGvBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,mBAEhBP,SAASloG,UACdioG,OACAK,EAAMC,QAMfT,EAAAzqG,UAAA2/E,SAAQ,uBACMirB,QAMdH,EAAAzqG,UAAAmI,QAAO,eAGD8iG,EAFEhmG,EAAI,IAAOxD,MAAK7B,KAAMgrG,QACxB3pG,EAAI,MAEHgqG,EAAKrrG,KAAQmrG,QAASE,EAAOA,EAAQA,EAAMI,MAC9CpmG,EAAKhE,KAAOgqG,EAAME,YAEblmG,GAMTwlG,EAAAzqG,UAAAsrG,UAAS,eAGHL,EAFEhoG,EAAM,IAAOxB,MAAK7B,KAAMgrG,QAC1B3pG,EAAI,MAEHgqG,EAAKrrG,KAAQmrG,QAASE,EAAOA,EAAQA,EAAMI,MAC9CpoG,EAAOhC,KAAOgqG,EAAMC,cAEfjoG,GAMTwnG,EAAAzqG,UAAAurG,SAAQ,uBACMT,QAAQI,QAMtBT,EAAAzqG,UAAAwrG,YAAW,uBACGV,QAAQK,MAOtBV,EAAAzqG,UAAAyrG,aAAY,uBACEV,QAAQI,MAMtBV,EAAAzqG,UAAA4mB,IAAG,eACKqkF,EAAKrrG,KAAQkrG,2BACPD,SAASI,EAAME,MACvBF,EAAMG,QACRH,EAAMG,MAAMC,MAAQ,WAEjBP,QAAgCG,EAAMG,WACjCN,UAAOlrG,KACVmrG,QAAU,aAEVH,OACAK,EAAMC,QAOfT,EAAAzqG,UAAA6a,QAAO,SAAClY,EAAKuF,QACND,IAAItF,QACJkoG,SAASloG,GAAKuoG,OAAShjG,GAO9BuiG,EAAAzqG,UAAA0I,IAAG,SAAC/F,EAAKuF,GACPqD,KAAS5I,KAAG/C,KAASirG,UAAW,QAC1BI,EAAK,CACTE,KAAMxoG,EACNyoG,MAAO,KACPC,MAAKzrG,KAAOmrG,QACZG,OAAQhjG,QAEA6iG,aAGHA,QAAQK,MAAQH,EAHNrrG,KACVkrG,QAAUG,OAIZF,QAAUE,OACVJ,SAASloG,GAAOsoG,SACdL,QAQTH,EAAAzqG,UAAAkoC,QAAO,SAACh3B,QACDy5F,cAAgBz5F,GAEzBu5F,EA/OA,YCLgBiB,GAAe33B,EAAG3nE,EAAGC,EAAGs/F,eAChB7mG,IAAlB6mG,GACFA,EAAc,GAAK53B,EACnB43B,EAAc,GAAKv/F,EACnBu/F,EAAc,GAAKt/F,EACZs/F,IAEC53B,EAAG3nE,EAAGC,YAUFu/F,GAAU73B,EAAG3nE,EAAGC,UACvB0nE,EAAC,IAAS3nE,EAAC,IAASC,WAQbw/F,GAAOpoD,UACdmoD,GAAUnoD,EAAU,GAAIA,EAAU,GAAIA,EAAU,keCHzDqoD,GApCA,SAAAzoG,YAAA0oG,0DAAwBC,GAAAD,EAAA1oG,GAItB0oG,EAAA/rG,UAAA63E,YAAW,SAACX,aACE1hB,kBAAc,IACd51D,KAAQ2rG,WACTxzB,WAAYb,EAAS,WAGvBtwD,MAAMg7E,YAQjBmK,EAAA/rG,UAAAisG,mBAAkB,cACQ,SAAftsB,gBAKH5L,WDoCcpxE,UACfA,EAAIyI,MAAK,KAAMugB,IAAI4Z,QCtCN2mE,CADTtsG,KAAQ6rG,gBAEG,QACflwF,QAAO,SACAioC,GACJA,EAAKC,UAAU,KAAOswB,SACnBv0C,OAAOqsE,GAAOroD,EAAKC,YACxBD,EAAKo+C,YAEPp8F,KAAI5F,SAGZmsG,EAlCA,CAAwBvB,iDCCxB2B,GAMe,gBANfA,GAca,cAdbA,GAqBe,oGCXZ,IACGC,GAAY,CAAI,EAAG,EAAG,GAgpB5BC,GAzmBA,WAGK,SACHC,EAAY1hG,O9K4LW/J,EAAe0rG,EAChCC,E8KrKA7oB,KApBD/jF,KACEs5B,aAA8Bp0B,IAApB8F,EAAQsuB,QAAwBtuB,EAAQsuB,QAAU,EAK9Dt5B,KACEinF,aAAej8E,EAAQk5E,YAC5Bv4E,I9KgLqB1K,E8K/KXjB,KACDinF,a9K8K2B0lB,G8K1KhC,E9K2KAC,E8K/KiB,SACP9rG,EAAGC,UACJA,EAAID,I9K6KSD,EACrBI,EAAI4rG,OAAK,SAAWC,EAAYxnG,MACvB,IAAVA,EAAW,OACN,MAEHynG,EAAMH,EAAQ3rG,EAAIqE,EAAQ,GAAIwnG,WAC3BC,EAAM,GAAMJ,GAAsB,IAARI,O8K/KjC,KAKG/hG,EAAQgiG,QAAO,IAAA,IACT3rG,EAAI,EAAGuB,EAAE5C,KAAQinF,aAAa7lF,OAAS,EAAGC,EAAIuB,IAAMvB,KACtD0iF,WAGMkD,aAAa5lF,GAACrB,KAASinF,aAAa5lF,EAAI,KAAO0iF,EAAU,CAChEA,OAAa7+E,cAHf6+E,EAAU/jF,KAAQinF,aAAa5lF,GAACrB,KAASinF,aAAa5lF,EAAI,GAa7DrB,KACEgnF,YAAcjD,EAKhB/jF,KACEu5B,QAAOv5B,KAAQinF,aAAa7lF,OAAS,EAKvCpB,KACEmsC,aAA6BjnC,IAAnB8F,EAAQ+wC,OAAuB/wC,EAAQ+wC,OAAS,KAK5D/7C,KACEitG,SAAW,UACQ/nG,IAApB8F,EAAQgiG,eACLC,SAAWjiG,EAAQgiG,QACxBrhG,GAAM3L,KAAMitG,SAAS7rG,QAAMpB,KAASinF,aAAa7lF,OAAQ,SAGrD8M,EAASlD,EAAQkD,YAERhJ,IAAXgJ,GAAoBlO,KAAUmsC,SAAOnsC,KAAUitG,WAAQjtG,KACpDmsC,QAAU17B,GAAWvC,IAG5BvC,IAAM3L,KACGmsC,SAAOnsC,KAASitG,UAAQjtG,KAAWmsC,UAAOnsC,KAAUitG,SAC3D,IAMCjtG,KACEktG,WAAa,UACQhoG,IAAtB8F,EAAQmiG,iBACLD,WAAaliG,EAAQmiG,UAC1BxhG,GAAM3L,KAAMktG,WAAW9rG,QAAMpB,KAASinF,aAAa7lF,OAAQ,KAM1DpB,KACEotG,eACkBloG,IAArB8F,EAAQqiG,SACJriG,EAAQqiG,SAAQrtG,KACVktG,WAEN,KjC/IuB,IiCgJ7BvhG,IAAM3L,KACGotG,WAASptG,KAASktG,YAAUltG,KAC3BotG,YAASptG,KAAUktG,WAC3B,IAMCltG,KACEsT,aAAqBpO,IAAXgJ,EAAuBA,EAAS,KAK5ClO,KACEstG,gBAAkB,KAKpBttG,KACEutG,SAAQ,CAAI,EAAG,GAKjBvtG,KACEwtG,WAAU,CAAI,EAAG,EAAG,EAAG,QAENtoG,IAAlB8F,EAAQyiG,MAAmBztG,KACxBstG,gBAAkBtiG,EAAQyiG,MAAM1hF,KAAG,SAAWza,EAAM6iE,OACjDpwB,EAAS,IAAOmvB,GACpBvpE,KAAKsG,IAAI,EAAGqB,EAAK,IACjB3H,KAAKuG,IAAIoB,EAAK,GAAK,GAAG,GACtB3H,KAAKsG,IAAI,EAAGqB,EAAK,IACjB3H,KAAKuG,IAAIoB,EAAK,GAAK,GAAG,OAEpBpD,EAAM,KACFw/F,EAAmB1tG,KAAQg1E,0BAA0B9mE,EAAQimE,GACnEpwB,EAAU70C,KAAOvF,KAAKuG,IAAIw9F,EAAoBx+F,KAAM60C,EAAU70C,MAC9D60C,EAAU30C,KAAOzF,KAAKsG,IAAIy9F,EAAoBt+F,KAAM20C,EAAU30C,MAC9D20C,EAAU50C,KAAOxF,KAAKuG,IAAIw9F,EAAoBv+F,KAAM40C,EAAU50C,MAC9D40C,EAAU10C,KAAO1F,KAAKsG,IAAIy9F,EAAoBr+F,KAAM00C,EAAU10C,aAEzD00C,UAEA71C,GAAMlO,KACV2tG,qBAAqBz/F,UAY9Bw+F,EAAAtsG,UAAAwtG,iBAAgB,SAAC1/F,EAAQytB,EAAMvrB,WACvB2zC,EAAS/jD,KAAQg1E,0BAA0B9mE,EAAQytB,GAChDt6B,EAAI0iD,EAAU70C,KAAMtM,EAAKmhD,EAAU30C,KAAM/N,GAAKuB,IAAMvB,EAAC,IAAA,IACnDkc,EAAIwmC,EAAU50C,KAAMgU,EAAK4gC,EAAU10C,KAAMkO,GAAK4F,IAAM5F,EAC3DnN,EAAQ,CAAEurB,EAAMt6B,EAAGkc,KAYzBmvF,EAAAtsG,UAAAs1E,gCAA+B,SAC7B7xB,EACAzzC,EACAy9F,EACAv/F,OAEe9B,EAAGC,EACdqhG,EAAkB,KAClB35B,EAAItwB,EAAU,GAAK,MACE,SAAhBmjC,aACPx6E,EAAIq3C,EAAU,GACdp3C,EAAIo3C,EAAU,IAEdiqD,EAAe9tG,KAAQy2E,mBAAmB5yB,EAAWv1C,GAEhD6lE,GAACn0E,KAASs5B,SAAO,IAYlBlpB,EAAS+jE,EAXY,SAAhB6S,YAGK/T,GAFZzmE,EAAI7C,KAAK+Q,MAAMlO,EAAI,GAEoBA,EADvCC,EAAI9C,KAAK+Q,MAAMjO,EAAI,GAC0BA,EAAGohG,GAEvC7tG,KAAQg1E,0BACf84B,EACA35B,EACA05B,IAGqB,OAChB,IAEP15B,SAEG,GAQTu4B,EAAAtsG,UAAAiU,UAAS,uBACKf,SAQdo5F,EAAAtsG,UAAAq6B,WAAU,uBACIlB,SAQdmzE,EAAAtsG,UAAAo6B,WAAU,uBACIlB,SASdozE,EAAAtsG,UAAA2jC,UAAS,SAACowC,eACChoC,QAAOnsC,KACFmsC,aAEA8gE,SAAS94B,IAUzBu4B,EAAAtsG,UAAAm2D,cAAa,SAAC4d,eACA8S,aAAa9S,IAQ3Bu4B,EAAAtsG,UAAAqjE,eAAc,uBACAwjB,cASdylB,EAAAtsG,UAAAo1E,2BAA0B,SAAC3xB,EAAWgqD,EAAev/F,MAC/Cu1C,EAAU,GAAC7jD,KAASu5B,QAAO,IACJ,SAAhBytD,YAAiB,KAClB93E,EAAsB,EAAf20C,EAAU,GACjB10C,EAAsB,EAAf00C,EAAU,UAChBovB,GACL/jE,EACAA,EAAO,EACPC,EACAA,EAAO,EACP0+F,OAGEC,EAAe9tG,KAAQy2E,mBAC3B5yB,EACAv1C,GAAUtO,KAASwtG,wBAETx4B,0BACV84B,EACAjqD,EAAU,GAAK,EACfgqD,UAGG,MASTnB,EAAAtsG,UAAA2tG,6BAA4B,SAAClqD,EAAWswB,EAAG05B,MACrC15B,EAACn0E,KAAQu5B,SAAW46C,EAACn0E,KAAQs5B,QAAO,OAC/B,SAGH00E,EAAanqD,EAAU,GACvBoqD,EAAapqD,EAAU,GACvBqqD,EAAarqD,EAAU,MAEzBswB,IAAM65B,EAAU,OACX/6B,GACLg7B,EACAC,EACAD,EACAC,EACAL,WAIK7mB,YAAW,KACZgU,EAASrxF,KAAKwrB,IAAGn1B,KAAMgnF,YAAa7S,EAAI65B,GACxC9+F,EAAOvF,KAAK+Q,MAAMuzF,EAAajT,GAC/B7rF,EAAOxF,KAAK+Q,MAAMwzF,EAAalT,UACjC7mB,EAAI65B,EACC/6B,GAAwB/jE,EAAMA,EAAMC,EAAMA,EAAM0+F,GAKlD56B,GAAwB/jE,EAFlBvF,KAAK+Q,MAAMsgF,GAAUiT,EAAa,IAAM,EAEV9+F,EAD9BxF,KAAK+Q,MAAMsgF,GAAUkT,EAAa,IAAM,EACEL,OAGnDC,EAAe9tG,KAAQy2E,mBAAmB5yB,EAAS7jD,KAAOwtG,wBACpDx4B,0BAA0B84B,EAAiB35B,EAAG05B,IAU5DnB,EAAAtsG,UAAA+tG,mBAAkB,SAACh6B,EAAGpwB,EAAWz1C,OACzBytC,EAAM/7C,KAAQ+jC,UAAUowC,GACxB/iE,EAAUpR,KAAQu2D,cAAc4d,GAChCk5B,EAAW9qE,GAAMviC,KAAMuqG,YAAYp2B,GAACn0E,KAAQutG,UAC5Cr+F,EAAO6sC,EAAO,GAAKgI,EAAU70C,KAAOm+F,EAAS,GAAKj8F,EAClDhC,EAAO2sC,EAAO,IAAMgI,EAAU30C,KAAO,GAAKi+F,EAAS,GAAKj8F,SAGvD5B,GAAeN,EAFT6sC,EAAO,GAAKgI,EAAU50C,KAAOk+F,EAAS,GAAKj8F,EAEtBhC,EADrB2sC,EAAO,IAAMgI,EAAU10C,KAAO,GAAKg+F,EAAS,GAAKj8F,EAChB9C,IAUhDo+F,EAAAtsG,UAAA40E,0BAAyB,SAAC9mE,EAAQimE,EAAG05B,OAC7BhqD,EAAY2oD,QACb4B,uBAAuBlgG,EAAO,GAAIA,EAAO,GAAIimE,GAAG,EAAOtwB,OACtD30C,EAAO20C,EAAU,GACjB10C,EAAO00C,EAAU,eAClBuqD,uBAAuBlgG,EAAO,GAAIA,EAAO,GAAIimE,GAAG,EAAMtwB,GACpDovB,GACL/jE,EACA20C,EAAU,GACV10C,EACA00C,EAAU,GACVgqD,IAQJnB,EAAAtsG,UAAAs4E,mBAAkB,SAAC70B,OACX9H,EAAM/7C,KAAQ+jC,UAAU8f,EAAU,IAClCzyC,EAAUpR,KAAQu2D,cAAc1S,EAAU,IAC1CwpD,EAAW9qE,GAAMviC,KAAMuqG,YAAY1mD,EAAU,IAAC7jD,KAASutG,iBAE3DxxD,EAAO,IAAM8H,EAAU,GAAK,IAAOwpD,EAAS,GAAKj8F,EACjD2qC,EAAO,IAAM8H,EAAU,GAAK,IAAOwpD,EAAS,GAAKj8F,IAYrDs7F,EAAAtsG,UAAAq2E,mBAAkB,SAAC5yB,EAAWv1C,OACtBytC,EAAM/7C,KAAQ+jC,UAAU8f,EAAU,IAClCzyC,EAAUpR,KAAQu2D,cAAc1S,EAAU,IAC1CwpD,EAAW9qE,GAAMviC,KAAMuqG,YAAY1mD,EAAU,IAAC7jD,KAASutG,UACvDr+F,EAAO6sC,EAAO,GAAK8H,EAAU,GAAKwpD,EAAS,GAAKj8F,EAChDjC,EAAO4sC,EAAO,IAAM8H,EAAU,GAAK,GAAKwpD,EAAS,GAAKj8F,SAGrD5B,GAAeN,EAAMC,EAFfD,EAAOm+F,EAAS,GAAKj8F,EACrBjC,EAAOk+F,EAAS,GAAKj8F,EACY9C,IAchDo+F,EAAAtsG,UAAAiuG,kCAAiC,SAAC9hG,EAAY6E,EAAY26F,eAC5CuC,gCACV/hG,EAAW,GACXA,EAAW,GACX6E,GACA,EACA26F,IAiBJW,EAAAtsG,UAAAkuG,gCAA+B,SAC7B9hG,EACAC,EACA2E,EACAm9F,EACAxC,OAEM53B,EAACn0E,KAAQ00E,kBAAkBtjE,GAC3BmP,EAAQnP,EAAUpR,KAAQu2D,cAAc4d,GACxCp4B,EAAM/7C,KAAQ+jC,UAAUowC,GACxBk5B,EAAW9qE,GAAMviC,KAAMuqG,YAAYp2B,GAACn0E,KAAQutG,UAE5CiB,EAAUD,EAA4B,GAAM,EAC5CE,EAAUF,EAA4B,GAAM,EAC5CG,EAAc/kG,KAAK+Q,OAAOlO,EAAIuvC,EAAO,IAAM3qC,EAAao9F,GACxDG,EAAchlG,KAAK+Q,OAAOqhC,EAAO,GAAKtvC,GAAK2E,EAAaq9F,GAC1DR,EAAc1tF,EAAQmuF,EAAerB,EAAS,GAC9Ca,EAAc3tF,EAAQouF,EAAetB,EAAS,UAE9CkB,GACFN,EAAatkG,KAAK40B,KAAK0vE,GAAc,EACrCC,EAAavkG,KAAK40B,KAAK2vE,GAAc,IAErCD,EAAatkG,KAAK+Q,MAAMuzF,GACxBC,EAAavkG,KAAK+Q,MAAMwzF,IAGnBpC,GAAwB33B,EAAG85B,EAAYC,EAAYnC,IAkB5DW,EAAAtsG,UAAAguG,uBAAsB,SAAC5hG,EAAGC,EAAG0nE,EAAGo6B,EAA2BxC,OACnDhwD,EAAM/7C,KAAQ+jC,UAAUowC,GACxB/iE,EAAUpR,KAAQu2D,cAAc4d,GAChCk5B,EAAW9qE,GAAMviC,KAAMuqG,YAAYp2B,GAACn0E,KAAQutG,UAE5CiB,EAAUD,EAA4B,GAAM,EAC5CE,EAAUF,EAA4B,GAAM,EAC5CG,EAAc/kG,KAAK+Q,OAAOlO,EAAIuvC,EAAO,IAAM3qC,EAAao9F,GACxDG,EAAchlG,KAAK+Q,OAAOqhC,EAAO,GAAKtvC,GAAK2E,EAAaq9F,GAC1DR,EAAaS,EAAcrB,EAAS,GACpCa,EAAaS,EAActB,EAAS,UAEpCkB,GACFN,EAAatkG,KAAK40B,KAAK0vE,GAAc,EACrCC,EAAavkG,KAAK40B,KAAK2vE,GAAc,IAErCD,EAAatkG,KAAK+Q,MAAMuzF,GACxBC,EAAavkG,KAAK+Q,MAAMwzF,IAGnBpC,GAAwB33B,EAAG85B,EAAYC,EAAYnC,IAW5DW,EAAAtsG,UAAAm2E,yBAAwB,SAAChqE,EAAY4nE,EAAG43B,eAC1BqC,uBACV7hG,EAAW,GACXA,EAAW,GACX4nE,GACA,EACA43B,IAQJW,EAAAtsG,UAAAwuG,uBAAsB,SAAC/qD,eACTojC,aAAapjC,EAAU,KAWrC6oD,EAAAtsG,UAAAmqG,YAAW,SAACp2B,eACDi5B,UAASptG,KACJotG,eAEAF,WAAW/4B,IAQ3Bu4B,EAAAtsG,UAAAyuG,iBAAgB,SAAC16B,eACLm5B,qBAKIA,gBAAgBn5B,GALLn0E,KACXsT,QAAOtT,KACVg1E,0BAAyBh1E,KAAMsT,QAAS6gE,GAC7C,MAuBRu4B,EAAAtsG,UAAAs0E,kBAAiB,SAACtjE,EAAY27E,UAMrB33E,GALGpU,EAAiBhB,KACpBinF,aACL71E,EACA27E,GAAiB,GAEL/sF,KAAOs5B,QAAOt5B,KAAOu5B,UAOrCmzE,EAAAtsG,UAAAutG,qBAAoB,SAACz/F,WACb9M,EAAMpB,KAAQinF,aAAa7lF,OAC3B0tG,EAAc,IAAOjtG,MAAMT,GACxB+yE,EAACn0E,KAAQs5B,QAAS66C,EAAI/yE,IAAU+yE,EACvC26B,EAAe36B,GAACn0E,KAASg1E,0BAA0B9mE,EAAQimE,QAExDm5B,gBAAkBwB,GAE3BpC,EAvmBA,YCnCgBqC,GAAiB50F,OAC3BrF,EAAWqF,EAAWvF,4BACrBE,IACHA,WAsIFqF,EACA60F,EACAC,EACAC,mBApG8BhhG,EAAQ8gG,EAAaC,EAAcC,OAC3Dj+F,OAAwB/L,IAAfgqG,EAA2BA,EAAaphG,GAEjDo2E,EAAcirB,GAAsBjhG,EAAQ8gG,EAAaC,cAEpDxC,GAAQ,CACjBv+F,OAAQA,EACR6tC,OAAQ/qC,GAAU9C,EAAQ+C,GAC1BizE,YAAaA,EACbmpB,SAAU4B,IA8FLG,CADQC,GAAqBl1F,GACL60F,EAAaC,EAAcC,GA5I7CI,CAAoBn1F,GAC/BA,EAAWtF,mBAAmBC,IAEzBA,EA6FN,SACMq6F,GACPjhG,EACA8gG,EACAC,EACAM,WAEMh2E,OAA0Br0B,IAAhB8pG,EAA4BA,ElCxHd,GkC0HxBp8F,EAAS9B,GAAU5C,GACnByE,EAAQ9B,GAAS3C,GAEjBm/F,EAAW9qE,QACEr9B,IAAjB+pG,EAA6BA,ElCxHA,KkC0HzB71E,EACJm2E,EAAoB,EAChBA,EACA5lG,KAAKuG,IAAIyC,EAAQ06F,EAAS,GAAIz6F,EAASy6F,EAAS,IAEhDjsG,EAASm4B,EAAU,EACnB2qD,EAAW,IAAOriF,MAAMT,GACrB+yE,EAAI,EAAGA,EAAI/yE,IAAU+yE,EAC5B+P,EAAY/P,GAAK/6C,EAAgBzvB,KAAKwrB,IAAI,EAAGg/C,UAExC+P,WA4BOmrB,GAAqBl1F,OAE/BjM,GADJiM,EAAaY,GAAcZ,IACH9F,gBACnBnG,EAAM,KACHshG,EACH,IAAM9lG,GAAgBG,GAAMT,SAAY+Q,EAAW5F,mBACtDrG,EAASsB,IAAgBggG,GAAOA,EAAMA,EAAMA,UAEvCthG,geCpITuhG,GAAA,SAAAhsG,GAGK,SACHisG,EAAY1kG,OAAZpH,EACEH,EAAAI,KAAA7D,KAAA,CACEgjE,aAAch4D,EAAQg4D,aACtBE,wBAAyBl4D,EAAQk4D,wBACjC/oD,WAAYnP,EAAQmP,WACpB4f,MAAO/uB,EAAQ+uB,MACfqpC,MAAOp4D,EAAQo4D,cAMjBx/D,EAAKwC,GAKLxC,EAAK0C,KAKL1C,EAAK4C,GAML5C,EAAK+rG,aAA6BzqG,IAAnB8F,EAAQ4kG,QAAuB5kG,EAAQ4kG,OAMtDhsG,EAAKisG,qBACwB3qG,IAA3B8F,EAAQ6pE,eAA+B7pE,EAAQ6pE,eAAiB,EAMlEjxE,EAAKkR,cAAgC5P,IAArB8F,EAAQ8J,SAAyB9J,EAAQ8J,SAAW,SAG9DA,EAAW9J,EAAQ8J,gBACrBA,GACFytB,GAAOztB,EAASy1F,YAAYz1F,EAAS0lB,cAHzB,CAAI,IAAK,MAUvB52B,EAAKksG,UAAS,IAAOC,GAAA7oG,QAAU8D,EAAQm6B,WAAa,GAMpDvhC,EAAKosG,QAAO,CAAI,EAAG,GAMnBpsG,EAAK2nG,KAAOvgG,EAAQjI,KAAG,GAMvBa,EAAKqsG,YAAW,CAAI/4B,WAAYlsE,EAAQksE,YASxCtzE,EAAK+wE,WAAa3pE,EAAQ2pE,WAAa3pE,EAAQ2pE,WAAa,WApFvCu7B,GAAAR,EAAAjsG,GA0FvBisG,EAAAtvG,UAAAw1D,eAAc,uBACAk6C,UAAUl6C,kBAOxB85C,EAAAtvG,UAAA63E,YAAW,SAAC99D,EAAYm9D,OAChBw4B,EAAS9vG,KAAQmwG,0BAA0Bh2F,GAC7C21F,GACFA,EAAU73B,YAAYX,IAa1Bo4B,EAAAtvG,UAAA4jD,kBAAiB,SAAC7pC,EAAYg6D,EAAGpwB,EAAW3zC,OACpC0/F,EAAS9vG,KAAQmwG,0BAA0Bh2F,OAC5C21F,EAAS,OACL,UAILlsD,EAAMizB,EAAcu5B,EADpB36B,GAAU,EAELjpE,EAAIu3C,EAAU70C,KAAM1C,GAAKu3C,EAAU30C,OAAQ5C,EAAC,IAAA,IAC1CC,EAAIs3C,EAAU50C,KAAM1C,GAAKs3C,EAAU10C,OAAQ5C,EAClDoqE,EAAem1B,GAAU73B,EAAG3nE,EAAGC,GAC/B2jG,GAAS,EACLN,EAAU1E,YAAYv0B,KAIxBu5B,GAHAxsD,EACEksD,EAAUznG,IAAIwuE,IAEFn6C,aAAey2C,MAE3Bi9B,GAA4B,IAAnBhgG,EAASwzC,IAGjBwsD,IACH36B,GAAU,UAITA,GAOTi6B,EAAAtvG,UAAAu2E,uBAAsB,SAACx8D,UACd,GAQTu1F,EAAAtvG,UAAA+3E,OAAM,uBACQozB,MAQdmE,EAAAtvG,UAAAiwG,OAAM,SAACttG,QACIwoG,OAASxoG,SACXwoG,KAAOxoG,OACP6D,YAQT8oG,EAAAtvG,UAAA21E,UAAS,SAAC57D,eACIw1F,SAMdD,EAAAtvG,UAAAqjE,eAAc,uBACA3uD,SAAS2uD,kBAYvBisC,EAAAtvG,UAAA8zE,QAAO,SAACC,EAAG3nE,EAAGC,EAAGi3B,EAAYvpB,UACpB/S,MAQTsoG,EAAAtvG,UAAAkwG,YAAW,uBACGx7F,UAOd46F,EAAAtvG,UAAAq0E,yBAAwB,SAACt6D,eACbrF,cAGIA,SAFLi6F,GAAyB50F,IAWpCu1F,EAAAtvG,UAAA+vG,0BAAyB,SAACh2F,UACxBxO,GACEoQ,GAAU/b,KAAMwjE,gBAAiBrpD,GACjC,SAEU21F,WAUdJ,EAAAtvG,UAAA00E,kBAAiB,SAACpxC,eACJmsE,iBASdH,EAAAtvG,UAAA81E,iBAAgB,SAAC/B,EAAGzwC,EAAYvpB,O7GnQZ7I,EAAMmxE,EAAOjgD,E6GoQzB1tB,EAAQ9U,KAAQy0E,yBAAyBt6D,GACzC06D,EAAc70E,KAAQ80E,kBAAkBpxC,GACxC2pE,EAAW9qE,GAAOztB,EAASy1F,YAAYp2B,GAACn0E,KAAQgwG,gBAChC,GAAlBn7B,EACKw4B,G7GxQS/7F,E6G0QC+7F,E7G1QK5qB,E6G0QK5N,O7GzQd3vE,KADgBs9B,E6G0QYxiC,KAAOgwG,W7GxQlDxtE,EAAQ,CAAI,EAAG,IAEjBA,EAAS,GAAMlxB,EAAK,GAAKmxE,EAAQ,GAAO,EACxCjgD,EAAS,GAAMlxB,EAAK,GAAKmxE,EAAQ,GAAO,EACjCjgD,I6GiRPktE,EAAAtvG,UAAAmwG,+BAA8B,SAAC1sD,EAAW2sD,OAClCr2F,OACejV,IAAnBsrG,EAA+BA,EAAcxwG,KAAQwjE,gBACjD1uD,EAAQ9U,KAAQy0E,yBAAyBt6D,eACtC2iD,YAAc3iD,EAAWzF,aAChCmvC,WDjSgB/uC,EAAU+uC,EAAW1pC,OACnCg6D,EAAItwB,EAAU,GACd1yC,EAAS2D,EAAS4jE,mBAAmB70B,GACrCrpC,EAAmB60F,GAAqBl1F,MACzCvL,GAAmB4L,EAAkBrJ,UAQjC0yC,MAPDzpC,EAAavJ,GAAS2J,GACtBH,EAAa1Q,KAAK40B,MACrB/jB,EAAiB,GAAKrJ,EAAO,IAAMiJ,UAEtCjJ,EAAO,IAAMiJ,EAAaC,EACnBvF,EAASyhE,yBAAyBplE,EAAQgjE,GCuRnCs8B,CAAM37F,EAAU+uC,EAAW1pC,aLnPZ0pC,EAAW/uC,OACpCq/D,EAAItwB,EAAU,GACdr3C,EAAIq3C,EAAU,GACdp3C,EAAIo3C,EAAU,MAEhB/uC,EAAS0lB,aAAe25C,GAAKA,EAAIr/D,EAAS2lB,aAAU,OAC/C,MAEHspB,EAAYjvC,EAAS+5F,iBAAiB16B,UACvCpwB,GAGIA,EAAUlkC,WAAWrT,EAAGC,GKyOxBikG,CAAiB7sD,EAAW/uC,GAAY+uC,EAAY,MAO7D6rD,EAAAtvG,UAAAo+B,MAAK,gBACEsxE,UAAUtxE,SAGjBkxE,EAAAtvG,UAAAujE,QAAO,gBACAnlC,QACL/6B,EAAArD,UAAMujE,QAAO9/D,KAAA7D,OAQf0vG,EAAAtvG,UAAAw4E,gBAAe,SAACL,EAAWp+D,OACnB21F,EAAS9vG,KAAQmwG,0BAA0Bh2F,GAC7Co+D,EAAYu3B,EAAU/E,gBACxB+E,EAAU/E,cAAgBxyB,IAY9Bm3B,EAAAtvG,UAAAu4E,QAAO,SAACxE,EAAG3nE,EAAGC,EAAG0N,KACnBu1F,EA3TA,CAAyB1lC,GAAA9iE,SAkUzBypG,GAAA,SAAAltG,GAIK,SACHmtG,EAAY7wG,EAAM6jD,OAAlBhgD,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKggD,KAAOA,WAbqBssD,GAAAU,EAAAntG,GAerCmtG,EAfA,CAAqC/wG,GAiBrCgxG,GAAepB,YCzXCqB,GAAmBC,EAAUj8F,OACrCk8F,EAAM,SACNC,EAAM,SACNC,EAAM,SACNC,EAAU,0BAQJttD,EAAWngB,EAAYvpB,UAC1B0pC,EAGIktD,EACJ91F,QAAQ+1F,EAAQntD,EAAU,GAAGjrB,YAC7B3d,QAAQg2F,EAAQptD,EAAU,GAAGjrB,YAC7B3d,QAAQi2F,EAAQrtD,EAAU,GAAGjrB,YAC7B3d,QAAQk2F,GAAU,eACXh9B,EAAItwB,EAAU,GACd3D,EAAQprC,EAAS+5F,iBAAiB16B,UACxCxoE,GAAOu0C,EAAO,KACJA,EAAM8yB,YAAcnvB,EAAU,GAAK,GACpCjrB,mBAZD,YAwBJw4E,GAAoBC,EAAWv8F,WACvChO,EAAMuqG,EAAUjwG,OAChBkwG,EAAgB,IAAOzvG,MAAMiF,GAC1BzF,EAAI,EAAGA,EAAIyF,IAAOzF,EACzBiwG,EAAiBjwG,GAAKyvG,GAAmBO,EAAUhwG,GAAIyT,mBAShBw8F,UACT,IAA5BA,EAAiBlwG,OACZkwG,EAAiB,YASdztD,EAAWngB,EAAYvpB,MAC1B0pC,OAIGv+C,EAAQ6Q,YNJD0tC,UACXA,EAAU,IAAMA,EAAU,IAAMA,EAAU,GMElC0tD,CAAc1tD,GACAytD,EAAiBlwG,eAClCkwG,EAAiBhsG,GAAOu+C,EAAWngB,EAAYvpB,KAxBrDq3F,CAA2BF,ieC4KpCG,GA/LA,SAAAhuG,GAGK,SACHiuG,EAAY1mG,OAAZpH,EACEH,EAAAI,KAAA7D,KAAA,CACEgjE,aAAch4D,EAAQg4D,aACtB79B,UAAWn6B,EAAQm6B,UACnByqE,OAAQ5kG,EAAQ4kG,OAChBz1F,WAAYnP,EAAQmP,WACpB4f,MAAO/uB,EAAQ+uB,MACfjlB,SAAU9J,EAAQ8J,SAClB+/D,eAAgB7pE,EAAQ6pE,eACxBzR,MAAOp4D,EAAQo4D,MACf8T,WAAYlsE,EAAQksE,WACpBn0E,IAAKiI,EAAQjI,IACbmgE,wBAAyBl4D,EAAQk4D,wBACjCyR,WAAY3pE,EAAQ2pE,0BAOtB/wE,EAAK+tG,yBACH/tG,EAAKguG,kBAAoBF,EAAQtxG,UAAUwxG,gBAM7ChuG,EAAKy+F,iBAAmBr3F,EAAQq3F,iBAE5Br3F,EAAQ4mG,kBACVhuG,EAAKguG,gBAAkB5mG,EAAQ4mG,iBAOjChuG,EAAKiuG,KAAO,KAER7mG,EAAQ6mG,KACVjuG,EAAKkuG,QAAQ9mG,EAAQ6mG,MACZ7mG,EAAQm5D,KACjBvgE,EAAKmmE,OAAO/+D,EAAQm5D,KAOtBvgE,EAAKmuG,iBAAgB,YArDHC,GAAAN,EAAAjuG,GA6DpBiuG,EAAAtxG,UAAA6xG,oBAAmB,uBACL5P,kBAQdqP,EAAAtxG,UAAA8xG,mBAAkB,kBACT3vG,OAAO4vG,eAAcnyG,MAAO4xG,kBAAe5xG,KAAU4xG,gBAAe5xG,KAClE4xG,gBAAgBhsG,KAAI5F,MAAAA,KACpB4xG,iBAUXF,EAAAtxG,UAAAgyG,QAAO,uBACOP,MAQdH,EAAAtxG,UAAA6gF,iBAAgB,SAACx8E,OAIX1E,EAHE6jD,EAAoDn/C,EAAMtE,OAC1DgiE,EAAM56D,GAAOq8C,GACbqwB,EAAYrwB,EAAKlnB,WAEnBu3C,GAAad,SACV4+B,iBAAiB5vC,IAAO,EAC7BpiE,EAAOwsG,IACEpqC,KAAGniE,KAAS+xG,+BACTA,iBAAiB5vC,GAC7BpiE,EACEk0E,GAAad,GACTo5B,GACAt4B,GAAad,GACbo5B,QACArnG,GAEIA,MAARnF,GAAiBC,KACdwE,cAAa,IAAK6tG,GAAAzB,gBAAgB7wG,EAAM6jD,KASjD8tD,EAAAtxG,UAAAkyG,oBAAmB,SAACjQ,QACbyN,UAAUtxE,aACV6jE,iBAAmBA,OACnBz7F,WASP8qG,EAAAtxG,UAAAmyG,mBAAkB,SAACX,EAAiB7uG,QAC7B6uG,gBAAkBA,OAClB9B,UAAUzD,0BACD,IAAHtpG,EAAmB/C,KACvBqwG,OAAOttG,QAEP6D,WAST8qG,EAAAtxG,UAAA2pE,OAAM,SAAC5F,OACC0tC,WDpFgB1tC,OAClB0tC,EAAI,GACNvqE,EAAK,sBAAyBhC,KAAK6+B,MACnC78B,EAAK,KAEDkrE,EAAgBlrE,EAAM,GAAG20D,WAAW,GACpCwW,EAAenrE,EAAM,GAAG20D,WAAW,GACrCD,OAAQ,MACPA,EAAWwW,EAAexW,GAAYyW,IAAgBzW,EACzD6V,EAAKvuG,KAAK6gE,EAAIlpD,QAAQqsB,EAAM,GAAI5/B,OAAO0hD,aAAa4yC,YAE/C6V,KAETvqE,EAAK,kBAAqBhC,KAAK6+B,GACtB,SAEDuuC,EAAOltE,SAAS8B,EAAM,GAAI,IACvBjmC,EAAImkC,SAAS8B,EAAM,GAAI,IAAKjmC,GAAKqxG,EAAMrxG,IAC9CwwG,EAAKvuG,KAAK6gE,EAAIlpD,QAAQqsB,EAAM,GAAIjmC,EAAEu3B,oBAE7Bi5E,SAETA,EAAKvuG,KAAK6gE,GACH0tC,EC6DQc,CAAUxuC,QAClB0tC,KAAOA,OACPC,QAAQD,IAQfH,EAAAtxG,UAAA0xG,QAAO,SAACD,QACDA,KAAOA,MACN9uG,EAAM8uG,EAAKpkG,KAAI,WACZkkG,yBAAwB3xG,KAC1BuyG,mBAAmBnB,GAAoBS,EAAI7xG,KAAO8U,UAAW/R,QAE7DstG,OAAOttG,IAUhB2uG,EAAAtxG,UAAAwxG,gBAAe,SAAC/tD,EAAWngB,EAAYvpB,KAUvCu3F,EAAAtxG,UAAAu4E,QAAO,SAACxE,EAAG3nE,EAAGC,OACNoqE,EAAem1B,GAAU73B,EAAG3nE,EAAGC,QAC5BqjG,UAAU1E,YAAYv0B,IAAY72E,KACpC8vG,UAAUznG,IAAIwuE,IAGzB66B,EA7LA,CAAsBW,GAAAnrG,meCkbnB,SACM0rG,GAAwBC,EAAW98C,GACQ88C,EAAUpvE,WAAYsyB,IACtEA,MAGJ+8C,GAzZA,SAAArvG,GAGK,SACHsvG,EAAY/nG,OAAZpH,EACEH,EAAAI,KAAA7D,KAAA,CACEgjE,aAAch4D,EAAQg4D,aACtB79B,UAAWn6B,EAAQm6B,UACnByqE,OAAQ5kG,EAAQ4kG,OAChBz1F,WAAYnP,EAAQmP,WACpB4f,MAAO/uB,EAAQ+uB,MACfjlB,SAAU9J,EAAQ8J,SAClButF,iBAAkBr3F,EAAQq3F,iBACtBr3F,EAAQq3F,iBACRuQ,GACJ/9B,eAAgB7pE,EAAQ6pE,eACxB+8B,gBAAiB5mG,EAAQ4mG,gBACzBztC,IAAKn5D,EAAQm5D,IACb0tC,KAAM7mG,EAAQ6mG,KACdzuC,MAAOp4D,EAAQo4D,MACf8T,WAAYlsE,EAAQksE,WACpBn0E,IAAKiI,EAAQjI,IACbmgE,wBAAyBl4D,EAAQk4D,wBACjCyR,WAAY3pE,EAAQ2pE,0BAOtB/wE,EAAKoyD,iBACqB9wD,IAAxB8F,EAAQgrD,YAA4BhrD,EAAQgrD,YAAc,KAM5DpyD,EAAKovG,eACmB9tG,IAAtB8F,EAAQgoG,UAA0BhoG,EAAQgoG,UAAYC,GAAA/rG,QAMxDtD,EAAKsvG,uBAAsB,GAM3BtvG,EAAKuvG,sBAAqB,GAM1BvvG,EAAKwvG,4BAA8BpoG,EAAQqoG,2BAM3CzvG,EAAKwlG,iBACwB,IAA3Bp+F,EAAQsoG,eAA2BnN,QAA2BjhG,EAMhEtB,EAAK2vG,0BAA2B,WArEZC,GAAAT,EAAAtvG,GA2EtBsvG,EAAA3yG,UAAAw1D,eAAc,mBAIHk6C,UAAUl6C,iBAAc,OACxB,UAEI7yD,KAAG/C,KAASkzG,+BACZA,uBAAuBnwG,GAAK6yD,iBAAc,OAC1C,SAIN,GAOTm9C,EAAA3yG,UAAA63E,YAAW,SAAC99D,EAAYm9D,OAKhBm8B,EAAazzG,KAAQmwG,0BAA0Bh2F,WAK1CyL,UAHNkqF,UAAU73B,YAAWj4E,KACnB8vG,WAAa2D,EAAgBn8B,EAAS,IAEhCt3E,KAASkzG,uBAAsB,KACpCpD,EAAS9vG,KAAQkzG,uBAAuBttF,GAC9CkqF,EAAU73B,YAAY63B,GAAa2D,EAAgBn8B,EAAS,MAOhEy7B,EAAA3yG,UAAAsjE,kBAAiB,uBACH0lC,iBAOd2J,EAAA3yG,UAAAu2E,uBAAsB,SAACx8D,UAEOna,KACrBwjE,iBACLrpD,IACC4B,GAAU/b,KAAMwjE,gBAAiBrpD,GAE3B,OAEKu5F,aAOhBX,EAAA3yG,UAAAszG,UAAS,kBACA,GAQTX,EAAA3yG,UAAA+3E,OAAM,kBAEF10E,EAAArD,UAAM+3E,OAAMt0E,KAAA7D,OAAAA,KACNopG,gBAAe,KAAUuK,KAAKC,UAAS5zG,KAAMopG,iBAAe,KAQtE2J,EAAA3yG,UAAA21E,UAAS,SAAC57D,WAEoBna,KACrBwjE,iBACLrpD,IACC4B,GAAU/b,KAAMwjE,gBAAiBrpD,KAI3B1W,EAAArD,UAAM21E,UAASlyE,KAAA7D,KAACma,IAQ3B44F,EAAA3yG,UAAAq0E,yBAAwB,SAACt6D,OAIjB05F,EAAQ7zG,KAAQwjE,yBACb1uD,UAAc++F,IAAY93F,GAAW83F,EAAU15F,QAGhD25F,EAAUvsG,GAAO4S,UACjB25F,KAAO9zG,KAASmzG,wBAAqBnzG,KACpCmzG,sBAAsBW,GACzB/E,GAAyB50F,SAEjBg5F,sBAAsBW,GAR8B,OAAA9zG,KACpD8U,UAehBi+F,EAAA3yG,UAAA+vG,0BAAyB,SAACh2F,OAIlB05F,EAAQ7zG,KAAQwjE,oBACjBqwC,GAAY93F,GAAW83F,EAAU15F,GAAU,OAAAna,KAClC8vG,cAENgE,EAAUvsG,GAAO4S,UACjB25F,KAAO9zG,KAASkzG,yBAAsBlzG,KACrCkzG,uBAAuBY,GAAO,IAAQ/D,GAAA7oG,QAASlH,KAC7C8vG,UAAU/E,qBAGPmI,uBAAuBY,IAcvCf,EAAA3yG,UAAA2zG,YAAW,SAAC5/B,EAAG3nE,EAAGC,EAAGi3B,EAAYvpB,EAAYpX,OACrC8gD,EAAS,CAAIswB,EAAG3nE,EAAGC,GACnBunG,EAAYh0G,KAAQuwG,+BACxB1sD,EACA1pC,GAEI85F,EAAUD,EAAYh0G,KACnB4xG,gBAAgBoC,EAActwE,EAAYvpB,QAC/CjV,EACE0+C,EAAI,IAAA5jD,KAAYgzG,UACpBnvD,OACY3+C,IAAZ+uG,EAAwB9gC,GAAiBA,QAC7BjuE,IAAZ+uG,EAAwBA,EAAO,GAAAj0G,KAC1Bg2D,YAAWh2D,KACXqiG,iBAAgBriG,KAChBiwG,oBAEPrsD,EAAK7gD,IAAMA,EACX6gD,EAAKz/C,iBAAiBqB,EAAgBxF,KAAOihF,iBAAiBr7E,KAAI5F,OAC3D4jD,GAWTmvD,EAAA3yG,UAAA8zE,QAAO,SAACC,EAAG3nE,EAAGC,EAAGi3B,EAAYvpB,OACrBgC,EAAgBnc,KAAQwjE,mBAG3BrnD,GACAhC,IACD4B,GAAWI,EAAkBhC,QAUvB+qB,EAAKllC,KAAQmwG,0BAA0Bh2F,GACvC0pC,EAAS,CAAIswB,EAAG3nE,EAAGC,GACrBm3C,OAAI,EACFizB,EAAeo1B,GAAOpoD,GACxB3e,EAAMkmE,YAAYv0B,KACpBjzB,EAAO1e,EAAM78B,IAAIwuE,QAEb9zE,EAAG/C,KAAQm4E,YACbv0B,GAAQA,EAAK7gD,KAAOA,EAAG,OAClB6gD,MAEDklD,EAAc9oG,KAAQy0E,yBAAyBt4D,GAC/C4sF,EAAc/oG,KAAQy0E,yBAAyBt6D,GAC/C6uF,EAAgBhpG,KAAQuwG,+BAC5B1sD,EACA1pC,GAEI+5F,EAAO,IAAOC,GAAAjtG,QAClBiV,EACA2sF,EACA3uF,EACA4uF,EACAllD,EACAmlD,EAAgBhpG,KACX80E,kBAAkBpxC,GAAU1jC,KAC5B0zG,YAAS,SACJU,EAAGtiG,EAAGI,EAAGmiG,eACLC,gBAAgBF,EAAGtiG,EAAGI,EAAGmiG,EAAYl4F,IACjDvW,KAAI5F,MAAAA,KACDozG,4BAA2BpzG,KAC3BuzG,yBAAwBvzG,KACxBopG,wBAEP8K,EAAQnxG,IAAMA,EAEV6gD,GACFswD,EAAQtS,YAAch+C,EACtBswD,EAAQjS,sBACR/8D,EAAMjqB,QAAQ47D,EAAcq9B,IAE5BhvE,EAAMp8B,IAAI+tE,EAAcq9B,GAEnBA,EApD8B,OAAAl0G,KAE3Bs0G,gBACVngC,EACA3nE,EACAC,EACAi3B,EACAvnB,GAAoBhC,IA2D1B44F,EAAA3yG,UAAAk0G,gBAAe,SAACngC,EAAG3nE,EAAGC,EAAGi3B,EAAYvpB,OAC/BypC,EAAO,KACLizB,EAAem1B,GAAU73B,EAAG3nE,EAAGC,GAC/B1J,EAAG/C,KAAQm4E,iBACP23B,UAAU1E,YAAYv0B,QAI9BjzB,EAAI5jD,KAAQ8vG,UAAUznG,IAAIwuE,IACjB9zE,KAAOA,EAAG,KAIX6+F,EAAch+C,EACpBA,EAAI5jD,KAAQ+zG,YAAY5/B,EAAG3nE,EAAGC,EAAGi3B,EAAYvpB,EAAYpX,GAGrD6+F,EAAYllE,YAAcy2C,GAE5BvvB,EAAKg+C,YAAcA,EAAYA,YAE/Bh+C,EAAKg+C,YAAcA,EAErBh+C,EAAKq+C,2BACA6N,UAAU70F,QAAQ47D,EAAcjzB,SAnBvCA,EAAI5jD,KAAQ+zG,YAAY5/B,EAAG3nE,EAAGC,EAAGi3B,EAAYvpB,EAAYpX,QACpD+sG,UAAUhnG,IAAI+tE,EAAcjzB,UAqB5BA,GAQTmvD,EAAA3yG,UAAAm0G,2BAA0B,SAACp4E,MAEIn8B,KACtBuzG,0BAA4Bp3E,WAKxBvW,UADN2tF,yBAA2Bp3E,EACnBn8B,KAASkzG,uBAAsBlzG,KACrCkzG,uBAAuBttF,GAAI4Y,aAE7B53B,YAePmsG,EAAA3yG,UAAAo0G,yBAAwB,SAACr6F,EAAYs6F,OAE3BC,EAAO35F,GAAcZ,MACvBu6F,EAAI,KACAZ,EAAUvsG,GAAOmtG,GACjBZ,KAAO9zG,KAASmzG,wBAAqBnzG,KACpCmzG,sBAAsBW,GAAWW,KAKhD1B,EA9YA,CAAwB4B,GAAAztG,meC2CxB0tG,GA1CA,SAAAnxG,GAGK,SACHoxG,EAAYj+E,OACJ5rB,EAAU4rB,GAAW,GACrBzc,OACmBjV,IAAvB8F,EAAQmP,WAA2BnP,EAAQmP,WAAU,YAEjDrF,OACiB5P,IAArB8F,EAAQ8J,SACJ9J,EAAQ8J,kBLcQ8hB,OAClBk+E,EAAal+E,GAAW,GAExB1oB,EAAS4mG,EAAW5mG,QAAU6M,GAAa,aAAc1G,YAEzD0gG,EAAW,CACf7mG,OAAQA,EACRorB,QAASw7E,EAAWx7E,QACpB+zE,SAAUyH,EAAWzH,SACrBnpB,YAAairB,GACXjhG,EACA4mG,EAAWv7E,QACXu7E,EAAWzH,SACXyH,EAAW17E,2BAGJqzE,GAASsI,GK7BZC,CAAS,CACP9mG,OAAQmhG,GAAqBl1F,GAC7Bif,cAAepuB,EAAQouB,cACvBG,QAASvuB,EAAQuuB,QACjBD,QAAStuB,EAAQsuB,QACjB+zE,SAAUriG,EAAQqiG,kBAG1B5pG,EAAAI,KAAA7D,KAAA,CACEgjE,aAAch4D,EAAQg4D,aACtB79B,UAAWn6B,EAAQm6B,UACnB6wB,YAAahrD,EAAQgrD,YACrBs9C,eAAgBtoG,EAAQsoG,eACxB1D,OAAQ5kG,EAAQ4kG,OAChBz1F,WAAYA,EACZk5F,2BAA4BroG,EAAQqoG,2BACpCv+F,SAAUA,EACVutF,iBAAkBr3F,EAAQq3F,iBAC1BxtB,eAAgB7pE,EAAQ6pE,eACxB+8B,gBAAiB5mG,EAAQ4mG,gBACzBztC,IAAKn5D,EAAQm5D,IACb0tC,KAAM7mG,EAAQ6mG,KACdzuC,WAAyBl+D,IAAlB8F,EAAQo4D,OAAsBp4D,EAAQo4D,MAC7C8T,WAAYlsE,EAAQksE,WACpBhU,wBAAyBl4D,EAAQk4D,wBACjCyR,WAAY3pE,EAAQ2pE,0BArCRsgC,GAAAJ,EAAApxG,GAwClBoxG,EAxCA,CAAkBK,GAAAhuG,meCvDLiuG,GAAW,2GA8ExBC,GAxCA,SAAA3xG,GAGK,SACH4xG,EAAYz+E,OAGNosC,EAFEh4D,EAAU4rB,GAAW,GAIzBosC,OAD2B99D,IAAzB8F,EAAQg4D,aACKh4D,EAAQg4D,aAEX,CAAImyC,QAGZn/C,OACoB9wD,IAAxB8F,EAAQgrD,YAA4BhrD,EAAQgrD,YAAW,YAEnDmO,OACYj/D,IAAhB8F,EAAQm5D,IACJn5D,EAAQm5D,IAAG,8DAGjB1gE,EAAAI,KAAA7D,KAAA,CACEgjE,aAAcA,EACdE,yBAAyB,EACzB/9B,UAAWn6B,EAAQm6B,UACnB6wB,YAAaA,EACbs9C,eAAgBtoG,EAAQsoG,eACxB/5E,aAA6Br0B,IAApB8F,EAAQuuB,QAAwBvuB,EAAQuuB,QAAU,GAC3Dq2E,YAA2B1qG,IAAnB8F,EAAQ4kG,QAAuB5kG,EAAQ4kG,OAC/CyD,2BAA4BroG,EAAQqoG,2BACpChR,iBAAkBr3F,EAAQq3F,iBAC1BnrB,WAAYlsE,EAAQksE,WACpB/S,IAAKA,EACLf,MAAOp4D,EAAQo4D,MACfuR,WAAY3pE,EAAQ2pE,0BAnCR2gC,GAAAD,EAAA5xG,GAsClB4xG,EAtCA,CAAkBE,GAAAruG,eC1CZsuG,GAAM,IAAOC,GAAAvuG,QAAS,CAC1BpE,OAAM,IAAM4yG,GAAAxuG,UAGRyuG,GAAM,IAAO3mC,GAAA9nE,QAAY,CAAEk8D,OAAO,IAElCwyC,GAAcjoG,SAAS0/E,eAAc,aAEvCwoB,GAAYC,GAAYF,GAAYttG,aAElCytG,GAAiBD,GAAW,WAE5BE,GAAM,IAAOjnC,GAAA7nE,QAAW,CAC5BpE,OAAQ6yG,KAGJM,GAAG,IAAOC,GAAAhvG,QAAG,CACjB40E,OAAM,CAAG05B,GAAQQ,IACjB71G,OAAM,MACNq1B,KAAI,IAAMm4D,GAAAzmF,QAAI,CACZiK,OAAM,EAAG,KAAW,MACpBwqB,KAAM,MAIJw6E,GAAaxoG,SAAS0/E,eAAc,YAEtC+oB,YACKC,QAGE,SAFKF,GAAW7tG,MAEL,KACduF,EACJgoG,KAAYhoG,EAAQioG,GAAYF,GAAYttG,QAC5C8tG,GAAI,IAAOE,EAAApvG,QAAI,CACbpE,OAAQ6yG,GACR51G,KAAMo2G,GAAW7tG,MACjBuF,MAAOA,IAETooG,GAAI5lB,eAAe+lB,KAQvBD,GAAWI,SAAQ,WACjBN,GAAIjjB,kBAAkBojB,IACtBC,MAGFT,GAAYW,SAAQ,WAClBV,GAAYC,GAAYF,GAAYttG,OACpC2tG,GAAIjjB,kBAAkBojB,IACtBC,YAGIG,GAAQ,OAEVC,GAAQ,YAgCHX,GAAYrxE,cACRiO,GAAK,CACdxG,KAAI,IAAM8D,GAAI,CACZvL,MAAK,6BAEPkI,OAAM,IAAMyD,GAAM,CAChB3L,MAAOA,EACP9xB,MAAO,MArCbhF,SAASxJ,iBAAgB,WAAU,SAAWM,IACxCA,EAAM6lE,QAAU7lE,EAAM+lE,SAAW/lE,EAAM8lE,UACzC0rC,GAAI7vG,GAAE,SAAQ,SAAYgG,GACxB6pG,GAAIplB,sBAAsBzkF,EAAEwgB,OAAK,SAAYvgB,UAC3CA,EAAEiZ,SAASywF,IACXS,GAASlzG,KAAK+I,IACP,WAOf2pG,GAAOv5E,YAAYr2B,GAAE,cAAa,SAAWgG,OACvCyB,EAAQioG,GAAYF,GAAYttG,OACpCkuG,GAAS76F,SAAO,SAAUs2B,GACxBA,EAAQ3sB,SAASzX,MAEnB2oG,GAASjxG,OAAO,EAAGixG,GAASp1G,QAE5BgL,EAAE6lC,QAAQtsB,OAAK,IAAK+pD,MAAOgnC,WAC3BD,GAASrqG,EAAE6lC,QAAQ1sB,SAAWswF,GAAU1oE,YAAYqB,WACpDmoE,aAAaC,QAAO,WAAajD,KAAKC,UAAU6C,KAEhDrqG,EAAE6lC,QAAQ3sB,SAASuwF,IACnBI,GAAIjjB,kBAAkBojB,IACtBC,QAiBF1oG,SAAS0/E,eAAc,qBAAsBlpF,iBAAgB,SAAQ,WACnEsyG,GAAQ,GACRA,GAAW9C,KAAKkD,MAAMF,aAAaG,QAAO,iBAEtCjpG,EAAQioG,GAAYF,GAAYttG,OACpCkuG,GAAS76F,SAAO,SAAUs2B,GACxBA,EAAQ3sB,SAASzX,GACjB4oG,GAASxkE,EAAQ1sB,SAAWqwF,GAAYttG,SAG1CkuG,GAASjxG,OAAO,EAAGixG,GAASp1G,QAC5Bu1G,aAAaC,QAAO,WAAajD,KAAKC,UAAU6C,QAGlD9oG,SAAS0/E,eAAc,QAASlpF,iBAAgB,SAAQ,WACtDiyG,GAAK5kC,qBAGP6kC","sources":["node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/Circle.js","node_modules/ol/src/Feature.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/easing.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/size.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/color.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/dom.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/Draw.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/TileState.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","main.js"],"sourcesContent":["/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in desccending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => (void|boolean)) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => (void|boolean)) => Return} CombinedOnSignature\n */\n\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.on = this.onInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.once = this.onceInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n     */\n    this.un = this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): (void|boolean)} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): (void|boolean)} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): (void|boolean)} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): (void|boolean)} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): (void|boolean)} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): (void|boolean)} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","import 'ol/ol.css';\n\nimport Draw from 'ol/interaction/Draw';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport Map from 'ol/Map';\nimport { OSM, Vector as VectorSource } from 'ol/source';\nimport { Fill, Stroke, Style } from 'ol/style';\nimport View from 'ol/View';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst source = new VectorSource({wrapX: false});\n\nconst colorSelect = document.getElementById('color')\n\nlet userStyle = createStyle(colorSelect.value);\n\nconst highlightStyle = createStyle(\"#3399CC\");\n\nconst vector = new VectorLayer({\n  source: source,\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4,\n  }),\n});\n\nconst typeSelect = document.getElementById('type');\n\nlet draw; // global so we can remove it later\nfunction addInteraction() {\n  const value = typeSelect.value;\n  \n  if (value !== 'None') {\n    let style;\n    userStyle ? style = createStyle(colorSelect.value) : null;\n    draw = new Draw({\n      source: source,\n      type: typeSelect.value,\n      style: style\n    })\n    map.addInteraction(draw);\n\n  }\n}\n\n/**\n * Handle change event.\n */\ntypeSelect.onchange = function () {\n  map.removeInteraction(draw);\n  addInteraction();\n};\n\ncolorSelect.onchange = function () {\n  userStyle = createStyle(colorSelect.value);\n  map.removeInteraction(draw);\n  addInteraction();\n}\n\nconst selected = []; //here features will be stored\n\nlet linesMap = {}; //here feature IDs and feature colors will be stored\n\ndocument.addEventListener('keydown', function(event) {  //filtering Ctrl, Alt and CMd click events\n  if (event.altKey || event.ctrlKey || event.metaKey) {\n    map.on('click', function (e) {\n      map.forEachFeatureAtPixel(e.pixel, function (f) {\n        f.setStyle(highlightStyle); //highlight selected features\n        selected.push(f);\n        return true;\n      });\n    });\n  }\n})\n\n// Handle event of creating new feature\nvector.getSource().on('addfeature', function(e) {\n  let style = createStyle(colorSelect.value)\n  selected.forEach(function(feature) {\n    feature.setStyle(style)\n  })\n  selected.splice(0, selected.length);\n\n  e.feature.setId(new Date().getTime());\n  linesMap[e.feature.getId()] = userStyle.getStroke().getColor();\n  localStorage.setItem('linesMap', JSON.stringify(linesMap));\n\n  e.feature.setStyle(userStyle);\n  map.removeInteraction(draw);\n  addInteraction();\n});\n\n// create style from given color\nfunction createStyle(color) {\n  return new Style({\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.2)',\n    }),\n    stroke: new Stroke({\n      color: color,\n      width: 2,\n    }),\n  })\n}\n\n//confirm changing color of selected features by clicking the button\ndocument.getElementById('changeColorButton').addEventListener('click', function () {\n  linesMap = {};\n  linesMap = JSON.parse(localStorage.getItem('linesMap'))\n\n  let style = createStyle(colorSelect.value)\n  selected.forEach(function(feature) {\n    feature.setStyle(style)\n    linesMap[feature.getId()] = colorSelect.value;\n\n  })\n  selected.splice(0, selected.length);\n  localStorage.setItem('linesMap', JSON.stringify(linesMap));\n})\n\ndocument.getElementById('undo').addEventListener('click', function () {\n  draw.removeLastPoint();\n});\n\naddInteraction();\n\n"],"names":["$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","disposed","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","arr","direction","n","length","i","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","push","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","len","ol_key","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$99fe3f3343ef18166bd431edc467d890$exports","default","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","obj","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","Math","PI","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","options","defineProperty","window","error","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","AssertionError","code","message","split","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","$af95442a94d1862a138c401177ef0c4b$var$transformStringDiv","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","transform","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$8fe041eefe2f7aaeb97e4d98623d5d5e$export$9099ad97b570f7c","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","slice","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$ab4e37d31d15614d","area","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$38622892ed79bdc7","corner","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","xs","ys","l","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$e08236045caaa3e1","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$8b6706701cd75ea9","coord1","coord2","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","vertices","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","forEach","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","j","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","deltaX","deltaY","k","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$a41f90da440d5a4a421775ee47a2c536$exports","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$a17c336463d573a615343832f6e09aa8$exports","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","ends","jj","$e77c4e5b410850de947101abf2038f54$var$Circle","Circle","setCenterAndRadius","$e77c4e5b410850de947101abf2038f54$var$__extends","circle","squaredDistance","delta","getRadius","getRadiusSquared_","getCenter","setCenter","setRadius","$57ce72c0539154dec2abdc81ffcff6df$exports","$e77c4e5b410850de947101abf2038f54$export$9099ad97b570f7c","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","styles_1","getZIndex","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","round","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","m","extrapolate","lo","hi","m0","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","map","opt_frameState","frameState","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","pixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","ends_","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getEnds","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","getFlatMidpoints","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","multiPoint","getPoint","$acd1b863667085614d305475fd6c1d27$exports","getPoints","points","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","opt_sides","opt_angle","sides","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","startAngle","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","newEndss","multiPolygon","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","interiorPoints","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","simplifiedEndss","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","getPolygon","prevEnds","$bffbcd35af658c4477627697774de1c2$exports","getPolygons","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","lastEnds","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","view","opt_duration","currentCenter","getCenterInternal","animateInternal","duration","easing","getConstrainedCenter","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","opt_options","map_","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","getActive","getMap","mapBrowserEvent","active","setMap","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","pointerEvents","clientX","clientY","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","stopEvent","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","event_1","pointerId","toString","$1ad0cf5090e3852174414bfc8cc27b9e$exports","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","Promise","resolve","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$a51010926fccd7fa7fa549e12811b655$exports","t1","h","t2","r1","e1","a1","h1","s","u","p","i1","_maxEntries","_minEntries","ceil","clear","n1","children","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","load","insert","_build","_splitRoot","r2","_insert","remove","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","opt_size","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","getScale","getRotation","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","color","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","setSize","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","context","labelOrImage","originX","originY","w","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","renderOptions_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getRadius2","getAngle","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","add","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometry_","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$a612282e1e1ae7dc","styles","white","blue","concat","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$1935b85c22cfc539ea58e141ab0b37d6$exports","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","overflow","beg_1","filter","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","offsetY","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_context","inversePixelTransform","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","preRender","postRender","getRenderTransform","offsetX","renderPixel","layerExtent","pixelToCoordinateTransform","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","result","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","coords","declutterImageWithText","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","isEmpty","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","getResolution","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","listenerKeys","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$e65a38a3837120ad833711b5930f5912$exports","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","loading","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","getGeometries","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","viewHints","multiWorld","getWrapX","endWorld","world","layerIndex","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","parseFloat","transforms","features","imageSmoothingEnabled","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","item","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","userProjection","loadFeatures","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$ac230d10056414a40eb774bd091234f1$exports","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","element","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","uid","update","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getContextOptions","refresh","setAttributions","setState","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","dataProjection","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","$e6a59fbd122f687b33c2f382a3c7634b$exports","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","var_args","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","shiftKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","getTargetElement","hasAttribute","contains","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","button","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerEvent","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$3956bcefc4b1abdecaad9000c62943bf$var$Mode","$3956bcefc4b1abdecaad9000c62943bf$var$DrawEventType","$3956bcefc4b1abdecaad9000c62943bf$export$d033e6c8dad0c17","DrawEvent","$3956bcefc4b1abdecaad9000c62943bf$var$__extends","$3956bcefc4b1abdecaad9000c62943bf$export$d9c7a3c9cb1c3b30","opt_geometry","fromCircle","$e77c4e5b410850de947101abf2038f54$exports","makeRegular","$3956bcefc4b1abdecaad9000c62943bf$export$148b89109fc76eea","boxCoordinates","$3956bcefc4b1abdecaad9000c62943bf$export$9099ad97b570f7c","Draw","pointerOptions","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","mode_","$3956bcefc4b1abdecaad9000c62943bf$var$getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","$76e99b295c09c7c5e340e251e89879b1$exports","geometryName","condition_","condition","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","move","Date","now","clearTimeout","addToDrawing_","handlePointerMove_","startDrawing_","setTimeout","$5185059e8a82c1ae03c4e1ba7159b318$exports","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","getPixelFromCoordinate","$fe05caf5f991aea82bd67c9bebabc467$exports","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","getView","removeLastPoint","sketchFeature","abortDrawing_","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","$3f89ce735a32ce0bc16220a89ae67b2f$exports","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","$0714aed143b912743afff175db44c1dc$exports","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","getUseInterimTilesOnError","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","getHeight","$6a958d3d10a45fbc13d601def6cb4731$export$ea8082d0226d35a5","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","tileState","getTile","z","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tileResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","time","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","tileSource1","frameState1","tileSourceKey","expireCache","postRenderFunctions","getKey","opt_tileCallback","wantedTiles","tileQueue","tileCount","isKeyQueued","enqueue","getTileCoordCenter","useTile","updateCacheSize","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$21101e8f6691f861098a74ca233ba3e1$exports","$ab70eb0a0a56b112261264db1ea7acab$exports","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","inView","callback_1","order","forEachLayerAtPixel","hasFeatureAtCoordinate","scheduleExpireIconCache","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","declutterLayers","previousElement","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","$52488a0195cf0e38344877f5a3896831$exports","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","newEvent","newEvent1","updateActivePointers_","handlePointerUp_","isMouseActionButton_","doc","getOwnerDocument","getRootNode","isMoving_","cancelable","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileCenter","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getUpdatedOptions_","newOptions","isDef","resolveConstraints","animationCount","series","complete","setHint","updateAnimations_","getInteracting","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","fromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","targetZoom","opt_direction","targetRes","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getOverlayById","getLoading","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","hints","lowOnFrameBudget","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","setLayerGroup","setView","computedStyle","offsetWidth","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","zoomByDelta","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","getDistance","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","factor","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$6ea2e09c0ee686e4fcf344e90f929221$export$9099ad97b570f7c","Tile","interimTile","transition_","transitionStarts_","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","release","refreshInterimChain","getTileCoord","$69031f3b45b1bb2d223c45e6bbe47b36$export$9099ad97b570f7c","ImageTile","tileLoadFunction","tileLoadFunction_","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","naturalWidth","naturalHeight","$6ea2e09c0ee686e4fcf344e90f929221$exports","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$5f986e3acaff8610","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","v1","v2","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$792a797b69be0d58","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$916dab65013919ad0345478f9a9f4e0f$export$27dc5719ceda6735","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","steps","$97e37be8733b1927a1ed959b854a8d18$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$7e4c33869bbc09ad771e58efcd7791e2$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$97e37be8733b1927a1ed959b854a8d18$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$ea8082d0226d35a5","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$1039fb0288fd71e3","$c98d704946f2a3a0e1335bd43bccb465$export$a0f0ccbe5bbc0789","$8328c42c04c9adada69111ec662476d9$export$9099ad97b570f7c","TileCache","$8328c42c04c9adada69111ec662476d9$var$__extends","pruneExceptNewestZ","$c98d704946f2a3a0e1335bd43bccb465$export$5208a752d34424e5","$6fb7cf65abcfc8d879372ec2dca0d0b8$export$9099ad97b570f7c","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$57c49ef1657592d4","$0b7f50deff6bfc90c8b239d5ceca7010$export$9666e825b22d806d","$0b7f50deff6bfc90c8b239d5ceca7010$export$6dfef52f91d4f582","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$8328c42c04c9adada69111ec662476d9$exports","tmpSize","tileOptions","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$0b7f50deff6bfc90c8b239d5ceca7010$export$5a0d9577a24f3c5b","$c98d704946f2a3a0e1335bd43bccb465$export$b46b80619528d4e5","$cde35ab3df9629f8ffd26ea2f187b41e$export$8434c8db61edbf9d","TileSourceEvent","$cde35ab3df9629f8ffd26ea2f187b41e$export$9099ad97b570f7c","$f3b33fdefe65058178a4b532c7b3f14b$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$f3b33fdefe65058178a4b532c7b3f14b$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$c98d704946f2a3a0e1335bd43bccb465$export$4639c7f2947f4458","$f3b33fdefe65058178a4b532c7b3f14b$export$c6a04e0c49b28953","$671acdd0ca89710db49a7e8e41335e8e$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$cde35ab3df9629f8ffd26ea2f187b41e$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$f3b33fdefe65058178a4b532c7b3f14b$export$47abe479fba0e55d","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","imageTile","$f1c529d0542d6a8d6fa77a64fa516101$export$9099ad97b570f7c","TileImage","tileClass","$69031f3b45b1bb2d223c45e6bbe47b36$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$97e37be8733b1927a1ed959b854a8d18$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$671acdd0ca89710db49a7e8e41335e8e$exports","$fd3ab3577c0c67d5f04f77f7494fe563$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$0b7f50deff6bfc90c8b239d5ceca7010$export$5731532c605ee56","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$f1c529d0542d6a8d6fa77a64fa516101$exports","$ff8235042efbfb69f46b35131190fa2b$export$bd9c1867755cf54e","$ff8235042efbfb69f46b35131190fa2b$export$9099ad97b570f7c","OSM","$ff8235042efbfb69f46b35131190fa2b$var$__extends","$fd3ab3577c0c67d5f04f77f7494fe563$exports","$fa8fdebac07669d2ee57fbf926837b94$var$raster","$7f639b92eb9591e7aded56644548f656$exports","$ff8235042efbfb69f46b35131190fa2b$exports","$fa8fdebac07669d2ee57fbf926837b94$var$source","$fa8fdebac07669d2ee57fbf926837b94$var$colorSelect","$fa8fdebac07669d2ee57fbf926837b94$var$userStyle","$fa8fdebac07669d2ee57fbf926837b94$var$createStyle","$fa8fdebac07669d2ee57fbf926837b94$var$highlightStyle","$fa8fdebac07669d2ee57fbf926837b94$var$vector","$fa8fdebac07669d2ee57fbf926837b94$var$map","$976448907138da16f7612e32ecc55ac7$exports","$fa8fdebac07669d2ee57fbf926837b94$var$typeSelect","$fa8fdebac07669d2ee57fbf926837b94$var$draw","$fa8fdebac07669d2ee57fbf926837b94$var$addInteraction","$3956bcefc4b1abdecaad9000c62943bf$exports","onchange","$fa8fdebac07669d2ee57fbf926837b94$var$selected","$fa8fdebac07669d2ee57fbf926837b94$var$linesMap","getTime","localStorage","setItem","parse","getItem"],"version":3,"file":"index.fa64336d.js.map"}